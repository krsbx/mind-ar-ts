/*! For license information please see mindar-image-three.prod.js.LICENSE.txt */
(()=>{var t={485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var r=n(81),i=n.n(r),s=n(645),a=n.n(s)()(i());a.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0)}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const o=a},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,i,s){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(a[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);r&&a[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},81:t=>{"use strict";t.exports=function(t){return t[1]}},720:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var i={},s={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=s[t])?r:(n=l(t,(0|t)<0?-1:0,!0),a&&(s[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=i[t])?r:(n=l(t,t<0?-1:0,!1),a&&(i[t]=n),n)}function o(t,e){if(isNaN(t))return e?x:g;if(e){if(t<0)return x;if(t>=p)return S}else{if(t<=-f)return _;if(t+1>=f)return w}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var i=o(u(n,8)),s=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),h=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));s=s.mul(d).add(o(h))}else s=(s=s.mul(i)).add(o(h))}return s.unsigned=e,s}function h(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?c(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var x=a(0,!0);n.UZERO=x;var y=a(1);n.ONE=y;var v=a(1,!0);n.UONE=v;var b=a(-1);n.NEG_ONE=b;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var S=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=S;var _=l(0,-2147483648,!1);n.MIN_VALUE=_;var k=n.prototype;k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},k.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(_)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var i=o(u(t,6),this.unsigned),s=this,a="";;){var l=s.div(i),c=(s.sub(l.mul(i)).toInt()>>>0).toString(t);if((s=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(_)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},k.isZero=function(){return 0===this.high&&0===this.low},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return 1==(1&this.low)},k.isEven=function(){return 0==(1&this.low)},k.equals=function(t){return r(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},k.eq=k.equals,k.notEquals=function(t){return!this.eq(t)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(t){return this.comp(t)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(t){return this.comp(t)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(t){return this.comp(t)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(t){return this.comp(t)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(t){if(r(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(_)?_:this.not().add(y)},k.neg=k.negate,k.add=function(t){r(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,i=this.low>>>16,s=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=s+(65535&t.low))>>>16,d+=(p+=i+u)>>>16,c+=(d+=n+o)>>>16,c+=e+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},k.subtract=function(t){return r(t)||(t=h(t)),this.add(t.neg())},k.sub=k.subtract,k.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=h(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(_))return t.isOdd()?_:g;if(t.eq(_))return this.isOdd()?_:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=65535&this.high,s=this.low>>>16,a=65535&this.low,u=t.high>>>16,c=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,x=0,y=0,v=0;return y+=(v+=a*p)>>>16,x+=(y+=s*p)>>>16,y&=65535,x+=(y+=a*d)>>>16,f+=(x+=i*p)>>>16,x&=65535,f+=(x+=s*d)>>>16,x&=65535,f+=(x+=a*c)>>>16,f+=n*p+i*d+s*c+a*u,l((y&=65535)<<16|(v&=65535),(f&=65535)<<16|(x&=65535),this.unsigned)},k.mul=k.multiply,k.divide=function(t){if(r(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,i,s;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return x;if(t.gt(this.shru(1)))return v;s=x}else{if(this.eq(_))return t.eq(y)||t.eq(b)?_:t.eq(_)?y:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?y:b:(i=this.sub(t.mul(n)),s=n.add(i.div(t)));if(t.eq(_))return this.unsigned?x:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=g}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(i);)p=(d=o(n-=c,this.unsigned)).mul(t);d.isZero()&&(d=y),s=s.add(d),i=i.sub(p)}return s},k.div=k.divide,k.modulo=function(t){return r(t)||(t=h(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return l(~this.low,~this.high,this.unsigned)},k.and=function(t){return r(t)||(t=h(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},k.or=function(t){return r(t)||(t=h(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},k.xor=function(t){return r(t)||(t=h(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},k.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},k.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},k.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},377:(t,e,n)=>{var r=n(832),i=n(652),s=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var r;!function(t,i,s){function a(t){var e,n=this,r=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,s=e.i;return e.w=r=r+1640531527|0,n=i[s+34&127],t=i[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,i,s,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),i=0,s=-32;s<l;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(e&&e.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;t.w=a,t.X=o,t.i=i}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.X&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.x&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,i,s){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,i))||(i.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:function(t,e,n){var r;!function(i,s,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=x(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(s)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(i.crypto||i.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,y(s)]}}():t,3),r),p=new f(r),v=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,x(y(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(a.random=t,e):t})(v,d,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+t[i%n]+(e=a[i])],a[s]=e;(r.g=function(t){for(var e,n=0,i=r.i,s=r.j,a=r.S;t--;)e=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+e])+(a[s]=e)];return r.i=i,r.j=s,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],i=typeof t;if(e&&"object"==i)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==i?t:t+"\0"}function x(t,e){for(var n,r=t+"",i=0;i<r.length;)e[d&i]=d&(n^=19*e[d&i])+r.charCodeAt(i++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(x(a.random(),s),t.exports){t.exports=p;try{o=n(42)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}("undefined"!=typeof self?self:this,[],Math)},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var s={},a=[],o=0;o<t.length;o++){var l=t[o],u=r.base?l[0]+r.base:l[0],c=s[u]||0,h="".concat(u," ").concat(c);s[u]=c+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=i(p,r);r.byIndex=o,e.splice(o,0,{identifier:h,updater:f,references:1})}a.push(h)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var s=r(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<s.length;a++){var o=n(s[a]);e[o].references--}for(var l=r(t,i),u=0;u<s.length;u++){var c=n(s[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}s=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},477:t=>{"use strict";t.exports=function(t,e,n,r){var i=self||window;try{try{var s;try{s=new i.Blob([t])}catch(e){(s=new(i.BlobBuilder||i.WebKitBlobBuilder||i.MozBlobBuilder||i.MSBlobBuilder)).append(t),s=s.getBlob()}var a=i.URL||i.webkitURL,o=a.createObjectURL(s),l=new i[e](o,n);return a.revokeObjectURL(o),l}catch(r){return new i[e]("data:application/javascript,".concat(encodeURIComponent(t)),n)}}catch(t){if(!r)throw Error("Inline worker is not supported");return new i[e](r,n)}}},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.nc=void 0,(()=>{"use strict";var t={};n.r(t),n.d(t,{ACESFilmicToneMapping:()=>st,AddEquation:()=>C,AddOperation:()=>tt,AdditiveAnimationBlendMode:()=>Ne,AdditiveBlending:()=>k,AlphaFormat:()=>Pt,AlwaysDepth:()=>H,AlwaysStencilFunc:()=>an,AmbientLight:()=>Xh,AmbientLightProbe:()=>hd,AnimationClip:()=>yh,AnimationLoader:()=>Th,AnimationMixer:()=>Bd,AnimationObjectGroup:()=>Pd,AnimationUtils:()=>sh,ArcCurve:()=>_u,ArrayCamera:()=>el,ArrowHelper:()=>Np,Audio:()=>_d,AudioAnalyser:()=>Ed,AudioContext:()=>ld,AudioListener:()=>Sd,AudioLoader:()=>ud,AxesHelper:()=>Rp,BackSide:()=>y,BasicDepthPacking:()=>Pe,BasicShadowMap:()=>p,Bone:()=>Wl,BooleanKeyframeTrack:()=>hh,Box2:()=>Jd,Box3:()=>dr,Box3Helper:()=>Mp,BoxBufferGeometry:()=>ds,BoxGeometry:()=>ds,BoxHelper:()=>Ip,BufferAttribute:()=>Ci,BufferGeometry:()=>ji,BufferGeometryLoader:()=>ed,ByteType:()=>Tt,Cache:()=>bh,Camera:()=>xs,CameraHelper:()=>Sp,CanvasTexture:()=>bu,CapsuleBufferGeometry:()=>Gu,CapsuleGeometry:()=>Gu,CatmullRomCurve3:()=>Eu,CineonToneMapping:()=>it,CircleBufferGeometry:()=>Hu,CircleGeometry:()=>Hu,ClampToEdgeWrapping:()=>ft,Clock:()=>gd,Color:()=>Xn,ColorKeyframeTrack:()=>dh,ColorManagement:()=>Un,CompressedTexture:()=>vu,CompressedTextureLoader:()=>Ch,ConeBufferGeometry:()=>qu,ConeGeometry:()=>qu,CubeCamera:()=>bs,CubeReflectionMapping:()=>lt,CubeRefractionMapping:()=>ut,CubeTexture:()=>ws,CubeTextureLoader:()=>Ah,CubeUVReflectionMapping:()=>dt,CubicBezierCurve:()=>Du,CubicBezierCurve3:()=>Lu,CubicInterpolant:()=>oh,CullFaceBack:()=>c,CullFaceFront:()=>h,CullFaceFrontBack:()=>d,CullFaceNone:()=>u,Curve:()=>wu,CurvePath:()=>Uu,CustomBlending:()=>T,CustomToneMapping:()=>at,CylinderBufferGeometry:()=>ju,CylinderGeometry:()=>ju,Cylindrical:()=>Yd,Data3DTexture:()=>sr,DataArrayTexture:()=>rr,DataTexture:()=>Vl,DataTexture2DArray:()=>Vp,DataTexture3D:()=>Gp,DataTextureLoader:()=>Nh,DataUtils:()=>$p,DecrementStencilOp:()=>Xe,DecrementWrapStencilOp:()=>Ye,DefaultLoadingManager:()=>Sh,DepthFormat:()=>Wt,DepthStencilFormat:()=>Vt,DepthTexture:()=>sl,DirectionalLight:()=>qh,DirectionalLightHelper:()=>vp,DiscreteInterpolant:()=>uh,DodecahedronBufferGeometry:()=>Ku,DodecahedronGeometry:()=>Ku,DoubleSide:()=>v,DstAlphaFactor:()=>z,DstColorFactor:()=>U,DynamicCopyUsage:()=>fn,DynamicDrawUsage:()=>ln,DynamicReadUsage:()=>hn,EdgesGeometry:()=>tc,EllipseCurve:()=>Su,EqualDepth:()=>X,EqualStencilFunc:()=>tn,EquirectangularReflectionMapping:()=>ct,EquirectangularRefractionMapping:()=>ht,Euler:()=>Yr,EventDispatcher:()=>vn,ExtrudeBufferGeometry:()=>Ec,ExtrudeGeometry:()=>Ec,FileLoader:()=>Mh,FlatShading:()=>b,Float16BufferAttribute:()=>$i,Float32BufferAttribute:()=>Pi,Float64BufferAttribute:()=>Oi,FloatType:()=>Rt,Fog:()=>dl,FogExp2:()=>hl,Font:()=>Bp,FontLoader:()=>zp,FramebufferTexture:()=>yu,FrontSide:()=>x,Frustum:()=>Es,GLBufferAttribute:()=>Hd,GLSL1:()=>gn,GLSL3:()=>xn,GreaterDepth:()=>Y,GreaterEqualDepth:()=>K,GreaterEqualStencilFunc:()=>sn,GreaterStencilFunc:()=>nn,GridHelper:()=>fp,Group:()=>nl,HalfFloatType:()=>Dt,HemisphereLight:()=>Lh,HemisphereLightHelper:()=>pp,HemisphereLightProbe:()=>cd,IcosahedronBufferGeometry:()=>Nc,IcosahedronGeometry:()=>Nc,ImageBitmapLoader:()=>ad,ImageLoader:()=>Eh,ImageUtils:()=>Yn,ImmediateRenderObject:()=>Up,IncrementStencilOp:()=>qe,IncrementWrapStencilOp:()=>Ke,InstancedBufferAttribute:()=>ql,InstancedBufferGeometry:()=>td,InstancedInterleavedBuffer:()=>Gd,InstancedMesh:()=>Jl,Int16BufferAttribute:()=>Ri,Int32BufferAttribute:()=>Li,Int8BufferAttribute:()=>Ei,IntType:()=>At,InterleavedBuffer:()=>fl,InterleavedBufferAttribute:()=>gl,Interpolant:()=>ah,InterpolateDiscrete:()=>ke,InterpolateLinear:()=>Ie,InterpolateSmooth:()=>Me,InvertStencilOp:()=>Ze,KeepStencilOp:()=>He,KeyframeTrack:()=>ch,LOD:()=>Fl,LatheBufferGeometry:()=>Vu,LatheGeometry:()=>Vu,Layers:()=>Zr,LessDepth:()=>j,LessEqualDepth:()=>q,LessEqualStencilFunc:()=>en,LessStencilFunc:()=>Qe,Light:()=>Dh,LightProbe:()=>Zh,Line:()=>su,Line3:()=>ep,LineBasicMaterial:()=>Ql,LineCurve:()=>Fu,LineCurve3:()=>$u,LineDashedMaterial:()=>Jc,LineLoop:()=>uu,LineSegments:()=>lu,LinearEncoding:()=>Fe,LinearFilter:()=>wt,LinearInterpolant:()=>lh,LinearMipMapLinearFilter:()=>It,LinearMipMapNearestFilter:()=>_t,LinearMipmapLinearFilter:()=>kt,LinearMipmapNearestFilter:()=>St,LinearSRGBColorSpace:()=>Ve,LinearToneMapping:()=>nt,Loader:()=>_h,LoaderUtils:()=>Qh,LoadingManager:()=>wh,LoopOnce:()=>we,LoopPingPong:()=>_e,LoopRepeat:()=>Se,LuminanceAlphaFormat:()=>Ut,LuminanceFormat:()=>Bt,MOUSE:()=>o,Material:()=>ki,MaterialLoader:()=>Jh,MathUtils:()=>Nn,Matrix3:()=>Dn,Matrix4:()=>Br,MaxEquation:()=>R,Mesh:()=>cs,MeshBasicMaterial:()=>Ii,MeshDepthMaterial:()=>Ko,MeshDistanceMaterial:()=>Yo,MeshLambertMaterial:()=>Yc,MeshMatcapMaterial:()=>Zc,MeshNormalMaterial:()=>Kc,MeshPhongMaterial:()=>qc,MeshPhysicalMaterial:()=>jc,MeshStandardMaterial:()=>Hc,MeshToonMaterial:()=>Xc,MinEquation:()=>N,MirroredRepeatWrapping:()=>mt,MixOperation:()=>Q,MultiplyBlending:()=>M,MultiplyOperation:()=>J,NearestFilter:()=>gt,NearestMipMapLinearFilter:()=>bt,NearestMipMapNearestFilter:()=>yt,NearestMipmapLinearFilter:()=>vt,NearestMipmapNearestFilter:()=>xt,NeverDepth:()=>G,NeverStencilFunc:()=>Je,NoBlending:()=>S,NoColorSpace:()=>Ue,NoToneMapping:()=>et,NormalAnimationBlendMode:()=>Ae,NormalBlending:()=>_,NotEqualDepth:()=>Z,NotEqualStencilFunc:()=>rn,NumberKeyframeTrack:()=>ph,Object3D:()=>hi,ObjectLoader:()=>nd,ObjectSpaceNormalMap:()=>Be,OctahedronBufferGeometry:()=>Rc,OctahedronGeometry:()=>Rc,OneFactor:()=>L,OneMinusDstAlphaFactor:()=>B,OneMinusDstColorFactor:()=>W,OneMinusSrcAlphaFactor:()=>O,OneMinusSrcColorFactor:()=>$,OrthographicCamera:()=>Ws,PCFShadowMap:()=>f,PCFSoftShadowMap:()=>m,PMREMGenerator:()=>Ys,ParametricGeometry:()=>Pp,Path:()=>Wu,PerspectiveCamera:()=>ys,Plane:()=>Ms,PlaneBufferGeometry:()=>Rs,PlaneGeometry:()=>Rs,PlaneHelper:()=>Tp,PointLight:()=>Hh,PointLightHelper:()=>up,Points:()=>mu,PointsMaterial:()=>cu,PolarGridHelper:()=>mp,PolyhedronBufferGeometry:()=>Xu,PolyhedronGeometry:()=>Xu,PositionalAudio:()=>Cd,PropertyBinding:()=>$d,PropertyMixer:()=>Ad,QuadraticBezierCurve:()=>Pu,QuadraticBezierCurve3:()=>Ou,Quaternion:()=>lr,QuaternionKeyframeTrack:()=>mh,QuaternionLinearInterpolant:()=>fh,REVISION:()=>a,RGBADepthPacking:()=>Oe,RGBAFormat:()=>zt,RGBAIntegerFormat:()=>Xt,RGBA_ASTC_10x10_Format:()=>xe,RGBA_ASTC_10x5_Format:()=>fe,RGBA_ASTC_10x6_Format:()=>me,RGBA_ASTC_10x8_Format:()=>ge,RGBA_ASTC_12x10_Format:()=>ye,RGBA_ASTC_12x12_Format:()=>ve,RGBA_ASTC_4x4_Format:()=>ae,RGBA_ASTC_5x4_Format:()=>oe,RGBA_ASTC_5x5_Format:()=>le,RGBA_ASTC_6x5_Format:()=>ue,RGBA_ASTC_6x6_Format:()=>ce,RGBA_ASTC_8x5_Format:()=>he,RGBA_ASTC_8x6_Format:()=>de,RGBA_ASTC_8x8_Format:()=>pe,RGBA_BPTC_Format:()=>be,RGBA_ETC2_EAC_Format:()=>se,RGBA_PVRTC_2BPPV1_Format:()=>ne,RGBA_PVRTC_4BPPV1_Format:()=>ee,RGBA_S3TC_DXT1_Format:()=>Yt,RGBA_S3TC_DXT3_Format:()=>Zt,RGBA_S3TC_DXT5_Format:()=>Jt,RGBFormat:()=>Ot,RGB_ETC1_Format:()=>re,RGB_ETC2_Format:()=>ie,RGB_PVRTC_2BPPV1_Format:()=>te,RGB_PVRTC_4BPPV1_Format:()=>Qt,RGB_S3TC_DXT1_Format:()=>Kt,RGFormat:()=>jt,RGIntegerFormat:()=>qt,RawShaderMaterial:()=>Gc,Ray:()=>zr,Raycaster:()=>jd,RectAreaLight:()=>Kh,RedFormat:()=>Gt,RedIntegerFormat:()=>Ht,ReinhardToneMapping:()=>rt,RepeatWrapping:()=>pt,ReplaceStencilOp:()=>je,ReverseSubtractEquation:()=>A,RingBufferGeometry:()=>Dc,RingGeometry:()=>Dc,SRGBColorSpace:()=>We,Scene:()=>pl,ShaderChunk:()=>Ds,ShaderLib:()=>Fs,ShaderMaterial:()=>gs,ShadowMaterial:()=>Vc,Shape:()=>ec,ShapeBufferGeometry:()=>Lc,ShapeGeometry:()=>Lc,ShapePath:()=>Dp,ShapeUtils:()=>Mc,ShortType:()=>Ct,Skeleton:()=>jl,SkeletonHelper:()=>op,SkinnedMesh:()=>Ul,SmoothShading:()=>w,Source:()=>Zn,Sphere:()=>Nr,SphereBufferGeometry:()=>Fc,SphereGeometry:()=>Fc,Spherical:()=>Kd,SphericalHarmonics3:()=>Yh,SplineCurve:()=>zu,SpotLight:()=>Bh,SpotLightHelper:()=>rp,Sprite:()=>Nl,SpriteMaterial:()=>xl,SrcAlphaFactor:()=>P,SrcAlphaSaturateFactor:()=>V,SrcColorFactor:()=>F,StaticCopyUsage:()=>pn,StaticDrawUsage:()=>on,StaticReadUsage:()=>cn,StereoCamera:()=>md,StreamCopyUsage:()=>mn,StreamDrawUsage:()=>un,StreamReadUsage:()=>dn,StringKeyframeTrack:()=>gh,SubtractEquation:()=>E,SubtractiveBlending:()=>I,TOUCH:()=>l,TangentSpaceNormalMap:()=>ze,TetrahedronBufferGeometry:()=>$c,TetrahedronGeometry:()=>$c,TextGeometry:()=>Op,Texture:()=>tr,TextureLoader:()=>Rh,TorusBufferGeometry:()=>Pc,TorusGeometry:()=>Pc,TorusKnotBufferGeometry:()=>Oc,TorusKnotGeometry:()=>Oc,Triangle:()=>Si,TriangleFanDrawMode:()=>Le,TriangleStripDrawMode:()=>De,TrianglesDrawMode:()=>Re,TubeBufferGeometry:()=>zc,TubeGeometry:()=>zc,UVMapping:()=>ot,Uint16BufferAttribute:()=>Di,Uint32BufferAttribute:()=>Fi,Uint8BufferAttribute:()=>Ai,Uint8ClampedBufferAttribute:()=>Ni,Uniform:()=>Ud,UniformsGroup:()=>Vd,UniformsLib:()=>Ls,UniformsUtils:()=>ms,UnsignedByteType:()=>Mt,UnsignedInt248Type:()=>$t,UnsignedIntType:()=>Nt,UnsignedShort4444Type:()=>Lt,UnsignedShort5551Type:()=>Ft,UnsignedShortType:()=>Et,VSMShadowMap:()=>g,Vector2:()=>Rn,Vector3:()=>ur,Vector4:()=>er,VectorKeyframeTrack:()=>xh,VideoTexture:()=>xu,WebGL1Renderer:()=>cl,WebGL3DRenderTarget:()=>ar,WebGLArrayRenderTarget:()=>ir,WebGLCubeRenderTarget:()=>Ss,WebGLMultipleRenderTargets:()=>or,WebGLMultisampleRenderTarget:()=>Wp,WebGLRenderTarget:()=>nr,WebGLRenderer:()=>ul,WebGLUtils:()=>tl,WireframeGeometry:()=>Bc,WrapAroundEnding:()=>Ee,ZeroCurvatureEnding:()=>Te,ZeroFactor:()=>D,ZeroSlopeEnding:()=>Ce,ZeroStencilOp:()=>Ge,_SRGBAFormat:()=>yn,sRGBEncoding:()=>$e});var e={};n.r(e),n.d(e,{assertParamsValid:()=>ob,computeFlatOffset:()=>bb,computeOutShape:()=>ub,getNormalizedAxes:()=>pb,isSliceContinous:()=>vb,maskToAxes:()=>lb,parseSliceParams:()=>wb,sliceInfo:()=>Sb,startForAxis:()=>xb,startIndicesWithElidedDims:()=>fb,stopForAxis:()=>yb,stopIndicesWithElidedDims:()=>mb,stridesForAxis:()=>gb,stridesWithElidedDims:()=>cb});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>hI,computeOutShape:()=>cI,segOpComputeOptimalWindowSize:()=>uI});var i={};n.r(i),n.d(i,{ERF_A1:()=>Ak,ERF_A2:()=>Nk,ERF_A3:()=>Rk,ERF_A4:()=>Dk,ERF_A5:()=>Lk,ERF_P:()=>Ek,PARALLELIZE_THRESHOLD:()=>mk,RowPartitionType:()=>ck,SELU_SCALE:()=>Ck,SELU_SCALEALPHA:()=>Tk,applyActivation:()=>n_,assertAndGetBroadcastShape:()=>ab,assertAxesAreInnerMostDims:()=>nS,assertParamsConsistent:()=>lk,assignToTypedArray:()=>Bk,axesAreInnerMostDims:()=>Jw,calculateShapes:()=>Mk,checkEinsumDimSizes:()=>jk,checkPadOnDimRoundingMode:()=>ew,combineLocations:()=>Qw,combineRaggedTensorToTensorShapes:()=>hk,complexWithEvenIndex:()=>Pk,complexWithOddIndex:()=>Ok,computeConv2DInfo:()=>Hb,computeConv3DInfo:()=>jb,computeDefaultPad:()=>qb,computeDilation2DInfo:()=>Wb,computeOptimalWindowSize:()=>gk,computeOutAndReduceShapes:()=>tS,computeOutShape:()=>uk,computePool2DInfo:()=>Vb,computePool3DInfo:()=>Gb,convertConv2DDataFormat:()=>tw,decodeEinsumEquation:()=>Gk,eitherStridesOrDilationsAreOne:()=>Qb,expandShapeToKeepDim:()=>eS,exponent:()=>Wk,exponents:()=>Uk,fromStringArrayToUint8:()=>pI,fromUint8ToStringArray:()=>dI,getAxesPermutation:()=>rS,getBroadcastDims:()=>ib,getComplexWithIndex:()=>zk,getEinsumComputePath:()=>qk,getEinsumPermutation:()=>Hk,getFusedBiasGradient:()=>e_,getFusedDyActivation:()=>t_,getImageCenter:()=>xk,getInnerMostAxes:()=>sS,getPermuted:()=>vk,getRaggedRank:()=>pk,getReductionAxes:()=>sb,getReshaped:()=>yk,getReshapedPermuted:()=>bk,getRowPartitionTypesHelper:()=>dk,getSliceBeginCoords:()=>wk,getSliceSize:()=>Sk,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Zk,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Jk,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Qk,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>nI,getSparseReshapeInputOutputMismatchErrorMessage:()=>iI,getSparseReshapeInputOutputMultipleErrorMessage:()=>rI,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>tI,getSparseReshapeNegativeOutputDimErrorMessage:()=>eI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>lI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>sI,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>aI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>oI,getUndoAxesPermutation:()=>iS,isIdentityPermutation:()=>Xk,log:()=>Zx,mergeRealAndImagArrays:()=>Fk,prepareAndValidate:()=>_k,prepareSplitSize:()=>Yk,segment_util:()=>r,shouldFuse:()=>r_,slice_util:()=>e,splitRealAndImagArrays:()=>$k,tupleValuesAreOne:()=>Jb,upcastType:()=>jy,validateDefaultValueShape:()=>fk,validateInput:()=>Ik,validateUpdateShape:()=>kk,warn:()=>Yx});var s={};n.r(s),n.d(s,{addImpl:()=>EL,bincountImpl:()=>wF,bincountReduceImpl:()=>SF,castImpl:()=>kL,ceilImpl:()=>IF,concatImpl:()=>NF,equalImpl:()=>f$,expImpl:()=>I$,expm1Impl:()=>A$,floorImpl:()=>q$,gatherNdImpl:()=>eP,gatherV2Impl:()=>rP,greaterEqualImpl:()=>lP,greaterImpl:()=>sP,lessEqualImpl:()=>wP,lessImpl:()=>yP,linSpaceImpl:()=>kP,logImpl:()=>MP,maxImpl:()=>UP,maximumImpl:()=>GP,minimumImpl:()=>tO,multiplyImpl:()=>a$,negImpl:()=>cO,notEqualImpl:()=>yO,prodImpl:()=>NO,raggedGatherImpl:()=>LO,raggedTensorToTensorImpl:()=>BO,rangeImpl:()=>WO,rsqrtImpl:()=>tz,scatterImpl:()=>rz,sigmoidImpl:()=>mL,simpleAbsImpl:()=>OL,sliceImpl:()=>xF,sparseFillEmptyRowsImpl:()=>_z,sparseReshapeImpl:()=>Iz,sparseSegmentReductionImpl:()=>Tz,sqrtImpl:()=>Rz,squaredDifferenceImpl:()=>$z,stridedSliceImpl:()=>Uz,stringNGramsImpl:()=>Gz,stringSplitImpl:()=>qz,stringToHashBucketFastImpl:()=>Kz,subImpl:()=>$$,tileImpl:()=>tB,topKImpl:()=>rB,transposeImpl:()=>HL,uniqueImpl:()=>uB});const a="143",o={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},l={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},u=0,c=1,h=2,d=3,p=0,f=1,m=2,g=3,x=0,y=1,v=2,b=1,w=2,S=0,_=1,k=2,I=3,M=4,T=5,C=100,E=101,A=102,N=103,R=104,D=200,L=201,F=202,$=203,P=204,O=205,z=206,B=207,U=208,W=209,V=210,G=0,H=1,j=2,q=3,X=4,K=5,Y=6,Z=7,J=0,Q=1,tt=2,et=0,nt=1,rt=2,it=3,st=4,at=5,ot=300,lt=301,ut=302,ct=303,ht=304,dt=306,pt=1e3,ft=1001,mt=1002,gt=1003,xt=1004,yt=1004,vt=1005,bt=1005,wt=1006,St=1007,_t=1007,kt=1008,It=1008,Mt=1009,Tt=1010,Ct=1011,Et=1012,At=1013,Nt=1014,Rt=1015,Dt=1016,Lt=1017,Ft=1018,$t=1020,Pt=1021,Ot=1022,zt=1023,Bt=1024,Ut=1025,Wt=1026,Vt=1027,Gt=1028,Ht=1029,jt=1030,qt=1031,Xt=1033,Kt=33776,Yt=33777,Zt=33778,Jt=33779,Qt=35840,te=35841,ee=35842,ne=35843,re=36196,ie=37492,se=37496,ae=37808,oe=37809,le=37810,ue=37811,ce=37812,he=37813,de=37814,pe=37815,fe=37816,me=37817,ge=37818,xe=37819,ye=37820,ve=37821,be=36492,we=2200,Se=2201,_e=2202,ke=2300,Ie=2301,Me=2302,Te=2400,Ce=2401,Ee=2402,Ae=2500,Ne=2501,Re=0,De=1,Le=2,Fe=3e3,$e=3001,Pe=3200,Oe=3201,ze=0,Be=1,Ue="",We="srgb",Ve="srgb-linear",Ge=0,He=7680,je=7681,qe=7682,Xe=7683,Ke=34055,Ye=34056,Ze=5386,Je=512,Qe=513,tn=514,en=515,nn=516,rn=517,sn=518,an=519,on=35044,ln=35048,un=35040,cn=35045,hn=35049,dn=35041,pn=35046,fn=35050,mn=35042,gn="100",xn="300 es",yn=1035;class vn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t);t.target=null}}}const bn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wn=1234567;const Sn=Math.PI/180,_n=180/Math.PI;function kn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(bn[255&t]+bn[t>>8&255]+bn[t>>16&255]+bn[t>>24&255]+"-"+bn[255&e]+bn[e>>8&255]+"-"+bn[e>>16&15|64]+bn[e>>24&255]+"-"+bn[63&n|128]+bn[n>>8&255]+"-"+bn[n>>16&255]+bn[n>>24&255]+bn[255&r]+bn[r>>8&255]+bn[r>>16&255]+bn[r>>24&255]).toLowerCase()}function In(t,e,n){return Math.max(e,Math.min(n,t))}function Mn(t,e){return(t%e+e)%e}function Tn(t,e,n){return(1-n)*t+n*e}function Cn(t){return 0==(t&t-1)&&0!==t}function En(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function An(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var Nn=Object.freeze({__proto__:null,DEG2RAD:Sn,RAD2DEG:_n,generateUUID:kn,clamp:In,euclideanModulo:Mn,mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Tn,damp:function(t,e,n,r){return Tn(t,e,1-Math.exp(-n*r))},pingpong:function(t,e=1){return e-Math.abs(Mn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(wn=t);let e=wn+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*Sn},radToDeg:function(t){return t*_n},isPowerOfTwo:Cn,ceilPowerOfTwo:En,floorPowerOfTwo:An,setQuaternionFromProperEuler:function(t,e,n,r,i){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),u=s((e+r)/2),c=a((e+r)/2),h=s((e-r)/2),d=a((e-r)/2),p=s((r-e)/2),f=a((r-e)/2);switch(i){case"XYX":t.set(o*c,l*h,l*d,o*u);break;case"YZY":t.set(l*d,o*c,l*h,o*u);break;case"ZXZ":t.set(l*h,l*d,o*c,o*u);break;case"XZX":t.set(o*c,l*f,l*p,o*u);break;case"YXY":t.set(l*p,o*c,l*f,o*u);break;case"ZYZ":t.set(l*f,l*p,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}},denormalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}});class Rn{constructor(t=0,e=0){Rn.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*r+t.x,this.y=i*r+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Dn{constructor(){Dn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,r,i,s,a,o,l){const u=this.elements;return u[0]=t,u[1]=r,u[2]=a,u[3]=e,u[4]=i,u[5]=o,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],x=r[1],y=r[4],v=r[7],b=r[2],w=r[5],S=r[8];return i[0]=s*f+a*x+o*b,i[3]=s*m+a*y+o*w,i[6]=s*g+a*v+o*S,i[1]=l*f+u*x+c*b,i[4]=l*m+u*y+c*w,i[7]=l*g+u*v+c*S,i[2]=h*f+d*x+p*b,i[5]=h*m+d*y+p*w,i[8]=h*g+d*v+p*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8];return e*s*u-e*a*l-n*i*u+n*a*o+r*i*l-r*s*o}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=u*s-a*l,h=a*o-u*i,d=l*i-s*o,p=e*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(r*l-u*n)*f,t[2]=(a*n-r*s)*f,t[3]=h*f,t[4]=(u*e-r*o)*f,t[5]=(r*i-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,s,a){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-r*l,r*o,-r*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],s=r[3],a=r[6],o=r[1],l=r[4],u=r[7];return r[0]=e*i+n*o,r[3]=e*s+n*l,r[6]=e*a+n*u,r[1]=-n*i+e*o,r[4]=-n*s+e*l,r[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function Ln(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}const Fn={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function $n(t,e){return new Fn[t](e)}function Pn(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function On(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function zn(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const Bn={[We]:{[Ve]:On},[Ve]:{[We]:zn}},Un={legacyMode:!0,get workingColorSpace(){return Ve},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(Bn[e]&&void 0!==Bn[e][n]){const r=Bn[e][n];return t.r=r(t.r),t.g=r(t.g),t.b=r(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Wn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Vn={r:0,g:0,b:0},Gn={h:0,s:0,l:0},Hn={h:0,s:0,l:0};function jn(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function qn(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class Xn{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=We){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Un.toWorkingColorSpace(this,e),this}setRGB(t,e,n,r=Ve){return this.r=t,this.g=e,this.b=n,Un.toWorkingColorSpace(this,r),this}setHSL(t,e,n,r=Ve){if(t=Mn(t,1),e=In(e,0,1),n=In(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=jn(i,r,t+1/3),this.g=jn(i,r,t),this.b=jn(i,r,t-1/3)}return Un.toWorkingColorSpace(this,r),this}setStyle(t,e=We){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=r[1],s=r[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,Un.toWorkingColorSpace(this,e),n(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,Un.toWorkingColorSpace(this,e),n(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const r=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,s=parseInt(t[3],10)/100;return n(t[4]),this.setHSL(r,i,s,e)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=r[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,Un.toWorkingColorSpace(this,e),this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,Un.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=We){const n=Wn[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=On(t.r),this.g=On(t.g),this.b=On(t.b),this}copyLinearToSRGB(t){return this.r=zn(t.r),this.g=zn(t.g),this.b=zn(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=We){return Un.fromWorkingColorSpace(qn(this,Vn),t),In(255*Vn.r,0,255)<<16^In(255*Vn.g,0,255)<<8^In(255*Vn.b,0,255)<<0}getHexString(t=We){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ve){Un.fromWorkingColorSpace(qn(this,Vn),e);const n=Vn.r,r=Vn.g,i=Vn.b,s=Math.max(n,r,i),a=Math.min(n,r,i);let o,l;const u=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=u<=.5?t/(s+a):t/(2-s-a),s){case n:o=(r-i)/t+(r<i?6:0);break;case r:o=(i-n)/t+2;break;case i:o=(n-r)/t+4}o/=6}return t.h=o,t.s=l,t.l=u,t}getRGB(t,e=Ve){return Un.fromWorkingColorSpace(qn(this,Vn),e),t.r=Vn.r,t.g=Vn.g,t.b=Vn.b,t}getStyle(t=We){return Un.fromWorkingColorSpace(qn(this,Vn),t),t!==We?`color(${t} ${Vn.r} ${Vn.g} ${Vn.b})`:`rgb(${255*Vn.r|0},${255*Vn.g|0},${255*Vn.b|0})`}offsetHSL(t,e,n){return this.getHSL(Gn),Gn.h+=t,Gn.s+=e,Gn.l+=n,this.setHSL(Gn.h,Gn.s,Gn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Gn),t.getHSL(Hn);const n=Tn(Gn.h,Hn.h,e),r=Tn(Gn.s,Hn.s,e),i=Tn(Gn.l,Hn.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let Kn;Xn.NAMES=Wn;class Yn{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Kn&&(Kn=Pn("canvas")),Kn.width=t.width,Kn.height=t.height;const n=Kn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Kn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Pn("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const r=n.getImageData(0,0,t.width,t.height),i=r.data;for(let t=0;t<i.length;t++)i[t]=255*On(i[t]/255);return n.putImageData(r,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*On(e[t]/255)):e[t]=On(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Zn{constructor(t=null){this.isSource=!0,this.uuid=kn(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,n=r.length;e<n;e++)r[e].isDataTexture?t.push(Jn(r[e].image)):t.push(Jn(r[e]))}else t=Jn(r);n.url=t}return e||(t.images[this.uuid]=n),n}}function Jn(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Yn.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Qn=0;class tr extends vn{constructor(t=tr.DEFAULT_IMAGE,e=tr.DEFAULT_MAPPING,n=ft,r=ft,i=wt,s=kt,a=zt,o=Mt,l=1,u=Fe){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Qn++}),this.uuid=kn(),this.name="",this.source=new Zn(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Rn(0,0),this.repeat=new Rn(1,1),this.center=new Rn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Dn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ot)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case pt:t.x=t.x-Math.floor(t.x);break;case ft:t.x=t.x<0?0:1;break;case mt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case pt:t.y=t.y-Math.floor(t.y);break;case ft:t.y=t.y<0?0:1;break;case mt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}tr.DEFAULT_IMAGE=null,tr.DEFAULT_MAPPING=ot;class er{constructor(t=0,e=0,n=0,r=1){er.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*e+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*e+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*e+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const s=.01,a=.1,o=t.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-f)<s&&Math.abs(p-m)<s){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,x=(g+1)/2,y=(u+h)/4,v=(c+f)/4,b=(p+m)/4;return t>o&&t>x?t<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=y/n,i=v/n):o>x?o<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=y/r,i=b/r):x<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(x),n=v/i,r=b/i),this.set(n,r,i,e),this}let x=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(c-f)/x,this.z=(h-u)/x,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class nr extends vn{constructor(t,e,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new er(0,0,t,e),this.scissorTest=!1,this.viewport=new er(0,0,t,e);const r={width:t,height:e,depth:1};this.texture=new tr(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:wt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Zn(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class rr extends tr{constructor(t=null,e=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:r},this.magFilter=gt,this.minFilter=gt,this.wrapR=ft,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ir extends nr{constructor(t,e,n){super(t,e),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new rr(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class sr extends tr{constructor(t=null,e=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:r},this.magFilter=gt,this.minFilter=gt,this.wrapR=ft,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ar extends nr{constructor(t,e,n){super(t,e),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new sr(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class or extends nr{constructor(t,e,n,r={}){super(t,e,r),this.isWebGLMultipleRenderTargets=!0;const i=this.texture;this.texture=[];for(let t=0;t<n;t++)this.texture[t]=i.clone(),this.texture[t].isRenderTargetTexture=!0}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=t,this.texture[r].image.height=e,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}}class lr{constructor(t=0,e=0,n=0,r=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=r}static slerpFlat(t,e,n,r,i,s,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=u,void(t[e+3]=c);if(1===a)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(c!==f||o!==h||l!==d||u!==p){let t=1-a;const e=o*h+l*d+u*p+c*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,a=Math.sin(a*s)/i}const i=a*n;if(o=o*t+h*i,l=l*t+d*i,u=u*t+p*i,c=c*t+f*i,t===1-a){const t=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=t,l*=t,u*=t,c*=t}}t[e]=o,t[e+1]=l,t[e+2]=u,t[e+3]=c}static multiplyQuaternionsFlat(t,e,n,r,i,s){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[s],h=i[s+1],d=i[s+2],p=i[s+3];return t[e]=a*p+u*c+o*d-l*h,t[e+1]=o*p+u*h+l*c-a*d,t[e+2]=l*p+u*d+a*h-o*c,t[e+3]=u*p-a*c-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],s=e[1],a=e[5],o=e[9],l=e[2],u=e[6],c=e[10],h=n+a+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(u-o)*t,this._y=(i-l)*t,this._z=(s-r)*t}else if(n>a&&n>c){const t=2*Math.sqrt(1+n-a-c);this._w=(u-o)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(i+l)/t}else if(a>c){const t=2*Math.sqrt(1+a-n-c);this._w=(i-l)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(o+u)/t}else{const t=2*Math.sqrt(1+c-n-a);this._w=(s-r)/t,this._x=(i+l)/t,this._y=(o+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(In(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,s=t._w,a=e._x,o=e._y,l=e._z,u=e._w;return this._x=n*u+s*a+r*l-i*o,this._y=r*u+s*o+i*a-n*l,this._z=i*u+s*l+n*o-r*a,this._w=s*u-n*a-r*o-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,s=this._w;let a=s*t._w+n*t._x+r*t._y+i*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-e)*u)/l,h=Math.sin(e*u)/l;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(i),n*Math.cos(i),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ur{constructor(t=0,e=0,n=0){ur.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(hr.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(hr.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*r-a*n,u=o*n+a*e-i*r,c=o*r+i*n-s*e,h=-i*e-s*n-a*r;return this.x=l*o+h*-i+u*-a-c*-s,this.y=u*o+h*-s+c*-i-l*-a,this.z=c*o+h*-a+l*-s-u*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return cr.copy(this).projectOnVector(t),this.sub(cr)}reflect(t){return this.sub(cr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(In(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const cr=new ur,hr=new lr;class dr{constructor(t=new ur(1/0,1/0,1/0),e=new ur(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],u=t[o+1],c=t[o+2];l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),u=t.getY(o),c=t.getZ(o);l<e&&(e=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(e,n,r),this.max.set(i,s,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=fr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n)if(e&&null!=n.attributes&&void 0!==n.attributes.position){const e=n.attributes.position;for(let n=0,r=e.count;n<r;n++)fr.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),this.expandByPoint(fr)}else null===n.boundingBox&&n.computeBoundingBox(),mr.copy(n.boundingBox),mr.applyMatrix4(t.matrixWorld),this.union(mr);const r=t.children;for(let t=0,n=r.length;t<n;t++)this.expandByObject(r[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,fr),fr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Sr),_r.subVectors(this.max,Sr),gr.subVectors(t.a,Sr),xr.subVectors(t.b,Sr),yr.subVectors(t.c,Sr),vr.subVectors(xr,gr),br.subVectors(yr,xr),wr.subVectors(gr,yr);let e=[0,-vr.z,vr.y,0,-br.z,br.y,0,-wr.z,wr.y,vr.z,0,-vr.x,br.z,0,-br.x,wr.z,0,-wr.x,-vr.y,vr.x,0,-br.y,br.x,0,-wr.y,wr.x,0];return!!Mr(e,gr,xr,yr,_r)&&(e=[1,0,0,0,1,0,0,0,1],!!Mr(e,gr,xr,yr,_r)&&(kr.crossVectors(vr,br),e=[kr.x,kr.y,kr.z],Mr(e,gr,xr,yr,_r)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return fr.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(fr).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(pr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),pr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),pr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),pr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),pr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),pr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),pr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),pr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(pr)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const pr=[new ur,new ur,new ur,new ur,new ur,new ur,new ur,new ur],fr=new ur,mr=new dr,gr=new ur,xr=new ur,yr=new ur,vr=new ur,br=new ur,wr=new ur,Sr=new ur,_r=new ur,kr=new ur,Ir=new ur;function Mr(t,e,n,r,i){for(let s=0,a=t.length-3;s<=a;s+=3){Ir.fromArray(t,s);const a=i.x*Math.abs(Ir.x)+i.y*Math.abs(Ir.y)+i.z*Math.abs(Ir.z),o=e.dot(Ir),l=n.dot(Ir),u=r.dot(Ir);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const Tr=new dr,Cr=new ur,Er=new ur,Ar=new ur;class Nr{constructor(t=new ur,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Tr.setFromPoints(t).getCenter(n);let r=0;for(let e=0,i=t.length;e<i;e++)r=Math.max(r,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Ar.subVectors(t,this.center);const e=Ar.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Ar.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?Er.set(0,0,1).multiplyScalar(t.radius):Er.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Cr.copy(t.center).add(Er)),this.expandByPoint(Cr.copy(t.center).sub(Er)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Rr=new ur,Dr=new ur,Lr=new ur,Fr=new ur,$r=new ur,Pr=new ur,Or=new ur;class zr{constructor(t=new ur,e=new ur(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Rr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Rr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Rr.copy(this.direction).multiplyScalar(e).add(this.origin),Rr.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){Dr.copy(t).add(e).multiplyScalar(.5),Lr.copy(e).sub(t).normalize(),Fr.copy(this.origin).sub(Dr);const i=.5*t.distanceTo(e),s=-this.direction.dot(Lr),a=Fr.dot(this.direction),o=-Fr.dot(Lr),l=Fr.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=i*u,c>=0)if(h>=-p)if(h<=p){const t=1/u;c*=t,h*=t,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*i+a)),h=c>0?-i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(c=Math.max(0,-(s*i+a)),h=c>0?i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l);else h=s>0?-i:i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(Lr).multiplyScalar(h).add(Dr),d}intersectSphere(t,e){Rr.subVectors(t.center,this.origin);const n=Rr.dot(this.direction),r=Rr.dot(Rr)-n*n,i=t.radius*t.radius;if(r>i)return null;const s=Math.sqrt(i-r),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,r=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,r=(t.min.x-h.x)*l),u>=0?(i=(t.min.y-h.y)*u,s=(t.max.y-h.y)*u):(i=(t.max.y-h.y)*u,s=(t.min.y-h.y)*u),n>s||i>r?null:((i>n||n!=n)&&(n=i),(s<r||r!=r)&&(r=s),c>=0?(a=(t.min.z-h.z)*c,o=(t.max.z-h.z)*c):(a=(t.max.z-h.z)*c,o=(t.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Rr)}intersectTriangle(t,e,n,r,i){$r.subVectors(e,t),Pr.subVectors(n,t),Or.crossVectors($r,Pr);let s,a=this.direction.dot(Or);if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Fr.subVectors(this.origin,t);const o=s*this.direction.dot(Pr.crossVectors(Fr,Pr));if(o<0)return null;const l=s*this.direction.dot($r.cross(Fr));if(l<0)return null;if(o+l>a)return null;const u=-s*Fr.dot(Or);return u<0?null:this.at(u/a,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Br{constructor(){Br.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Br).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Ur.setFromMatrixColumn(t,0).length(),i=1/Ur.setFromMatrixColumn(t,1).length(),s=1/Ur.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=-o*c,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-a*o,e[2]=i-t*l,e[6]=r+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t+i*a,e[4]=r*a-n,e[8]=s*l,e[1]=s*c,e[5]=s*u,e[9]=-a,e[2]=n*a-r,e[6]=i+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*u,n=o*c,r=l*u,i=l*c;e[0]=t-i*a,e[4]=-s*c,e[8]=r+n*a,e[1]=n+r*a,e[5]=s*u,e[9]=i-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*u,n=s*c,r=a*u,i=a*c;e[0]=o*u,e[4]=r*l-n,e[8]=t*l+i,e[1]=o*c,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=i-t*c,e[8]=r*c+n,e[1]=c,e[5]=s*u,e[9]=-a*u,e[2]=-l*u,e[6]=n*c+r,e[10]=t-i*c}else if("XZY"===t.order){const t=s*o,n=s*l,r=a*o,i=a*l;e[0]=o*u,e[4]=-c,e[8]=l*u,e[1]=t*c+i,e[5]=s*u,e[9]=n*c-r,e[2]=r*c-n,e[6]=a*u,e[10]=i*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Vr,t,Gr)}lookAt(t,e,n){const r=this.elements;return qr.subVectors(t,e),0===qr.lengthSq()&&(qr.z=1),qr.normalize(),Hr.crossVectors(n,qr),0===Hr.lengthSq()&&(1===Math.abs(n.z)?qr.x+=1e-4:qr.z+=1e-4,qr.normalize(),Hr.crossVectors(n,qr)),Hr.normalize(),jr.crossVectors(qr,Hr),r[0]=Hr.x,r[4]=jr.x,r[8]=qr.x,r[1]=Hr.y,r[5]=jr.y,r[9]=qr.y,r[2]=Hr.z,r[6]=jr.z,r[10]=qr.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],x=n[3],y=n[7],v=n[11],b=n[15],w=r[0],S=r[4],_=r[8],k=r[12],I=r[1],M=r[5],T=r[9],C=r[13],E=r[2],A=r[6],N=r[10],R=r[14],D=r[3],L=r[7],F=r[11],$=r[15];return i[0]=s*w+a*I+o*E+l*D,i[4]=s*S+a*M+o*A+l*L,i[8]=s*_+a*T+o*N+l*F,i[12]=s*k+a*C+o*R+l*$,i[1]=u*w+c*I+h*E+d*D,i[5]=u*S+c*M+h*A+d*L,i[9]=u*_+c*T+h*N+d*F,i[13]=u*k+c*C+h*R+d*$,i[2]=p*w+f*I+m*E+g*D,i[6]=p*S+f*M+m*A+g*L,i[10]=p*_+f*T+m*N+g*F,i[14]=p*k+f*C+m*R+g*$,i[3]=x*w+y*I+v*E+b*D,i[7]=x*S+y*M+v*A+b*L,i[11]=x*_+y*T+v*N+b*F,i[15]=x*k+y*C+v*R+b*$,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],l=t[13],u=t[2],c=t[6],h=t[10],d=t[14];return t[3]*(+i*o*c-r*l*c-i*a*h+n*l*h+r*a*d-n*o*d)+t[7]*(+e*o*d-e*l*h+i*s*h-r*s*d+r*l*u-i*o*u)+t[11]*(+e*l*c-e*a*d-i*s*c+n*s*d+i*a*u-n*l*u)+t[15]*(-r*a*u-e*o*c+e*a*h+r*s*c-n*s*h+n*o*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],l=t[7],u=t[8],c=t[9],h=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],x=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,y=p*h*l-u*m*l-p*o*d+s*m*d+u*o*g-s*h*g,v=u*f*l-p*c*l+p*a*d-s*f*d-u*a*g+s*c*g,b=p*c*o-u*f*o-p*a*h+s*f*h+u*a*m-s*c*m,w=e*x+n*y+r*v+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/w;return t[0]=x*S,t[1]=(f*h*i-c*m*i-f*r*d+n*m*d+c*r*g-n*h*g)*S,t[2]=(a*m*i-f*o*i+f*r*l-n*m*l-a*r*g+n*o*g)*S,t[3]=(c*o*i-a*h*i-c*r*l+n*h*l+a*r*d-n*o*d)*S,t[4]=y*S,t[5]=(u*m*i-p*h*i+p*r*d-e*m*d-u*r*g+e*h*g)*S,t[6]=(p*o*i-s*m*i-p*r*l+e*m*l+s*r*g-e*o*g)*S,t[7]=(s*h*i-u*o*i+u*r*l-e*h*l-s*r*d+e*o*d)*S,t[8]=v*S,t[9]=(p*c*i-u*f*i-p*n*d+e*f*d+u*n*g-e*c*g)*S,t[10]=(s*f*i-p*a*i+p*n*l-e*f*l-s*n*g+e*a*g)*S,t[11]=(u*a*i-s*c*i-u*n*l+e*c*l+s*n*d-e*a*d)*S,t[12]=b*S,t[13]=(u*f*r-p*c*r+p*n*h-e*f*h-u*n*m+e*c*m)*S,t[14]=(p*a*r-s*f*r-p*n*o+e*f*o+s*n*m-e*a*m)*S,t[15]=(s*c*r-u*a*r+u*n*o-e*c*o-s*n*h+e*a*h)*S,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,l=i*s,u=i*a;return this.set(l*s+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*s,0,l*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,i,s){return this.set(1,n,i,0,t,1,s,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,s=e._y,a=e._z,o=e._w,l=i+i,u=s+s,c=a+a,h=i*l,d=i*u,p=i*c,f=s*u,m=s*c,g=a*c,x=o*l,y=o*u,v=o*c,b=n.x,w=n.y,S=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+v)*b,r[2]=(p-y)*b,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+x)*w,r[7]=0,r[8]=(p+y)*S,r[9]=(m-x)*S,r[10]=(1-(h+f))*S,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Ur.set(r[0],r[1],r[2]).length();const s=Ur.set(r[4],r[5],r[6]).length(),a=Ur.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Wr.copy(this);const o=1/i,l=1/s,u=1/a;return Wr.elements[0]*=o,Wr.elements[1]*=o,Wr.elements[2]*=o,Wr.elements[4]*=l,Wr.elements[5]*=l,Wr.elements[6]*=l,Wr.elements[8]*=u,Wr.elements[9]*=u,Wr.elements[10]*=u,e.setFromRotationMatrix(Wr),n.x=i,n.y=s,n.z=a,this}makePerspective(t,e,n,r,i,s){const a=this.elements,o=2*i/(e-t),l=2*i/(n-r),u=(e+t)/(e-t),c=(n+r)/(n-r),h=-(s+i)/(s-i),d=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,r,i,s){const a=this.elements,o=1/(e-t),l=1/(n-r),u=1/(s-i),c=(e+t)*o,h=(n+r)*l,d=(s+i)*u;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ur=new ur,Wr=new Br,Vr=new ur(0,0,0),Gr=new ur(1,1,1),Hr=new ur,jr=new ur,qr=new ur,Xr=new Br,Kr=new lr;class Yr{constructor(t=0,e=0,n=0,r=Yr.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,i=r[0],s=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(In(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-In(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(In(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-In(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(In(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-In(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Xr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Xr,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Kr.setFromEuler(this),this.setFromQuaternion(Kr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Yr.DefaultOrder="XYZ",Yr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Zr{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let Jr=0;const Qr=new ur,ti=new lr,ei=new Br,ni=new ur,ri=new ur,ii=new ur,si=new lr,ai=new ur(1,0,0),oi=new ur(0,1,0),li=new ur(0,0,1),ui={type:"added"},ci={type:"removed"};class hi extends vn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Jr++}),this.uuid=kn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=hi.DefaultUp.clone();const t=new ur,e=new Yr,n=new lr,r=new ur(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Br},normalMatrix:{value:new Dn}}),this.matrix=new Br,this.matrixWorld=new Br,this.matrixAutoUpdate=hi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Zr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ti.setFromAxisAngle(t,e),this.quaternion.multiply(ti),this}rotateOnWorldAxis(t,e){return ti.setFromAxisAngle(t,e),this.quaternion.premultiply(ti),this}rotateX(t){return this.rotateOnAxis(ai,t)}rotateY(t){return this.rotateOnAxis(oi,t)}rotateZ(t){return this.rotateOnAxis(li,t)}translateOnAxis(t,e){return Qr.copy(t).applyQuaternion(this.quaternion),this.position.add(Qr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ai,t)}translateY(t){return this.translateOnAxis(oi,t)}translateZ(t){return this.translateOnAxis(li,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(ei.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ni.copy(t):ni.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),ri.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ei.lookAt(ri,ni,this.up):ei.lookAt(ni,ri,this.up),this.quaternion.setFromRotationMatrix(ei),r&&(ei.extractRotation(r.matrixWorld),ti.setFromRotationMatrix(ei),this.quaternion.premultiply(ti.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ui)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ci)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ci)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ei.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ei.multiply(t.parent.matrixWorld)),t.applyMatrix4(ei),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ri,t,ii),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ri,si,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),r=s(t.materials),i=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),u=s(t.animations),c=s(t.nodes);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u),c.length>0&&(n.nodes=c)}return n.object=r,n;function s(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}hi.DefaultUp=new ur(0,1,0),hi.DefaultMatrixAutoUpdate=!0;const di=new ur,pi=new ur,fi=new ur,mi=new ur,gi=new ur,xi=new ur,yi=new ur,vi=new ur,bi=new ur,wi=new ur;class Si{constructor(t=new ur,e=new ur,n=new ur){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),di.subVectors(t,e),r.cross(di);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){di.subVectors(r,e),pi.subVectors(n,e),fi.subVectors(t,e);const s=di.dot(di),a=di.dot(pi),o=di.dot(fi),l=pi.dot(pi),u=pi.dot(fi),c=s*l-a*a;if(0===c)return i.set(-2,-1,-1);const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return i.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,mi),mi.x>=0&&mi.y>=0&&mi.x+mi.y<=1}static getUV(t,e,n,r,i,s,a,o){return this.getBarycoord(t,e,n,r,mi),o.set(0,0),o.addScaledVector(i,mi.x),o.addScaledVector(s,mi.y),o.addScaledVector(a,mi.z),o}static isFrontFacing(t,e,n,r){return di.subVectors(n,e),pi.subVectors(t,e),di.cross(pi).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return di.subVectors(this.c,this.b),pi.subVectors(this.a,this.b),.5*di.cross(pi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Si.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Si.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return Si.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Si.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Si.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,i=this.c;let s,a;gi.subVectors(r,n),xi.subVectors(i,n),vi.subVectors(t,n);const o=gi.dot(vi),l=xi.dot(vi);if(o<=0&&l<=0)return e.copy(n);bi.subVectors(t,r);const u=gi.dot(bi),c=xi.dot(bi);if(u>=0&&c<=u)return e.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),e.copy(n).addScaledVector(gi,s);wi.subVectors(t,i);const d=gi.dot(wi),p=xi.dot(wi);if(p>=0&&d<=p)return e.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(xi,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return yi.subVectors(i,r),a=(c-u)/(c-u+(d-p)),e.copy(r).addScaledVector(yi,a);const g=1/(m+f+h);return s=f*g,a=h*g,e.copy(n).addScaledVector(gi,s).addScaledVector(xi,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let _i=0;class ki extends vn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:_i++}),this.uuid=kn(),this.name="",this.type="Material",this.blending=_,this.side=x,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=P,this.blendDst=O,this.blendEquation=C,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=q,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=an,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=He,this.stencilZFail=He,this.stencilZPass=He,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===b;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==_&&(n.blending=this.blending),this.side!==x&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class Ii extends ki{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Xn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Mi=new ur,Ti=new Rn;class Ci{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=on,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Xn),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new Rn),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new ur),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new er),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ti.fromBufferAttribute(this,e),Ti.applyMatrix3(t),this.setXY(e,Ti.x,Ti.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Mi.fromBufferAttribute(this,e),Mi.applyMatrix3(t),this.setXYZ(e,Mi.x,Mi.y,Mi.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Mi.fromBufferAttribute(this,e),Mi.applyMatrix4(t),this.setXYZ(e,Mi.x,Mi.y,Mi.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Mi.fromBufferAttribute(this,e),Mi.applyNormalMatrix(t),this.setXYZ(e,Mi.x,Mi.y,Mi.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Mi.fromBufferAttribute(this,e),Mi.transformDirection(t),this.setXYZ(e,Mi.x,Mi.y,Mi.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==on&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}class Ei extends Ci{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Ai extends Ci{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Ni extends Ci{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Ri extends Ci{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Di extends Ci{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Li extends Ci{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Fi extends Ci{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class $i extends Ci{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}}class Pi extends Ci{constructor(t,e,n){super(new Float32Array(t),e,n)}}class Oi extends Ci{constructor(t,e,n){super(new Float64Array(t),e,n)}}let zi=0;const Bi=new Br,Ui=new hi,Wi=new ur,Vi=new dr,Gi=new dr,Hi=new ur;class ji extends vn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:zi++}),this.uuid=kn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ln(t)?Fi:Di)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Dn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Bi.makeRotationFromQuaternion(t),this.applyMatrix4(Bi),this}rotateX(t){return Bi.makeRotationX(t),this.applyMatrix4(Bi),this}rotateY(t){return Bi.makeRotationY(t),this.applyMatrix4(Bi),this}rotateZ(t){return Bi.makeRotationZ(t),this.applyMatrix4(Bi),this}translate(t,e,n){return Bi.makeTranslation(t,e,n),this.applyMatrix4(Bi),this}scale(t,e,n){return Bi.makeScale(t,e,n),this.applyMatrix4(Bi),this}lookAt(t){return Ui.lookAt(t),Ui.updateMatrix(),this.applyMatrix4(Ui.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Wi).negate(),this.translate(Wi.x,Wi.y,Wi.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Pi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new dr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ur(-1/0,-1/0,-1/0),new ur(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Vi.setFromBufferAttribute(n),this.morphTargetsRelative?(Hi.addVectors(this.boundingBox.min,Vi.min),this.boundingBox.expandByPoint(Hi),Hi.addVectors(this.boundingBox.max,Vi.max),this.boundingBox.expandByPoint(Hi)):(this.boundingBox.expandByPoint(Vi.min),this.boundingBox.expandByPoint(Vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Nr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ur,1/0);if(t){const n=this.boundingSphere.center;if(Vi.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Gi.setFromBufferAttribute(n),this.morphTargetsRelative?(Hi.addVectors(Vi.min,Gi.min),Vi.expandByPoint(Hi),Hi.addVectors(Vi.max,Gi.max),Vi.expandByPoint(Hi)):(Vi.expandByPoint(Gi.min),Vi.expandByPoint(Gi.max))}Vi.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)Hi.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(Hi));if(e)for(let i=0,s=e.length;i<s;i++){const s=e[i],a=this.morphTargetsRelative;for(let e=0,i=s.count;e<i;e++)Hi.fromBufferAttribute(s,e),a&&(Wi.fromBufferAttribute(t,e),Hi.add(Wi)),r=Math.max(r,n.distanceToSquared(Hi))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,s=e.uv.array,a=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ci(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],u=[];for(let t=0;t<a;t++)l[t]=new ur,u[t]=new ur;const c=new ur,h=new ur,d=new ur,p=new Rn,f=new Rn,m=new Rn,g=new ur,x=new ur;function y(t,e,n){c.fromArray(r,3*t),h.fromArray(r,3*e),d.fromArray(r,3*n),p.fromArray(s,2*t),f.fromArray(s,2*e),m.fromArray(s,2*n),h.sub(c),d.sub(c),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),x.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),u[t].add(x),u[e].add(x),u[n].add(x))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let t=0,e=v.length;t<e;++t){const e=v[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)y(n[t+0],n[t+1],n[t+2])}const b=new ur,w=new ur,S=new ur,_=new ur;function k(t){S.fromArray(i,3*t),_.copy(S);const e=l[t];b.copy(e),b.sub(S.multiplyScalar(S.dot(e))).normalize(),w.crossVectors(_,e);const n=w.dot(u[t])<0?-1:1;o[4*t]=b.x,o[4*t+1]=b.y,o[4*t+2]=b.z,o[4*t+3]=n}for(let t=0,e=v.length;t<e;++t){const e=v[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)k(n[t+0]),k(n[t+1]),k(n[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ci(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new ur,i=new ur,s=new ur,a=new ur,o=new ur,l=new ur,u=new ur,c=new ur;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,d),i.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),n.setXYZ(t+0,u.x,u.y,u.z),n.setXYZ(t+1,u.x,u.y,u.z),n.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r].array,s=t.attributes[r],a=s.array,o=s.itemSize*e,l=Math.min(a.length,i.length-o);for(let t=0,e=o;t<l;t++,e++)i[e]=a[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Hi.fromBufferAttribute(t,e),Hi.normalize(),t.setXYZ(e,Hi.x,Hi.y,Hi.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,s=new n.constructor(e.length*r);let a=0,o=0;for(let i=0,l=e.length;i<l;i++){a=t.isInterleavedBufferAttribute?e[i]*t.data.stride+t.offset:e[i]*r;for(let t=0;t<r;t++)s[o++]=n[a++]}return new Ci(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ji,n=this.index.array,r=this.attributes;for(const i in r){const s=t(r[i],n);e.setAttribute(i,s)}const i=this.morphAttributes;for(const r in i){const s=[],a=i[r];for(let e=0,r=a.length;e<r;e++){const r=t(a[e],n);s.push(r)}e.morphAttributes[r]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const r=n[e];t.data.attributes[e]=r.toJSON(t.data)}const r={};let i=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];s.push(r.toJSON(t.data))}s.length>0&&(r[e]=s,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(e))}const i=t.morphAttributes;for(const t in i){const n=[],r=i[t];for(let t=0,i=r.length;t<i;t++)n.push(r[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const qi=new Br,Xi=new zr,Ki=new Nr,Yi=new ur,Zi=new ur,Ji=new ur,Qi=new ur,ts=new ur,es=new ur,ns=new ur,rs=new ur,is=new ur,ss=new Rn,as=new Rn,os=new Rn,ls=new ur,us=new ur;class cs extends hi{constructor(t=new ji,e=new Ii){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ki.copy(n.boundingSphere),Ki.applyMatrix4(i),!1===t.ray.intersectsSphere(Ki))return;if(qi.copy(i).invert(),Xi.copy(t.ray).applyMatrix4(qi),null!==n.boundingBox&&!1===Xi.intersectsBox(n.boundingBox))return;let s;const a=n.index,o=n.attributes.position,l=n.morphAttributes.position,u=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==a)if(Array.isArray(r))for(let n=0,i=d.length;n<i;n++){const i=d[n],f=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(a.count,Math.min(i.start+i.count,p.start+p.count));n<r;n+=3){const r=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);s=hs(this,f,t,Xi,o,l,u,c,h,r,d,p),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,e.push(s))}}else for(let n=Math.max(0,p.start),i=Math.min(a.count,p.start+p.count);n<i;n+=3){const i=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);s=hs(this,r,t,Xi,o,l,u,c,h,i,d,p),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}else if(void 0!==o)if(Array.isArray(r))for(let n=0,i=d.length;n<i;n++){const i=d[n],a=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(o.count,Math.min(i.start+i.count,p.start+p.count));n<r;n+=3)s=hs(this,a,t,Xi,o,l,u,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,e.push(s))}else for(let n=Math.max(0,p.start),i=Math.min(o.count,p.start+p.count);n<i;n+=3)s=hs(this,r,t,Xi,o,l,u,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}function hs(t,e,n,r,i,s,a,o,l,u,c,h){Yi.fromBufferAttribute(i,u),Zi.fromBufferAttribute(i,c),Ji.fromBufferAttribute(i,h);const d=t.morphTargetInfluences;if(s&&d){ns.set(0,0,0),rs.set(0,0,0),is.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],n=s[t];0!==e&&(Qi.fromBufferAttribute(n,u),ts.fromBufferAttribute(n,c),es.fromBufferAttribute(n,h),a?(ns.addScaledVector(Qi,e),rs.addScaledVector(ts,e),is.addScaledVector(es,e)):(ns.addScaledVector(Qi.sub(Yi),e),rs.addScaledVector(ts.sub(Zi),e),is.addScaledVector(es.sub(Ji),e)))}Yi.add(ns),Zi.add(rs),Ji.add(is)}t.isSkinnedMesh&&(t.boneTransform(u,Yi),t.boneTransform(c,Zi),t.boneTransform(h,Ji));const p=function(t,e,n,r,i,s,a,o){let l;if(l=e.side===y?r.intersectTriangle(a,s,i,!0,o):r.intersectTriangle(i,s,a,e.side!==v,o),null===l)return null;us.copy(o),us.applyMatrix4(t.matrixWorld);const u=n.ray.origin.distanceTo(us);return u<n.near||u>n.far?null:{distance:u,point:us.clone(),object:t}}(t,e,n,r,Yi,Zi,Ji,ls);if(p){o&&(ss.fromBufferAttribute(o,u),as.fromBufferAttribute(o,c),os.fromBufferAttribute(o,h),p.uv=Si.getUV(ls,Yi,Zi,Ji,ss,as,os,new Rn)),l&&(ss.fromBufferAttribute(l,u),as.fromBufferAttribute(l,c),os.fromBufferAttribute(l,h),p.uv2=Si.getUV(ls,Yi,Zi,Ji,ss,as,os,new Rn));const t={a:u,b:c,c:h,normal:new ur,materialIndex:0};Si.getNormal(Yi,Zi,Ji,t.normal),p.face=t}return p}class ds extends ji{constructor(t=1,e=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const a=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(t,e,n,r,i,s,p,f,m,g,x){const y=s/m,v=p/g,b=s/2,w=p/2,S=f/2,_=m+1,k=g+1;let I=0,M=0;const T=new ur;for(let s=0;s<k;s++){const a=s*v-w;for(let o=0;o<_;o++){const h=o*y-b;T[t]=h*r,T[e]=a*i,T[n]=S,l.push(T.x,T.y,T.z),T[t]=0,T[e]=0,T[n]=f>0?1:-1,u.push(T.x,T.y,T.z),c.push(o/m),c.push(1-s/g),I+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=h+e+_*t,r=h+e+_*(t+1),i=h+(e+1)+_*(t+1),s=h+(e+1)+_*t;o.push(n,r,s),o.push(r,i,s),M+=6}a.addGroup(d,M,x),d+=M,h+=I}p("z","y","x",-1,-1,n,e,t,s,i,0),p("z","y","x",1,-1,n,e,-t,s,i,1),p("x","z","y",1,1,t,n,e,r,s,2),p("x","z","y",1,-1,t,n,-e,r,s,3),p("x","y","z",1,-1,t,e,n,r,i,4),p("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Pi(l,3)),this.setAttribute("normal",new Pi(u,3)),this.setAttribute("uv",new Pi(c,2))}static fromJSON(t){return new ds(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ps(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function fs(t){const e={};for(let n=0;n<t.length;n++){const r=ps(t[n]);for(const t in r)e[t]=r[t]}return e}const ms={clone:ps,merge:fs};class gs extends ki{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ps(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class xs extends hi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Br,this.projectionMatrix=new Br,this.projectionMatrixInverse=new Br}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class ys extends xs{constructor(t=50,e=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*_n*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Sn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*_n*Math.atan(Math.tan(.5*Sn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Sn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;i+=s.offsetX*r/t,e-=s.offsetY*n/a,r*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(i+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const vs=90;class bs extends hi{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new ys(vs,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ur(1,0,0)),this.add(r);const i=new ys(vs,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new ur(-1,0,0)),this.add(i);const s=new ys(vs,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new ur(0,1,0)),this.add(s);const a=new ys(vs,1,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new ur(0,-1,0)),this.add(a);const o=new ys(vs,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new ur(0,0,1)),this.add(o);const l=new ys(vs,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ur(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,s,a,o,l]=this.children,u=t.getRenderTarget(),c=t.toneMapping,h=t.xr.enabled;t.toneMapping=et,t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(u),t.toneMapping=c,t.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class ws extends tr{constructor(t,e,n,r,i,s,a,o,l,u){super(t=void 0!==t?t:[],e=void 0!==e?e:lt,n,r,i,s,a,o,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Ss extends nr{constructor(t,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},r=[n,n,n,n,n,n];this.texture=new ws(r,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:wt}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new ds(5,5,5),a=new gs({name:"CubemapFromEquirect",uniforms:ps(n),vertexShader:r,fragmentShader:i,side:y,blending:S});a.uniforms.tEquirect.value=e;const o=new cs(s,a),l=e.minFilter;return e.minFilter===kt&&(e.minFilter=wt),new bs(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(i)}}const _s=new ur,ks=new ur,Is=new Dn;class Ms{constructor(t=new ur(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=_s.subVectors(n,e).cross(ks.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(_s),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Is.getNormalMatrix(t),r=this.coplanarPoint(_s).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Ts=new Nr,Cs=new ur;class Es{constructor(t=new Ms,e=new Ms,n=new Ms,r=new Ms,i=new Ms,s=new Ms){this.planes=[t,e,n,r,i,s]}set(t,e,n,r,i,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],s=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],x=n[14],y=n[15];return e[0].setComponents(a-r,c-o,f-h,y-m).normalize(),e[1].setComponents(a+r,c+o,f+h,y+m).normalize(),e[2].setComponents(a+i,c+l,f+d,y+g).normalize(),e[3].setComponents(a-i,c-l,f-d,y-g).normalize(),e[4].setComponents(a-s,c-u,f-p,y-x).normalize(),e[5].setComponents(a+s,c+u,f+p,y+x).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Ts.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ts)}intersectsSprite(t){return Ts.center.set(0,0,0),Ts.radius=.7071067811865476,Ts.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ts)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Cs.x=r.normal.x>0?t.max.x:t.min.x,Cs.y=r.normal.y>0?t.max.y:t.min.y,Cs.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Cs)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function As(){let t=null,e=!1,n=null,r=null;function i(e,s){n(e,s),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Ns(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,i){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=r.get(e);void 0===s?r.set(e,function(e,r){const i=e.array,s=e.usage,a=t.createBuffer();let o;if(t.bindBuffer(r,a),t.bufferData(r,i,s),e.onUploadCallback(),i instanceof Float32Array)o=5126;else if(i instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(i instanceof Int16Array)o=5122;else if(i instanceof Uint32Array)o=5125;else if(i instanceof Int32Array)o=5124;else if(i instanceof Int8Array)o=5120;else if(i instanceof Uint8Array)o=5121;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=5121}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,i)):s.version<e.version&&(function(e,r,i){const s=r.array,a=r.updateRange;t.bindBuffer(i,e),-1===a.count?t.bufferSubData(i,0,s):(n?t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(s.buffer,e,i),s.version=e.version)}}}class Rs extends ji{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,s=e/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=t/a,h=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<u;t++){const e=t*h-s;for(let n=0;n<l;n++){const r=n*c-i;p.push(r,-e,0),f.push(0,0,1),m.push(n/a),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,r=e+l*(t+1),i=e+1+l*(t+1),s=e+1+l*t;d.push(n,r,s),d.push(r,i,s)}this.setIndex(d),this.setAttribute("position",new Pi(p,3)),this.setAttribute("normal",new Pi(f,3)),this.setAttribute("uv",new Pi(m,2))}static fromJSON(t){return new Rs(t.width,t.height,t.widthSegments,t.heightSegments)}}const Ds={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Ls={common:{diffuse:{value:new Xn(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Dn},uv2Transform:{value:new Dn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Rn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dn}},sprite:{diffuse:{value:new Xn(16777215)},opacity:{value:1},center:{value:new Rn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dn}}},Fs={basic:{uniforms:fs([Ls.common,Ls.specularmap,Ls.envmap,Ls.aomap,Ls.lightmap,Ls.fog]),vertexShader:Ds.meshbasic_vert,fragmentShader:Ds.meshbasic_frag},lambert:{uniforms:fs([Ls.common,Ls.specularmap,Ls.envmap,Ls.aomap,Ls.lightmap,Ls.emissivemap,Ls.fog,Ls.lights,{emissive:{value:new Xn(0)}}]),vertexShader:Ds.meshlambert_vert,fragmentShader:Ds.meshlambert_frag},phong:{uniforms:fs([Ls.common,Ls.specularmap,Ls.envmap,Ls.aomap,Ls.lightmap,Ls.emissivemap,Ls.bumpmap,Ls.normalmap,Ls.displacementmap,Ls.fog,Ls.lights,{emissive:{value:new Xn(0)},specular:{value:new Xn(1118481)},shininess:{value:30}}]),vertexShader:Ds.meshphong_vert,fragmentShader:Ds.meshphong_frag},standard:{uniforms:fs([Ls.common,Ls.envmap,Ls.aomap,Ls.lightmap,Ls.emissivemap,Ls.bumpmap,Ls.normalmap,Ls.displacementmap,Ls.roughnessmap,Ls.metalnessmap,Ls.fog,Ls.lights,{emissive:{value:new Xn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ds.meshphysical_vert,fragmentShader:Ds.meshphysical_frag},toon:{uniforms:fs([Ls.common,Ls.aomap,Ls.lightmap,Ls.emissivemap,Ls.bumpmap,Ls.normalmap,Ls.displacementmap,Ls.gradientmap,Ls.fog,Ls.lights,{emissive:{value:new Xn(0)}}]),vertexShader:Ds.meshtoon_vert,fragmentShader:Ds.meshtoon_frag},matcap:{uniforms:fs([Ls.common,Ls.bumpmap,Ls.normalmap,Ls.displacementmap,Ls.fog,{matcap:{value:null}}]),vertexShader:Ds.meshmatcap_vert,fragmentShader:Ds.meshmatcap_frag},points:{uniforms:fs([Ls.points,Ls.fog]),vertexShader:Ds.points_vert,fragmentShader:Ds.points_frag},dashed:{uniforms:fs([Ls.common,Ls.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ds.linedashed_vert,fragmentShader:Ds.linedashed_frag},depth:{uniforms:fs([Ls.common,Ls.displacementmap]),vertexShader:Ds.depth_vert,fragmentShader:Ds.depth_frag},normal:{uniforms:fs([Ls.common,Ls.bumpmap,Ls.normalmap,Ls.displacementmap,{opacity:{value:1}}]),vertexShader:Ds.meshnormal_vert,fragmentShader:Ds.meshnormal_frag},sprite:{uniforms:fs([Ls.sprite,Ls.fog]),vertexShader:Ds.sprite_vert,fragmentShader:Ds.sprite_frag},background:{uniforms:{uvTransform:{value:new Dn},t2D:{value:null}},vertexShader:Ds.background_vert,fragmentShader:Ds.background_frag},cube:{uniforms:fs([Ls.envmap,{opacity:{value:1}}]),vertexShader:Ds.cube_vert,fragmentShader:Ds.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ds.equirect_vert,fragmentShader:Ds.equirect_frag},distanceRGBA:{uniforms:fs([Ls.common,Ls.displacementmap,{referencePosition:{value:new ur},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ds.distanceRGBA_vert,fragmentShader:Ds.distanceRGBA_frag},shadow:{uniforms:fs([Ls.lights,Ls.fog,{color:{value:new Xn(0)},opacity:{value:1}}]),vertexShader:Ds.shadow_vert,fragmentShader:Ds.shadow_frag}};function $s(t,e,n,r,i,s){const a=new Xn(0);let o,l,u=!0===i?0:1,c=null,h=0,d=null;function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),u=e,p(a,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,p(a,u)},render:function(n,i){let s=!1,f=!0===i.isScene?i.background:null;f&&f.isTexture&&(f=e.get(f));const m=t.xr,g=m.getSession&&m.getSession();g&&"additive"===g.environmentBlendMode&&(f=null),null===f?p(a,u):f&&f.isColor&&(p(f,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.mapping===dt)?(void 0===l&&(l=new cs(new ds(1,1,1),new gs({name:"BackgroundCubeMaterial",uniforms:ps(Fs.cube.uniforms),vertexShader:Fs.cube.vertexShader,fragmentShader:Fs.cube.fragmentShader,side:y,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=f,l.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,c===f&&h===f.version&&d===t.toneMapping||(l.material.needsUpdate=!0,c=f,h=f.version,d=t.toneMapping),l.layers.enableAll(),n.unshift(l,l.geometry,l.material,0,0,null)):f&&f.isTexture&&(void 0===o&&(o=new cs(new Rs(2,2),new gs({name:"BackgroundMaterial",uniforms:ps(Fs.background.uniforms),vertexShader:Fs.background.vertexShader,fragmentShader:Fs.background.fragmentShader,side:x,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),o.material.uniforms.uvTransform.value.copy(f.matrix),c===f&&h===f.version&&d===t.toneMapping||(o.material.needsUpdate=!0,c=f,h=f.version,d=t.toneMapping),o.layers.enableAll(),n.unshift(o,o.geometry,o.material,0,0,null))}}}function Ps(t,e,n,r){const i=t.getParameter(34921),s=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||null!==s,o={},l=p(null);let u=l,c=!1;function h(e){return r.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function d(e){return r.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function p(t){const e=[],n=[],r=[];for(let t=0;t<i;t++)e[t]=0,n[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function f(){const t=u.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){g(t,0)}function g(n,i){const s=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;s[n]=1,0===a[n]&&(t.enableVertexAttribArray(n),a[n]=1),o[n]!==i&&((r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i)}function x(){const e=u.newAttributes,n=u.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function y(e,n,i,s,a,o){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,s,a,o):t.vertexAttribIPointer(e,n,i,a,o)}function v(){b(),c=!0,u!==l&&(u=l,h(u.object))}function b(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,v,b){let w=!1;if(a){const e=function(e,n,i){const a=!0===i.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[a];return void 0===c&&(c=p(r.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),u[a]=c),c}(v,d,l);u!==e&&(u=e,h(u.object)),w=function(t,e,n,r){const i=u.attributes,s=e.attributes;let a=0;const o=n.getAttributes();for(const e in o)if(o[e].location>=0){const n=i[e];let r=s[e];if(void 0===r&&("instanceMatrix"===e&&t.instanceMatrix&&(r=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(r=t.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;a++}return u.attributesNum!==a||u.index!==r}(i,v,d,b),w&&function(t,e,n,r){const i={},s=e.attributes;let a=0;const o=n.getAttributes();for(const e in o)if(o[e].location>=0){let n=s[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[e]=r,a++}u.attributes=i,u.attributesNum=a,u.index=r}(i,v,d,b)}else{const t=!0===l.wireframe;u.geometry===v.id&&u.program===d.id&&u.wireframe===t||(u.geometry=v.id,u.program=d.id,u.wireframe=t,w=!0)}null!==b&&n.update(b,34963),(w||c)&&(c=!1,function(i,s,a,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;f();const l=o.attributes,u=a.getAttributes(),c=s.defaultAttributeValues;for(const e in u){const r=u[e];if(r.location>=0){let s=l[e];if(void 0===s&&("instanceMatrix"===e&&i.instanceMatrix&&(s=i.instanceMatrix),"instanceColor"===e&&i.instanceColor&&(s=i.instanceColor)),void 0!==s){const e=s.normalized,a=s.itemSize,l=n.get(s);if(void 0===l)continue;const u=l.buffer,c=l.type,h=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,l=n.stride,d=s.offset;if(n.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)g(r.location+t,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<r.locationSize;t++)m(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)y(r.location+t,a/r.locationSize,c,e,l*h,(d+a/r.locationSize*t)*h)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)g(r.location+t,s.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<r.locationSize;t++)m(r.location+t);t.bindBuffer(34962,u);for(let t=0;t<r.locationSize;t++)y(r.location+t,a/r.locationSize,c,e,a*h,a/r.locationSize*t*h)}}else if(void 0!==c){const n=c[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}x()}(i,l,d,v),null!==b&&t.bindBuffer(34963,n.get(b).buffer))},reset:v,resetDefaultState:b,dispose:function(){v();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)d(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)d(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)d(r[t].object),delete r[t];delete n[t.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:x}}function Os(t,e,n,r){const i=r.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,r){t.drawArrays(s,e,r),n.update(r,s,1)},this.renderInstances=function(r,a,o){if(0===o)return;let l,u;if(i)l=t,u="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](s,r,a,o),n.update(a,s,o)}}function zs(t,e,n){let r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:"highp";const o=i(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=s||e.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),f=t.getParameter(34921),m=t.getParameter(36347),g=t.getParameter(36348),x=t.getParameter(36349),y=h>0,v=s||e.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:a,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:x,vertexTextures:y,floatFragmentTextures:v,floatVertexTextures:y&&v,maxSamples:s?t.getParameter(36183):0}}function Bs(t){const e=this;let n=null,r=0,i=!1,s=!1;const a=new Ms,o=new Dn,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(t,n,r,i){const s=null!==t?t.length:0;let u=null;if(0!==s){if(u=l.value,!0!==i||null===u){const e=r+4*s,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<e)&&(u=new Float32Array(e));for(let e=0,n=r;e!==s;++e,n+=4)a.copy(t[e]).applyMatrix4(i,o),a.normal.toArray(u,n),u[n+3]=a.constant}l.value=u,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const a=0!==t.length||e||0!==r||i;return i=e,n=c(t,s,0),r=t.length,a},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,u()},this.setState=function(e,a,o){const h=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!i||null===h||0===h.length||s&&!p)s?c(null):u();else{const t=s?0:r,e=4*t;let i=f.clippingState||null;l.value=i,i=c(h,a,e,o);for(let t=0;t!==e;++t)i[t]=n[t];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Us(t){let e=new WeakMap;function n(t,e){return e===ct?t.mapping=lt:e===ht&&(t.mapping=ut),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const s=i.mapping;if(s===ct||s===ht){if(e.has(i))return n(e.get(i).texture,i.mapping);{const s=i.image;if(s&&s.height>0){const a=new Ss(s.height/2);return a.fromEquirectangularTexture(t,i),e.set(i,a),i.addEventListener("dispose",r),n(a.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}Fs.physical={uniforms:fs([Fs.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Rn(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Xn(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Rn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Xn(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Xn(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ds.meshphysical_vert,fragmentShader:Ds.meshphysical_frag};class Ws extends xs{constructor(t=-1,e=1,n=1,r=-1,i=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,s=n+t,a=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,s=i+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(i,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Vs=[.125,.215,.35,.446,.526,.582],Gs=new Ws,Hs=new Xn;let js=null;const qs=(1+Math.sqrt(5))/2,Xs=1/qs,Ks=[new ur(1,1,1),new ur(-1,1,1),new ur(1,1,-1),new ur(-1,1,-1),new ur(0,qs,Xs),new ur(0,qs,-Xs),new ur(Xs,0,qs),new ur(-Xs,0,qs),new ur(qs,Xs,0),new ur(-qs,Xs,0)];class Ys{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){js=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ta(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Qs(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(js),t.scissorTest=!1,Js(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===lt||t.mapping===ut?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),js=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:wt,minFilter:wt,generateMipmaps:!1,type:Dt,format:zt,encoding:Fe,depthBuffer:!1},r=Zs(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Zs(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],r=[];let i=t;const s=t-4+1+Vs.length;for(let a=0;a<s;a++){const s=Math.pow(2,i);n.push(s);let o=1/s;a>t-4?o=Vs[a-t+4-1]:0===a&&(o=0),r.push(o);const l=1/(s-2),u=-l,c=1+l,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,f=3,m=2,g=1,x=new Float32Array(f*p*d),y=new Float32Array(m*p*d),v=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];x.set(r,f*p*t),y.set(h,m*p*t);const i=[t,t,t,t,t,t];v.set(i,g*p*t)}const b=new ji;b.setAttribute("position",new Ci(x,f)),b.setAttribute("uv",new Ci(y,m)),b.setAttribute("faceIndex",new Ci(v,g)),e.push(b),i>4&&i--}return{lodPlanes:e,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(t,e,n){const r=new Float32Array(20),i=new ur(0,1,0);return new gs({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:S,depthTest:!1,depthWrite:!1})}(r,t,e)}return r}_compileMaterial(t){const e=new cs(this._lodPlanes[0],t);this._renderer.compile(e,Gs)}_sceneToCubeUV(t,e,n,r){const i=new ys(90,1,e,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(Hs),o.toneMapping=et,o.autoClear=!1;const c=new Ii({name:"PMREM.Background",side:y,depthWrite:!1,depthTest:!1}),h=new cs(new ds,c);let d=!1;const p=t.background;p?p.isColor&&(c.color.copy(p),t.background=null,d=!0):(c.color.copy(Hs),d=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(i.up.set(0,s[e],0),i.lookAt(a[e],0,0)):1===n?(i.up.set(0,0,s[e]),i.lookAt(0,a[e],0)):(i.up.set(0,s[e],0),i.lookAt(0,0,a[e]));const l=this._cubeSize;Js(r,n*l,e>2?l:0,l,l),o.setRenderTarget(r),d&&o.render(h,i),o.render(t,i)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=u,o.autoClear=l,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===lt||t.mapping===ut;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=ta()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Qs());const i=r?this._cubemapMaterial:this._equirectMaterial,s=new cs(this._lodPlanes[0],i);i.uniforms.envMap.value=t;const a=this._cubeSize;Js(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(s,Gs)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),r=Ks[(e-1)%Ks.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(t,e,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,r,"latitudinal",i),this._halfBlur(s,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new cs(this._lodPlanes[r],l),c=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<20;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0===t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;c.envMap.value=t.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a);const{_lodMax:x}=this;c.dTheta.value=d,c.mipInt.value=x-n;const y=this._sizeLods[r];Js(e,3*y*(r>x-4?r-x+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(u,Gs)}}function Zs(t,e,n){const r=new nr(t,e,n);return r.texture.mapping=dt,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Js(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function Qs(){return new gs({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:S,depthTest:!1,depthWrite:!1})}function ta(){return new gs({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:S,depthTest:!1,depthWrite:!1})}function ea(t){let e=new WeakMap,n=null;function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping,a=s===ct||s===ht,o=s===lt||s===ut;if(a||o){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=e.get(i);return null===n&&(n=new Ys(t)),r=a?n.fromEquirectangular(i,r):n.fromCubemap(i,r),e.set(i,r),r.texture}if(e.has(i))return e.get(i).texture;{const s=i.image;if(a&&s&&s.height>0||o&&s&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(s)){null===n&&(n=new Ys(t));const s=a?n.fromEquirectangular(i):n.fromCubemap(i);return e.set(i,s),i.addEventListener("dispose",r),s.texture}return null}}}return i},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function na(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function ra(t,e,n,r){const i={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",a),delete i[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],r=t.index,i=t.attributes.position;let a=0;if(null!==r){const t=r.array;a=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],s=t[e+2];n.push(r,i,i,s,s,r)}}else{const t=i.array;a=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const o=new(Ln(n)?Fi:Di)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===i[e.id]||(e.addEventListener("dispose",a),i[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let t=0,r=n.length;t<r;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function ia(t,e,n,r){const i=r.isWebGL2;let s,a,o;this.setMode=function(t){s=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,r){t.drawElements(s,r,a,e*o),n.update(r,s,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(i)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,l,a,r*o,u),n.update(l,s,u)}}function sa(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function aa(t,e){return t[0]-e[0]}function oa(t,e){return Math.abs(e[1])-Math.abs(t[1])}function la(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Uint8Array?n=255:r instanceof Uint16Array?n=65535:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function ua(t,e,n){const r={},i=new Float32Array(8),s=new WeakMap,a=new er,o=[];for(let t=0;t<8;t++)o[t]=[t,0];return{update:function(l,u,c,h){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=void 0!==p?p.length:0;let m=s.get(u);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();const y=void 0!==u.morphAttributes.position,v=void 0!==u.morphAttributes.normal,b=void 0!==u.morphAttributes.color,w=u.morphAttributes.position||[],S=u.morphAttributes.normal||[],_=u.morphAttributes.color||[];let k=0;!0===y&&(k=1),!0===v&&(k=2),!0===b&&(k=3);let I=u.attributes.position.count*k,M=1;I>e.maxTextureSize&&(M=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const T=new Float32Array(I*M*4*f),C=new rr(T,I,M,f);C.type=Rt,C.needsUpdate=!0;const E=4*k;for(let N=0;N<f;N++){const R=w[N],D=S[N],L=_[N],F=I*M*4*N;for(let $=0;$<R.count;$++){const P=$*E;!0===y&&(a.fromBufferAttribute(R,$),!0===R.normalized&&la(a,R),T[F+P+0]=a.x,T[F+P+1]=a.y,T[F+P+2]=a.z,T[F+P+3]=0),!0===v&&(a.fromBufferAttribute(D,$),!0===D.normalized&&la(a,D),T[F+P+4]=a.x,T[F+P+5]=a.y,T[F+P+6]=a.z,T[F+P+7]=0),!0===b&&(a.fromBufferAttribute(L,$),!0===L.normalized&&la(a,L),T[F+P+8]=a.x,T[F+P+9]=a.y,T[F+P+10]=a.z,T[F+P+11]=4===L.itemSize?a.w:1)}}function A(){C.dispose(),s.delete(u),u.removeEventListener("dispose",A)}m={count:f,texture:C,size:new Rn(I,M)},s.set(u,m),u.addEventListener("dispose",A)}let g=0;for(let O=0;O<d.length;O++)g+=d[O];const x=u.morphTargetsRelative?1:1-g;h.getUniforms().setValue(t,"morphTargetBaseInfluence",x),h.getUniforms().setValue(t,"morphTargetInfluences",d),h.getUniforms().setValue(t,"morphTargetsTexture",m.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",m.size)}else{const z=void 0===d?0:d.length;let B=r[u.id];if(void 0===B||B.length!==z){B=[];for(let H=0;H<z;H++)B[H]=[H,0];r[u.id]=B}for(let j=0;j<z;j++){const q=B[j];q[0]=j,q[1]=d[j]}B.sort(oa);for(let X=0;X<8;X++)X<z&&B[X][1]?(o[X][0]=B[X][0],o[X][1]=B[X][1]):(o[X][0]=Number.MAX_SAFE_INTEGER,o[X][1]=0);o.sort(aa);const U=u.morphAttributes.position,W=u.morphAttributes.normal;let V=0;for(let K=0;K<8;K++){const Y=o[K],Z=Y[0],J=Y[1];Z!==Number.MAX_SAFE_INTEGER&&J?(U&&u.getAttribute("morphTarget"+K)!==U[Z]&&u.setAttribute("morphTarget"+K,U[Z]),W&&u.getAttribute("morphNormal"+K)!==W[Z]&&u.setAttribute("morphNormal"+K,W[Z]),i[K]=J,V+=J):(U&&!0===u.hasAttribute("morphTarget"+K)&&u.deleteAttribute("morphTarget"+K),W&&!0===u.hasAttribute("morphNormal"+K)&&u.deleteAttribute("morphNormal"+K),i[K]=0)}const G=u.morphTargetsRelative?1:1-V;h.getUniforms().setValue(t,"morphTargetBaseInfluence",G),h.getUniforms().setValue(t,"morphTargetInfluences",i)}}}}function ca(t,e,n,r){let i=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const a=r.render.frame,o=t.geometry,l=e.get(t,o);return i.get(l)!==a&&(e.update(l),i.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",s)&&t.addEventListener("dispose",s),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}const ha=new tr,da=new rr,pa=new sr,fa=new ws,ma=[],ga=[],xa=new Float32Array(16),ya=new Float32Array(9),va=new Float32Array(4);function ba(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let s=ma[i];if(void 0===s&&(s=new Float32Array(i),ma[i]=s),0!==e){r.toArray(s,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(s,i)}return s}function wa(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Sa(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function _a(t,e){let n=ga[e];void 0===n&&(n=new Int32Array(e),ga[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function ka(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Ia(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(wa(n,e))return;t.uniform2fv(this.addr,e),Sa(n,e)}}function Ma(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(wa(n,e))return;t.uniform3fv(this.addr,e),Sa(n,e)}}function Ta(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(wa(n,e))return;t.uniform4fv(this.addr,e),Sa(n,e)}}function Ca(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(wa(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Sa(n,e)}else{if(wa(n,r))return;va.set(r),t.uniformMatrix2fv(this.addr,!1,va),Sa(n,r)}}function Ea(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(wa(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Sa(n,e)}else{if(wa(n,r))return;ya.set(r),t.uniformMatrix3fv(this.addr,!1,ya),Sa(n,r)}}function Aa(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(wa(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Sa(n,e)}else{if(wa(n,r))return;xa.set(r),t.uniformMatrix4fv(this.addr,!1,xa),Sa(n,r)}}function Na(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ra(t,e){const n=this.cache;wa(n,e)||(t.uniform2iv(this.addr,e),Sa(n,e))}function Da(t,e){const n=this.cache;wa(n,e)||(t.uniform3iv(this.addr,e),Sa(n,e))}function La(t,e){const n=this.cache;wa(n,e)||(t.uniform4iv(this.addr,e),Sa(n,e))}function Fa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function $a(t,e){const n=this.cache;wa(n,e)||(t.uniform2uiv(this.addr,e),Sa(n,e))}function Pa(t,e){const n=this.cache;wa(n,e)||(t.uniform3uiv(this.addr,e),Sa(n,e))}function Oa(t,e){const n=this.cache;wa(n,e)||(t.uniform4uiv(this.addr,e),Sa(n,e))}function za(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(e||ha,i)}function Ba(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||pa,i)}function Ua(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(e||fa,i)}function Wa(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||da,i)}function Va(t,e){t.uniform1fv(this.addr,e)}function Ga(t,e){const n=ba(e,this.size,2);t.uniform2fv(this.addr,n)}function Ha(t,e){const n=ba(e,this.size,3);t.uniform3fv(this.addr,n)}function ja(t,e){const n=ba(e,this.size,4);t.uniform4fv(this.addr,n)}function qa(t,e){const n=ba(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Xa(t,e){const n=ba(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ka(t,e){const n=ba(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ya(t,e){t.uniform1iv(this.addr,e)}function Za(t,e){t.uniform2iv(this.addr,e)}function Ja(t,e){t.uniform3iv(this.addr,e)}function Qa(t,e){t.uniform4iv(this.addr,e)}function to(t,e){t.uniform1uiv(this.addr,e)}function eo(t,e){t.uniform2uiv(this.addr,e)}function no(t,e){t.uniform3uiv(this.addr,e)}function ro(t,e){t.uniform4uiv(this.addr,e)}function io(t,e,n){const r=e.length,i=_a(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.setTexture2D(e[t]||ha,i[t])}function so(t,e,n){const r=e.length,i=_a(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.setTexture3D(e[t]||pa,i[t])}function ao(t,e,n){const r=e.length,i=_a(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.setTextureCube(e[t]||fa,i[t])}function oo(t,e,n){const r=e.length,i=_a(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.setTexture2DArray(e[t]||da,i[t])}class lo{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ka;case 35664:return Ia;case 35665:return Ma;case 35666:return Ta;case 35674:return Ca;case 35675:return Ea;case 35676:return Aa;case 5124:case 35670:return Na;case 35667:case 35671:return Ra;case 35668:case 35672:return Da;case 35669:case 35673:return La;case 5125:return Fa;case 36294:return $a;case 36295:return Pa;case 36296:return Oa;case 35678:case 36198:case 36298:case 36306:case 35682:return za;case 35679:case 36299:case 36307:return Ba;case 35680:case 36300:case 36308:case 36293:return Ua;case 36289:case 36303:case 36311:case 36292:return Wa}}(e.type)}}class uo{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Va;case 35664:return Ga;case 35665:return Ha;case 35666:return ja;case 35674:return qa;case 35675:return Xa;case 35676:return Ka;case 5124:case 35670:return Ya;case 35667:case 35671:return Za;case 35668:case 35672:return Ja;case 35669:case 35673:return Qa;case 5125:return to;case 36294:return eo;case 36295:return no;case 36296:return ro;case 35678:case 36198:case 36298:case 36306:case 35682:return io;case 35679:case 36299:case 36307:return so;case 35680:case 36300:case 36308:case 36293:return ao;case 36289:case 36303:case 36311:case 36292:return oo}}(e.type)}}class co{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(t,e[s.id],n)}}}const ho=/(\w+)(\])?(\[|\.)?/g;function po(t,e){t.seq.push(e),t.map[e.id]=e}function fo(t,e,n){const r=t.name,i=r.length;for(ho.lastIndex=0;;){const s=ho.exec(r),a=ho.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===i){po(n,void 0===u?new lo(o,t,e):new uo(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new co(o),po(n,t)),n=t}}}class mo{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);fo(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)}setOptional(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)}static upload(t,e,n,r){for(let i=0,s=e.length;i!==s;++i){const s=e[i],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,r)}}static seqWithValue(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n}}function go(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}let xo=0;function yo(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();if(r&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(t,e){const n=t.split("\n"),r=[],i=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let t=i;t<s;t++){const i=t+1;r.push(`${i===e?">":" "} ${i}: ${n[t]}`)}return r.join("\n")}(t.getShaderSource(e),r)}return i}function vo(t,e){const n=function(t){switch(t){case Fe:return["Linear","( value )"];case $e:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function bo(t,e){let n;switch(e){case nt:n="Linear";break;case rt:n="Reinhard";break;case it:n="OptimizedCineon";break;case st:n="ACESFilmic";break;case at:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function wo(t){return""!==t}function So(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function _o(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ko=/^[ \t]*#include +<([\w\d./]+)>/gm;function Io(t){return t.replace(ko,Mo)}function Mo(t,e){const n=Ds[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Io(n)}const To=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Co=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Eo(t){return t.replace(Co,No).replace(To,Ao)}function Ao(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),No(0,e,n,r)}function No(t,e,n,r){let i="";for(let t=parseInt(e);t<parseInt(n);t++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return i}function Ro(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Do(t,e,n,r){const i=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===f?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===m?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===g&&(e="SHADOWMAP_TYPE_VSM"),e}(n),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case lt:case ut:e="ENVMAP_TYPE_CUBE";break;case dt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),c=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===ut&&(e="ENVMAP_MODE_REFRACTION"),e}(n),h=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case J:e="ENVMAP_BLENDING_MULTIPLY";break;case Q:e="ENVMAP_BLENDING_MIX";break;case tt:e="ENVMAP_BLENDING_ADD"}return e}(n),d=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wo).join("\n")}(n),x=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(s),y=i.createProgram();let v,b,w=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[x].filter(wo).join("\n"),v.length>0&&(v+="\n"),b=[p,x].filter(wo).join("\n"),b.length>0&&(b+="\n")):(v=[Ro(n),"#define SHADER_NAME "+n.shaderName,x,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(wo).join("\n"),b=[p,Ro(n),"#define SHADER_NAME "+n.shaderName,x,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==et?"#define TONE_MAPPING":"",n.toneMapping!==et?Ds.tonemapping_pars_fragment:"",n.toneMapping!==et?bo("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Ds.encodings_pars_fragment,vo("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(wo).join("\n")),a=Io(a),a=So(a,n),a=_o(a,n),o=Io(o),o=So(o,n),o=_o(o,n),a=Eo(a),o=Eo(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(w="#version 300 es\n",v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,b=["#define varying in",n.glslVersion===xn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===xn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const S=w+b+o,_=go(i,35633,w+v+a),k=go(i,35632,S);if(i.attachShader(y,_),i.attachShader(y,k),void 0!==n.index0AttributeName?i.bindAttribLocation(y,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(y).trim(),e=i.getShaderInfoLog(_).trim(),n=i.getShaderInfoLog(k).trim();let r=!0,s=!0;if(!1===i.getProgramParameter(y,35714)){r=!1;const e=yo(i,_,"vertex"),n=yo(i,k,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(s=!1);s&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:v},fragmentShader:{log:n,prefix:b}})}let I,M;return i.deleteShader(_),i.deleteShader(k),this.getUniforms=function(){return void 0===I&&(I=new mo(i,y)),I},this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),s=r.name;let a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[s]={type:r.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(i,y)),M},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=xo++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=_,this.fragmentShader=k,this}let Lo=0;class Fo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const n=new $o(t);e.set(t,n)}return e.get(t)}}class $o{constructor(t){this.id=Lo++,this.code=t,this.usedTimes=0}}function Po(t,e,n,r,i,s,a){const o=new Zr,l=new Fo,u=[],c=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let p=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,u,m,g){const x=m.fog,b=g.geometry,w=s.isMeshStandardMaterial?m.environment:null,S=(s.isMeshStandardMaterial?n:e).get(s.envMap||w),k=S&&S.mapping===dt?S.image.height:null,I=f[s.type];null!==s.precision&&(p=i.getMaxPrecision(s.precision),p!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead."));const M=b.morphAttributes.position||b.morphAttributes.normal||b.morphAttributes.color,T=void 0!==M?M.length:0;let C,E,A,N,R=0;if(void 0!==b.morphAttributes.position&&(R=1),void 0!==b.morphAttributes.normal&&(R=2),void 0!==b.morphAttributes.color&&(R=3),I){const t=Fs[I];C=t.vertexShader,E=t.fragmentShader}else C=s.vertexShader,E=s.fragmentShader,l.update(s),A=l.getVertexShaderID(s),N=l.getFragmentShaderID(s);const D=t.getRenderTarget(),L=s.alphaTest>0,F=s.clearcoat>0,$=s.iridescence>0;return{isWebGL2:c,shaderID:I,shaderName:s.type,vertexShader:C,fragmentShader:E,defines:s.defines,customVertexShaderID:A,customFragmentShaderID:N,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,instancing:!0===g.isInstancedMesh,instancingColor:!0===g.isInstancedMesh&&null!==g.instanceColor,supportsVertexTextures:d,outputEncoding:null===D?t.outputEncoding:!0===D.isXRRenderTarget?D.texture.encoding:Fe,map:!!s.map,matcap:!!s.matcap,envMap:!!S,envMapMode:S&&S.mapping,envMapCubeUVHeight:k,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===Be,tangentSpaceNormalMap:s.normalMapType===ze,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===$e,clearcoat:F,clearcoatMap:F&&!!s.clearcoatMap,clearcoatRoughnessMap:F&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:F&&!!s.clearcoatNormalMap,iridescence:$,iridescenceMap:$&&!!s.iridescenceMap,iridescenceThicknessMap:$&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&s.blending===_,alphaMap:!!s.alphaMap,alphaTest:L,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!b.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!b.attributes.color&&4===b.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!x,useFog:!0===s.fog,fogExp2:x&&x.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==b.morphAttributes.position,morphNormals:void 0!==b.morphAttributes.normal,morphColors:void 0!==b.morphAttributes.color,morphTargetsCount:T,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:et,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===v,flipSided:s.side===y,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0),e.supportsVertexTextures&&o.enable(1),e.instancing&&o.enable(2),e.instancingColor&&o.enable(3),e.map&&o.enable(4),e.matcap&&o.enable(5),e.envMap&&o.enable(6),e.lightMap&&o.enable(7),e.aoMap&&o.enable(8),e.emissiveMap&&o.enable(9),e.bumpMap&&o.enable(10),e.normalMap&&o.enable(11),e.objectSpaceNormalMap&&o.enable(12),e.tangentSpaceNormalMap&&o.enable(13),e.clearcoat&&o.enable(14),e.clearcoatMap&&o.enable(15),e.clearcoatRoughnessMap&&o.enable(16),e.clearcoatNormalMap&&o.enable(17),e.iridescence&&o.enable(18),e.iridescenceMap&&o.enable(19),e.iridescenceThicknessMap&&o.enable(20),e.displacementMap&&o.enable(21),e.specularMap&&o.enable(22),e.roughnessMap&&o.enable(23),e.metalnessMap&&o.enable(24),e.gradientMap&&o.enable(25),e.alphaMap&&o.enable(26),e.alphaTest&&o.enable(27),e.vertexColors&&o.enable(28),e.vertexAlphas&&o.enable(29),e.vertexUvs&&o.enable(30),e.vertexTangents&&o.enable(31),e.uvsVertexOnly&&o.enable(32),e.fog&&o.enable(33),t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0),e.flatShading&&o.enable(1),e.logarithmicDepthBuffer&&o.enable(2),e.skinning&&o.enable(3),e.morphTargets&&o.enable(4),e.morphNormals&&o.enable(5),e.morphColors&&o.enable(6),e.premultipliedAlpha&&o.enable(7),e.shadowMapEnabled&&o.enable(8),e.physicallyCorrectLights&&o.enable(9),e.doubleSided&&o.enable(10),e.flipSided&&o.enable(11),e.useDepthPacking&&o.enable(12),e.dithering&&o.enable(13),e.specularIntensityMap&&o.enable(14),e.specularColorMap&&o.enable(15),e.transmission&&o.enable(16),e.transmissionMap&&o.enable(17),e.thicknessMap&&o.enable(18),e.sheen&&o.enable(19),e.sheenColorMap&&o.enable(20),e.sheenRoughnessMap&&o.enable(21),e.decodeVideoTexture&&o.enable(22),e.opaque&&o.enable(23),t.push(o.mask)}(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=Fs[e];n=ms.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,e=u.length;t<e;t++){const e=u[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Do(t,n,e,s),u.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=u.indexOf(t);u[e]=u[u.length-1],u.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:u,dispose:function(){l.dispose()}}}function Oo(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function zo(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Bo(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Uo(){const t=[];let e=0;const n=[],r=[],i=[];function s(n,r,i,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){e=0,n.length=0,r.length=0,i.length=0},push:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.push(c):!0===a.transparent?i.push(c):n.push(c)},unshift:function(t,e,a,o,l,u){const c=s(t,e,a,o,l,u);a.transmission>0?r.unshift(c):!0===a.transparent?i.unshift(c):n.unshift(c)},finish:function(){for(let n=e,r=t.length;n<r;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||zo),r.length>1&&r.sort(e||Bo),i.length>1&&i.sort(e||Bo)}}}function Wo(){let t=new WeakMap;return{get:function(e,n){let r;return!1===t.has(e)?(r=new Uo,t.set(e,[r])):n>=t.get(e).length?(r=new Uo,t.get(e).push(r)):r=t.get(e)[n],r},dispose:function(){t=new WeakMap}}}function Vo(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ur,color:new Xn};break;case"SpotLight":n={position:new ur,direction:new ur,color:new Xn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ur,color:new Xn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ur,skyColor:new Xn,groundColor:new Xn};break;case"RectAreaLight":n={color:new Xn,position:new ur,halfWidth:new ur,halfHeight:new ur}}return t[e.id]=n,n}}}let Go=0;function Ho(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function jo(t,e){const n=new Vo,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rn,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)i.probe.push(new ur);const s=new ur,a=new Br,o=new Br;return{setup:function(s,a){let o=0,l=0,u=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let c=0,h=0,d=0,p=0,f=0,m=0,g=0,x=0;s.sort(Ho);const y=!0!==a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,v=e.intensity,b=e.distance,w=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*v*y,l+=a.g*v*y,u+=a.b*v*y;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=w,i.directionalShadowMatrix[c]=e.shadow.matrix,m++}i.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(v*y),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[d]=n,i.spotShadowMap[d]=w,i.spotShadowMatrix[d]=e.shadow.matrix,x++}i.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(a).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=w,i.pointShadowMatrix[h]=e.shadow.matrix,g++}i.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v*y),t.groundColor.copy(e.groundColor).multiplyScalar(v*y),i.hemi[f]=t,f++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=Ls.LTC_FLOAT_1,i.rectAreaLTC2=Ls.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Ls.LTC_HALF_1,i.rectAreaLTC2=Ls.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=u;const v=i.hash;v.directionalLength===c&&v.pointLength===h&&v.spotLength===d&&v.rectAreaLength===p&&v.hemiLength===f&&v.numDirectionalShadows===m&&v.numPointShadows===g&&v.numSpotShadows===x||(i.directional.length=c,i.spot.length=d,i.rectArea.length=p,i.point.length=h,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=x,i.spotShadowMap.length=x,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=x,v.directionalLength=c,v.pointLength=h,v.spotLength=d,v.rectAreaLength=p,v.hemiLength=f,v.numDirectionalShadows=m,v.numPointShadows=g,v.numSpotShadows=x,i.version=Go++)},setupView:function(t,e){let n=0,r=0,l=0,u=0,c=0;const h=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),n++}else if(d.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const t=i.rectArea[u];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),o.identity(),a.copy(d.matrixWorld),a.premultiply(h),o.extractRotation(a),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),u++}else if(d.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const t=i.hemi[c];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(h),c++}}},state:i}}function qo(t,e){const n=new jo(t,e),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(t){n.setup(r,t)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){i.push(t)}}}function Xo(t,e){let n=new WeakMap;return{get:function(r,i=0){let s;return!1===n.has(r)?(s=new qo(t,e),n.set(r,[s])):i>=n.get(r).length?(s=new qo(t,e),n.get(r).push(s)):s=n.get(r)[i],s},dispose:function(){n=new WeakMap}}}class Ko extends ki{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Pe,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Yo extends ki{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ur,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Zo(t,e,n){let r=new Es;const i=new Rn,s=new Rn,a=new er,o=new Ko({depthPacking:Oe}),l=new Yo,u={},c=n.maxTextureSize,h={0:y,1:x,2:v},d=new gs({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Rn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const m=new ji;m.setAttribute("position",new Ci(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new cs(m,d),w=this;function _(n,r){const s=e.update(b);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new nr(i.x,i.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,s,d,b,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,s,p,b,null)}function k(e,n,r,i,s,a){let c=null;const d=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(c=void 0!==d?d:!0===r.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const t=c.uuid,e=n.uuid;let r=u[t];void 0===r&&(r={},u[t]=r);let i=r[e];void 0===i&&(i=c.clone(),r[e]=i),c=i}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=a===g?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],c.alphaMap=n.alphaMap,c.alphaTest=n.alphaTest,c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.displacementMap=n.displacementMap,c.displacementScale=n.displacementScale,c.displacementBias=n.displacementBias,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=i,c.farDistance=s),c}function I(n,i,s,a,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===g)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let l=0,u=e.length;l<u;l++){const u=e[l],c=i[u.materialIndex];if(c&&c.visible){const e=k(n,c,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,u)}}}else if(i.visible){const e=k(n,i,a,s.near,s.far,o);t.renderBufferDirect(s,null,r,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)I(l[t],i,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=f,this.render=function(e,n,o){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),u=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(S),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,u=e.length;l<u;l++){const u=e[l],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const p=h.getFrameExtents();if(i.multiply(p),s.copy(h.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(s.x=Math.floor(c/p.x),i.x=s.x*p.x,h.mapSize.x=s.x),i.y>c&&(s.y=Math.floor(c/p.y),i.y=s.y*p.y,h.mapSize.y=s.y)),null===h.map){const t=this.type!==g?{minFilter:gt,magFilter:gt}:{};h.map=new nr(i.x,i.y,t),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}t.setRenderTarget(h.map),t.clear();const f=h.getViewportCount();for(let t=0;t<f;t++){const e=h.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),h.updateMatrices(u,t),r=h.getFrustum(),I(n,o,h.camera,u,this.type)}!0!==h.isPointLightShadow&&this.type===g&&_(h,o),h.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(l,u,h)}}function Jo(t,e,n){const r=n.isWebGL2,i=new function(){let e=!1;const n=new er;let r=null;const i=new er(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,s,a,o){!0===o&&(e*=a,r*=a,s*=a),n.set(e,r,s,a),!1===i.equals(n)&&(t.clearColor(e,r,s,a),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?wt(2929):St(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case G:t.depthFunc(512);break;case H:t.depthFunc(519);break;case j:t.depthFunc(513);break;case q:t.depthFunc(515);break;case X:t.depthFunc(514);break;case K:t.depthFunc(518);break;case Y:t.depthFunc(516);break;case Z:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},a=new function(){let e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(t){e||(t?wt(2960):St(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,a){r===e&&i===n&&s===a||(t.stencilFunc(e,n,a),r=e,i=n,s=a)},setOp:function(e,n,r){a===e&&o===n&&l===r||(t.stencilOp(e,n,r),a=e,o=n,l=r)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null}}},o=new WeakMap,l=new WeakMap;let d={},p={},f=new WeakMap,m=[],g=null,x=!1,b=null,w=null,J=null,Q=null,tt=null,et=null,nt=null,rt=!1,it=null,st=null,at=null,ot=null,lt=null;const ut=t.getParameter(35661);let ct=!1,ht=0;const dt=t.getParameter(7938);-1!==dt.indexOf("WebGL")?(ht=parseFloat(/^WebGL (\d)/.exec(dt)[1]),ct=ht>=1):-1!==dt.indexOf("OpenGL ES")&&(ht=parseFloat(/^OpenGL ES (\d)/.exec(dt)[1]),ct=ht>=2);let pt=null,ft={};const mt=t.getParameter(3088),gt=t.getParameter(2978),xt=(new er).fromArray(mt),yt=(new er).fromArray(gt);function vt(e,n,r){const i=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<r;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,i);return s}const bt={};function wt(e){!0!==d[e]&&(t.enable(e),d[e]=!0)}function St(e){!1!==d[e]&&(t.disable(e),d[e]=!1)}bt[3553]=vt(3553,3553,1),bt[34067]=vt(34067,34069,6),i.setClear(0,0,0,1),s.setClear(1),a.setClear(0),wt(2929),s.setFunc(q),Mt(!1),Tt(c),wt(2884),It(S);const _t={[C]:32774,[E]:32778,[A]:32779};if(r)_t[N]=32775,_t[R]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(_t[N]=t.MIN_EXT,_t[R]=t.MAX_EXT)}const kt={[D]:0,[L]:1,[F]:768,[P]:770,[V]:776,[U]:774,[z]:772,[$]:769,[O]:771,[W]:775,[B]:773};function It(e,n,r,i,s,a,o,l){if(e!==S){if(!1===x&&(wt(3042),x=!0),e===T)s=s||n,a=a||r,o=o||i,n===w&&s===tt||(t.blendEquationSeparate(_t[n],_t[s]),w=n,tt=s),r===J&&i===Q&&a===et&&o===nt||(t.blendFuncSeparate(kt[r],kt[i],kt[a],kt[o]),J=r,Q=i,et=a,nt=o),b=e,rt=null;else if(e!==b||l!==rt){if(w===C&&tt===C||(t.blendEquation(32774),w=C,tt=C),l)switch(e){case _:t.blendFuncSeparate(1,771,1,771);break;case k:t.blendFunc(1,1);break;case I:t.blendFuncSeparate(0,769,0,1);break;case M:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case _:t.blendFuncSeparate(770,771,1,771);break;case k:t.blendFunc(770,1);break;case I:t.blendFuncSeparate(0,769,0,1);break;case M:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}J=null,Q=null,et=null,nt=null,b=e,rt=l}}else!0===x&&(St(3042),x=!1)}function Mt(e){it!==e&&(e?t.frontFace(2304):t.frontFace(2305),it=e)}function Tt(e){e!==u?(wt(2884),e!==st&&(e===c?t.cullFace(1029):e===h?t.cullFace(1028):t.cullFace(1032))):St(2884),st=e}function Ct(e,n,r){e?(wt(32823),ot===n&&lt===r||(t.polygonOffset(n,r),ot=n,lt=r)):St(32823)}function Et(e){void 0===e&&(e=33984+ut-1),pt!==e&&(t.activeTexture(e),pt=e)}return{buffers:{color:i,depth:s,stencil:a},enable:wt,disable:St,bindFramebuffer:function(e,n){return p[e]!==n&&(t.bindFramebuffer(e,n),p[e]=n,r&&(36009===e&&(p[36160]=n),36160===e&&(p[36009]=n)),!0)},drawBuffers:function(r,i){let s=m,a=!1;if(r)if(s=f.get(i),void 0===s&&(s=[],f.set(i,s)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(s.length!==t.length||36064!==s[0]){for(let e=0,n=t.length;e<n;e++)s[e]=36064+e;s.length=t.length,a=!0}}else 36064!==s[0]&&(s[0]=36064,a=!0);else 1029!==s[0]&&(s[0]=1029,a=!0);a&&(n.isWebGL2?t.drawBuffers(s):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))},useProgram:function(e){return g!==e&&(t.useProgram(e),g=e,!0)},setBlending:It,setMaterial:function(t,e){t.side===v?St(2884):wt(2884);let n=t.side===y;e&&(n=!n),Mt(n),t.blending===_&&!1===t.transparent?It(S):It(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),i.setMask(t.colorWrite);const r=t.stencilWrite;a.setTest(r),r&&(a.setMask(t.stencilWriteMask),a.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),a.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Ct(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?wt(32926):St(32926)},setFlipSided:Mt,setCullFace:Tt,setLineWidth:function(e){e!==at&&(ct&&t.lineWidth(e),at=e)},setPolygonOffset:Ct,setScissorTest:function(t){t?wt(3089):St(3089)},activeTexture:Et,bindTexture:function(e,n){null===pt&&Et();let r=ft[pt];void 0===r&&(r={type:void 0,texture:void 0},ft[pt]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||bt[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=ft[pt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let r=l.get(n);void 0===r&&(r=new WeakMap,l.set(n,r));let i=r.get(e);void 0===i&&(i=t.getUniformBlockIndex(n,e.name),r.set(e,i))},uniformBlockBinding:function(e,n){const r=l.get(n).get(e);o.get(e)!==r&&(t.uniformBlockBinding(n,r,e.__bindingPointIndex),o.set(e,r))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===xt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),xt.copy(e))},viewport:function(e){!1===yt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),yt.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),d={},pt=null,ft={},p={},f=new WeakMap,m=[],g=null,x=!1,b=null,w=null,J=null,Q=null,tt=null,et=null,nt=null,rt=!1,it=null,st=null,at=null,ot=null,lt=null,xt.set(0,0,t.canvas.width,t.canvas.height),yt.set(0,0,t.canvas.width,t.canvas.height),i.reset(),s.reset(),a.reset()}}}function Qo(t,e,n,r,i,s,a){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let m;const g=new WeakMap;let x=!1;try{x="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function y(t,e){return x?new OffscreenCanvas(t,e):Pn("canvas")}function v(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?An:Math.floor,s=r(i*t.width),a=r(i*t.height);void 0===m&&(m=y(s,a));const o=n?y(s,a):m;return o.width=s,o.height=a,o.getContext("2d").drawImage(t,0,0,s,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+a+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function b(t){return Cn(t.width)&&Cn(t.height)}function w(t,e){return t.generateMipmaps&&e&&t.minFilter!==gt&&t.minFilter!==wt}function S(e){t.generateMipmap(e)}function _(n,r,i,s,a=!1){if(!1===o)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;return 6403===r&&(5126===i&&(l=33326),5131===i&&(l=33325),5121===i&&(l=33321)),33319===r&&(5126===i&&(l=33328),5131===i&&(l=33327),5121===i&&(l=33323)),6408===r&&(5126===i&&(l=34836),5131===i&&(l=34842),5121===i&&(l=s===$e&&!1===a?35907:32856),32819===i&&(l=32854),32820===i&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function k(t,e,n){return!0===w(t,n)||t.isFramebufferTexture&&t.minFilter!==gt&&t.minFilter!==wt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function I(t){return t===gt||t===xt||t===vt?9728:9729}function M(t){const e=t.target;e.removeEventListener("dispose",M),function(t){const e=r.get(t);if(void 0===e.__webglInit)return;const n=t.source,i=g.get(n);if(i){const r=i[e.__cacheKey];r.usedTimes--,0===r.usedTimes&&C(t),0===Object.keys(i).length&&g.delete(n)}r.remove(t)}(e),e.isVideoTexture&&f.delete(e)}function T(e){const n=e.target;n.removeEventListener("dispose",T),function(e){const n=e.texture,i=r.get(e),s=r.get(n);if(void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else{if(t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let e=0;e<i.__webglColorRenderbuffer.length;e++)i.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(i.__webglColorRenderbuffer[e]);i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);i.__webglTexture&&(t.deleteTexture(i.__webglTexture),a.memory.textures--),r.remove(n[e])}r.remove(n),r.remove(e)}(n)}function C(e){const n=r.get(e);t.deleteTexture(n.__webglTexture);const i=e.source;delete g.get(i)[n.__cacheKey],a.memory.textures--}let E=0;function A(t,e){const i=r.get(t);if(t.isVideoTexture&&function(t){const e=a.render.frame;f.get(t)!==e&&(f.set(t,e),t.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&i.__version!==t.version){const n=t.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void F(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}const N={[pt]:10497,[ft]:33071,[mt]:33648},R={[gt]:9728,[xt]:9984,[vt]:9986,[wt]:9729,[St]:9985,[kt]:9987};function D(n,s,a){if(a?(t.texParameteri(n,10242,N[s.wrapS]),t.texParameteri(n,10243,N[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,N[s.wrapR]),t.texParameteri(n,10240,R[s.magFilter]),t.texParameteri(n,10241,R[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===ft&&s.wrapT===ft||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,I(s.magFilter)),t.texParameteri(n,10241,I(s.minFilter)),s.minFilter!==gt&&s.minFilter!==wt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const a=e.get("EXT_texture_filter_anisotropic");if(s.type===Rt&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&s.type===Dt&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||r.get(s).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy)}}function L(e,n){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",M));const i=n.source;let s=g.get(i);void 0===s&&(s={},g.set(i,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}(n);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,r=!0),s[o].usedTimes++;const i=s[e.__cacheKey];void 0!==i&&(s[e.__cacheKey].usedTimes--,0===i.usedTimes&&C(n)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return r}function F(e,r,i){let a=3553;r.isDataArrayTexture&&(a=35866),r.isData3DTexture&&(a=32879);const l=L(e,r),u=r.source;if(n.activeTexture(33984+i),n.bindTexture(a,e.__webglTexture),u.version!==u.__currentVersion||!0===l){t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const e=function(t){return!o&&(t.wrapS!==ft||t.wrapT!==ft||t.minFilter!==gt&&t.minFilter!==wt)}(r)&&!1===b(r.image);let i=v(r.image,e,!1,c);i=U(r,i);const h=b(i)||o,d=s.convert(r.format,r.encoding);let p,f=s.convert(r.type),m=_(r.internalFormat,d,f,r.encoding,r.isVideoTexture);D(a,r,h);const g=r.mipmaps,x=o&&!0!==r.isVideoTexture,y=void 0===u.__currentVersion||!0===l,I=k(r,i,h);if(r.isDepthTexture)m=6402,o?m=r.type===Rt?36012:r.type===Nt?33190:r.type===$t?35056:33189:r.type===Rt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Wt&&6402===m&&r.type!==Et&&r.type!==Nt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Nt,f=s.convert(r.type)),r.format===Vt&&6402===m&&(m=34041,r.type!==$t&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=$t,f=s.convert(r.type))),y&&(x?n.texStorage2D(3553,1,m,i.width,i.height):n.texImage2D(3553,0,m,i.width,i.height,0,d,f,null));else if(r.isDataTexture)if(g.length>0&&h){x&&y&&n.texStorage2D(3553,I,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],x?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1}else x?(y&&n.texStorage2D(3553,I,m,i.width,i.height),n.texSubImage2D(3553,0,0,0,i.width,i.height,d,f,i.data)):n.texImage2D(3553,0,m,i.width,i.height,0,d,f,i.data);else if(r.isCompressedTexture){x&&y&&n.texStorage2D(3553,I,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],r.format!==zt?null!==d?x?n.compressedTexSubImage2D(3553,t,0,0,p.width,p.height,d,p.data):n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):x?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data)}else if(r.isDataArrayTexture)x?(y&&n.texStorage3D(35866,I,m,i.width,i.height,i.depth),n.texSubImage3D(35866,0,0,0,0,i.width,i.height,i.depth,d,f,i.data)):n.texImage3D(35866,0,m,i.width,i.height,i.depth,0,d,f,i.data);else if(r.isData3DTexture)x?(y&&n.texStorage3D(32879,I,m,i.width,i.height,i.depth),n.texSubImage3D(32879,0,0,0,0,i.width,i.height,i.depth,d,f,i.data)):n.texImage3D(32879,0,m,i.width,i.height,i.depth,0,d,f,i.data);else if(r.isFramebufferTexture){if(y)if(x)n.texStorage2D(3553,I,m,i.width,i.height);else{let t=i.width,e=i.height;for(let r=0;r<I;r++)n.texImage2D(3553,r,m,t,e,0,d,f,null),t>>=1,e>>=1}}else if(g.length>0&&h){x&&y&&n.texStorage2D(3553,I,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],x?n.texSubImage2D(3553,t,0,0,d,f,p):n.texImage2D(3553,t,m,d,f,p);r.generateMipmaps=!1}else x?(y&&n.texStorage2D(3553,I,m,i.width,i.height),n.texSubImage2D(3553,0,0,0,d,f,i)):n.texImage2D(3553,0,m,d,f,i);w(r,h)&&S(a),u.__currentVersion=u.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function $(e,i,a,o,l){const u=s.convert(a.format,a.encoding),c=s.convert(a.type),h=_(a.internalFormat,u,c,a.encoding);r.get(i).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,i.width,i.height,i.depth,0,u,c,null):n.texImage2D(l,0,h,i.width,i.height,0,u,c,null)),n.bindFramebuffer(36160,e),B(i)?d.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(a).__webglTexture,0,z(i)):t.framebufferTexture2D(36160,o,l,r.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function P(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||B(n)){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Rt?i=36012:e.type===Nt&&(i=33190));const r=z(n);B(n)?d.renderbufferStorageMultisampleEXT(36161,r,i,n.width,n.height):t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const i=z(n);r&&!1===B(n)?t.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):B(n)?d.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let i=0;i<e.length;i++){const a=e[i],o=s.convert(a.format,a.encoding),l=s.convert(a.type),u=_(a.internalFormat,o,l,a.encoding),c=z(n);r&&!1===B(n)?t.renderbufferStorageMultisample(36161,c,u,n.width,n.height):B(n)?d.renderbufferStorageMultisampleEXT(36161,c,u,n.width,n.height):t.renderbufferStorage(36161,u,n.width,n.height)}}t.bindRenderbuffer(36161,null)}function O(e){const i=r.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),A(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture,a=z(i);if(i.depthTexture.format===Wt)B(i)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,a):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(i.depthTexture.format!==Vt)throw new Error("Unknown depthTexture format");B(i)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,a):t.framebufferTexture2D(36160,33306,3553,s,0)}}(i.__webglFramebuffer,e)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),P(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),P(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function z(t){return Math.min(h,t.samples)}function B(t){const n=r.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function U(t,n){const r=t.encoding,i=t.format,s=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===yn||r!==Fe&&(r===$e?!1===o?!0===e.has("EXT_sRGB")&&i===zt?(t.format=yn,t.minFilter=wt,t.generateMipmaps=!1):n=Yn.sRGBToLinear(n):i===zt&&s===Mt||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),n}this.allocateTextureUnit=function(){const t=E;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=A,this.setTexture2DArray=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?F(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?F(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=function(e,i){const a=r.get(e);e.version>0&&a.__version!==e.version?function(e,r,i){if(6!==r.image.length)return;const a=L(e,r),l=r.source;if(n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),l.version!==l.__currentVersion||!0===a){t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const e=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=e||i?i?r.image[t].image:r.image[t]:v(r.image[t],!1,!0,u),c[t]=U(r,c[t]);const h=c[0],d=b(h)||o,p=s.convert(r.format,r.encoding),f=s.convert(r.type),m=_(r.internalFormat,p,f,r.encoding),g=o&&!0!==r.isVideoTexture,x=void 0===l.__currentVersion||!0===a;let y,I=k(r,h,d);if(D(34067,r,d),e){g&&x&&n.texStorage2D(34067,I,m,h.width,h.height);for(let t=0;t<6;t++){y=c[t].mipmaps;for(let e=0;e<y.length;e++){const i=y[e];r.format!==zt?null!==p?g?n.compressedTexSubImage2D(34069+t,e,0,0,i.width,i.height,p,i.data):n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?n.texSubImage2D(34069+t,e,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e,m,i.width,i.height,0,p,f,i.data)}}}else{y=r.mipmaps,g&&x&&(y.length>0&&I++,n.texStorage2D(34067,I,m,c[0].width,c[0].height));for(let t=0;t<6;t++)if(i){g?n.texSubImage2D(34069+t,0,0,0,c[t].width,c[t].height,p,f,c[t].data):n.texImage2D(34069+t,0,m,c[t].width,c[t].height,0,p,f,c[t].data);for(let e=0;e<y.length;e++){const r=y[e].image[t].image;g?n.texSubImage2D(34069+t,e+1,0,0,r.width,r.height,p,f,r.data):n.texImage2D(34069+t,e+1,m,r.width,r.height,0,p,f,r.data)}}else{g?n.texSubImage2D(34069+t,0,0,0,p,f,c[t]):n.texImage2D(34069+t,0,m,p,f,c[t]);for(let e=0;e<y.length;e++){const r=y[e];g?n.texSubImage2D(34069+t,e+1,0,0,p,f,r.image[t]):n.texImage2D(34069+t,e+1,m,p,f,r.image[t])}}}w(r,d)&&S(34067),l.__currentVersion=l.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}(a,e,i):(n.activeTexture(33984+i),n.bindTexture(34067,a.__webglTexture))},this.rebindTextures=function(t,e,n){const i=r.get(t);void 0!==e&&$(i.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&O(t)},this.setupRenderTarget=function(e){const l=e.texture,u=r.get(e),c=r.get(l);e.addEventListener("dispose",T),!0!==e.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=t.createTexture()),c.__version=l.version,a.memory.textures++);const h=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=b(e)||o;if(h){u.__webglFramebuffer=[];for(let e=0;e<6;e++)u.__webglFramebuffer[e]=t.createFramebuffer()}else{if(u.__webglFramebuffer=t.createFramebuffer(),d)if(i.drawBuffers){const n=e.texture;for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&e.samples>0&&!1===B(e)){const r=d?l:[l];u.__webglMultisampledFramebuffer=t.createFramebuffer(),u.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer);for(let n=0;n<r.length;n++){const i=r[n];u.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(36161,u.__webglColorRenderbuffer[n]);const a=s.convert(i.format,i.encoding),o=s.convert(i.type),l=_(i.internalFormat,a,o,i.encoding),c=z(e);t.renderbufferStorageMultisample(36161,c,l,e.width,e.height),t.framebufferRenderbuffer(36160,36064+n,36161,u.__webglColorRenderbuffer[n])}t.bindRenderbuffer(36161,null),e.depthBuffer&&(u.__webglDepthRenderbuffer=t.createRenderbuffer(),P(u.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}}if(h){n.bindTexture(34067,c.__webglTexture),D(34067,l,p);for(let t=0;t<6;t++)$(u.__webglFramebuffer[t],e,l,36064,34069+t);w(l,p)&&S(34067),n.unbindTexture()}else if(d){const t=e.texture;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=r.get(s);n.bindTexture(3553,a.__webglTexture),D(3553,s,p),$(u.__webglFramebuffer,e,s,36064+i,3553),w(s,p)&&S(3553)}n.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(o?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(t,c.__webglTexture),D(t,l,p),$(u.__webglFramebuffer,e,l,36064,t),w(l,p)&&S(t),n.unbindTexture()}e.depthBuffer&&O(e)},this.updateRenderTargetMipmap=function(t){const e=b(t)||o,i=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,a=i.length;s<a;s++){const a=i[s];if(w(a,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,i=r.get(a).__webglTexture;n.bindTexture(e,i),S(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(o&&e.samples>0&&!1===B(e)){const i=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],s=e.width,a=e.height;let o=16384;const l=[],u=e.stencilBuffer?33306:36096,c=r.get(e),h=!0===e.isWebGLMultipleRenderTargets;if(h)for(let e=0;e<i.length;e++)n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,null),n.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,null,0);n.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,c.__webglFramebuffer);for(let n=0;n<i.length;n++){l.push(36064+n),e.depthBuffer&&l.push(u);const d=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===d&&(e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024)),h&&t.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[n]),!0===d&&(t.invalidateFramebuffer(36008,[u]),t.invalidateFramebuffer(36009,[u])),h){const e=r.get(i[n]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,9728),p&&t.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),h)for(let e=0;e<i.length;e++){n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,c.__webglColorRenderbuffer[e]);const s=r.get(i[e]).__webglTexture;n.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,s,0)}n.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=O,this.setupFrameBufferTexture=$,this.useMultisampledRTT=B}function tl(t,e,n){const r=n.isWebGL2;return{convert:function(n,i=null){let s;if(n===Mt)return 5121;if(n===Lt)return 32819;if(n===Ft)return 32820;if(n===Tt)return 5120;if(n===Ct)return 5122;if(n===Et)return 5123;if(n===At)return 5124;if(n===Nt)return 5125;if(n===Rt)return 5126;if(n===Dt)return r?5131:(s=e.get("OES_texture_half_float"),null!==s?s.HALF_FLOAT_OES:null);if(n===Pt)return 6406;if(n===zt)return 6408;if(n===Bt)return 6409;if(n===Ut)return 6410;if(n===Wt)return 6402;if(n===Vt)return 34041;if(n===Gt)return 6403;if(n===Ot)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===yn)return s=e.get("EXT_sRGB"),null!==s?s.SRGB_ALPHA_EXT:null;if(n===Ht)return 36244;if(n===jt)return 33319;if(n===qt)return 33320;if(n===Xt)return 36249;if(n===Kt||n===Yt||n===Zt||n===Jt)if(i===$e){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===Kt)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Yt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Zt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Jt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===Kt)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Yt)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Zt)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Jt)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===Qt||n===te||n===ee||n===ne){if(s=e.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(n===Qt)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===te)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ee)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ne)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===re)return s=e.get("WEBGL_compressed_texture_etc1"),null!==s?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===ie||n===se){if(s=e.get("WEBGL_compressed_texture_etc"),null===s)return null;if(n===ie)return i===$e?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===se)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(n===ae||n===oe||n===le||n===ue||n===ce||n===he||n===de||n===pe||n===fe||n===me||n===ge||n===xe||n===ye||n===ve){if(s=e.get("WEBGL_compressed_texture_astc"),null===s)return null;if(n===ae)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===oe)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===le)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===ue)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ce)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===he)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===de)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===pe)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===fe)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===me)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ge)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===xe)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===ye)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ve)return i===$e?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===be){if(s=e.get("EXT_texture_compression_bptc"),null===s)return null;if(n===be)return i===$e?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===$t?r?34042:(s=e.get("WEBGL_depth_texture"),null!==s?s.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[n]?t[n]:null}}}class el extends ys{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class nl extends hi{constructor(){super(),this.isGroup=!0,this.type="Group"}}const rl={type:"move"};class il{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new nl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new nl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ur,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ur),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new nl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ur,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ur),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const t=new nl;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[r.jointName]=t,l.add(t)}const i=l.joints[r.jointName];null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=t.radius),i.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],a=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(r=e.getPose(t.targetRaySpace,n),null===r&&null!==i&&(r=i),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(rl)))}return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),this}}class sl extends tr{constructor(t,e,n,r,i,s,a,o,l,u){if((u=void 0!==u?u:Wt)!==Wt&&u!==Vt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===Wt&&(n=Nt),void 0===n&&u===Vt&&(n=$t),super(null,r,i,s,a,o,u,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:gt,this.minFilter=void 0!==o?o:gt,this.flipY=!1,this.generateMipmaps=!1}}class al extends vn{constructor(t,e){super();const n=this;let r=null,i=1,s=null,a="local-floor",o=null,l=null,u=null,c=null,h=null,d=null;const p=e.getContextAttributes();let f=null,m=null;const g=[],x=[],y=new ys;y.layers.enable(1),y.viewport=new er;const v=new ys;v.layers.enable(2),v.viewport=new er;const b=[y,v],w=new el;w.layers.enable(1),w.layers.enable(2);let S=null,_=null;function k(t){const e=x.indexOf(t.inputSource);if(-1===e)return;const n=g[e];void 0!==n&&n.dispatchEvent({type:t.type,data:t.inputSource})}function I(){r.removeEventListener("select",k),r.removeEventListener("selectstart",k),r.removeEventListener("selectend",k),r.removeEventListener("squeeze",k),r.removeEventListener("squeezestart",k),r.removeEventListener("squeezeend",k),r.removeEventListener("end",I),r.removeEventListener("inputsourceschange",M);for(let t=0;t<g.length;t++){const e=x[t];null!==e&&(x[t]=null,g[t].disconnect(e))}S=null,_=null,t.setRenderTarget(f),h=null,c=null,u=null,r=null,m=null,N.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function M(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],r=x.indexOf(n);r>=0&&(x[r]=null,g[r].dispatchEvent({type:"disconnected",data:n}))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let r=x.indexOf(n);if(-1===r){for(let t=0;t<g.length;t++){if(t>=x.length){x.push(n),r=t;break}if(null===x[t]){x[t]=n,r=t;break}}if(-1===r)break}const i=g[r];i&&i.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=g[t];return void 0===e&&(e=new il,g[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=g[t];return void 0===e&&(e=new il,g[t]=e),e.getGripSpace()},this.getHand=function(t){let e=g[t];return void 0===e&&(e=new il,g[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||s},this.setReferenceSpace=function(t){o=t},this.getBaseLayer=function(){return null!==c?c:h},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(l){if(r=l,null!==r){if(f=t.getRenderTarget(),r.addEventListener("select",k),r.addEventListener("selectstart",k),r.addEventListener("selectend",k),r.addEventListener("squeeze",k),r.addEventListener("squeezestart",k),r.addEventListener("squeezeend",k),r.addEventListener("end",I),r.addEventListener("inputsourceschange",M),!0!==p.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:i};h=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:h}),m=new nr(h.framebufferWidth,h.framebufferHeight,{format:zt,type:Mt,encoding:t.outputEncoding})}else{let n=null,s=null,a=null;p.depth&&(a=p.stencil?35056:33190,n=p.stencil?Vt:Wt,s=p.stencil?$t:Nt);const o={colorFormat:32856,depthFormat:a,scaleFactor:i};u=new XRWebGLBinding(r,e),c=u.createProjectionLayer(o),r.updateRenderState({layers:[c]}),m=new nr(c.textureWidth,c.textureHeight,{format:zt,type:Mt,depthTexture:new sl(c.textureWidth,c.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0}),t.properties.get(m).__ignoreDepthValues=c.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=null,s=await r.requestReferenceSpace(a),N.setContext(r),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const T=new ur,C=new ur;function E(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;w.near=v.near=y.near=t.near,w.far=v.far=y.far=t.far,S===w.near&&_===w.far||(r.updateRenderState({depthNear:w.near,depthFar:w.far}),S=w.near,_=w.far);const e=t.parent,n=w.cameras;E(w,e);for(let t=0;t<n.length;t++)E(n[t],e);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),t.position.copy(w.position),t.quaternion.copy(w.quaternion),t.scale.copy(w.scale),t.matrix.copy(w.matrix),t.matrixWorld.copy(w.matrixWorld);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);2===n.length?function(t,e,n){T.setFromMatrixPosition(e.matrixWorld),C.setFromMatrixPosition(n.matrixWorld);const r=T.distanceTo(C),i=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+f,x=o+f,y=d-m,v=p+(r-m),b=l*o/x*g,w=u*o/x*g;t.projectionMatrix.makePerspective(y,v,b,w,g,x)}(w,y,v):w.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==h?h.fixedFoveation:void 0},this.setFoveation=function(t){null!==c&&(c.fixedFoveation=t),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=t)};let A=null;const N=new As;N.setAnimationLoop((function(e,n){if(l=n.getViewerPose(o||s),d=n,null!==l){const e=l.views;null!==h&&(t.setRenderTargetFramebuffer(m,h.framebuffer),t.setRenderTarget(m));let n=!1;e.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let s=null;if(null!==h)s=h.getViewport(i);else{const e=u.getViewSubImage(c,i);s=e.viewport,0===r&&(t.setRenderTargetTextures(m,e.colorTexture,c.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(m))}let a=b[r];void 0===a&&(a=new ys,a.layers.enable(r),a.viewport=new er,b[r]=a),a.matrix.fromArray(i.transform.matrix),a.projectionMatrix.fromArray(i.projectionMatrix),a.viewport.set(s.x,s.y,s.width,s.height),0===r&&w.matrix.copy(a.matrix),!0===n&&w.cameras.push(a)}}for(let t=0;t<g.length;t++){const e=x[t],r=g[t];null!==e&&void 0!==r&&r.update(e,n,o||s)}A&&A(e,n),d=null})),this.setAnimationLoop=function(t){A=t},this.dispose=function(){}}}function ol(t,e){function n(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map),r.alphaMap&&(n.alphaMap.value=r.alphaMap),r.bumpMap&&(n.bumpMap.value=r.bumpMap,n.bumpScale.value=r.bumpScale,r.side===y&&(n.bumpScale.value*=-1)),r.displacementMap&&(n.displacementMap.value=r.displacementMap,n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap),r.normalMap&&(n.normalMap.value=r.normalMap,n.normalScale.value.copy(r.normalScale),r.side===y&&n.normalScale.value.negate()),r.specularMap&&(n.specularMap.value=r.specularMap),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);const i=e.get(r).envMap;if(i&&(n.envMap.value=i,n.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*e}let s,a;r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity),r.map?s=r.map:r.specularMap?s=r.specularMap:r.displacementMap?s=r.displacementMap:r.normalMap?s=r.normalMap:r.bumpMap?s=r.bumpMap:r.roughnessMap?s=r.roughnessMap:r.metalnessMap?s=r.metalnessMap:r.alphaMap?s=r.alphaMap:r.emissiveMap?s=r.emissiveMap:r.clearcoatMap?s=r.clearcoatMap:r.clearcoatNormalMap?s=r.clearcoatNormalMap:r.clearcoatRoughnessMap?s=r.clearcoatRoughnessMap:r.iridescenceMap?s=r.iridescenceMap:r.iridescenceThicknessMap?s=r.iridescenceThicknessMap:r.specularIntensityMap?s=r.specularIntensityMap:r.specularColorMap?s=r.specularColorMap:r.transmissionMap?s=r.transmissionMap:r.thicknessMap?s=r.thicknessMap:r.sheenColorMap?s=r.sheenColorMap:r.sheenRoughnessMap&&(s=r.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uvTransform.value.copy(s.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,i,s,a){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(t,r):r.isMeshToonMaterial?(n(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(n(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(n(t,r),function(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,n){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===y&&t.clearcoatNormalScale.value.negate())),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap)),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,r,a)):r.isMeshMatcapMaterial?(n(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?n(t,r):r.isMeshDistanceMaterial?(n(t,r),function(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?n(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,r,i,s):r.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function ll(t,e,n,r){let i={},s={},a=[];const o=n.isWebGL2?t.getParameter(35375):0;function l(t,e,n){const r=t.value;if(void 0===n[e])return n[e]="number"==typeof r?r:r.clone(),!0;if("number"==typeof r){if(n[e]!==r)return n[e]=r,!0}else{const t=n[e];if(!1===t.equals(r))return t.copy(r),!0}return!1}function u(t){const e=t.value,n={boundary:0,storage:0};return"number"==typeof e?(n.boundary=4,n.storage=4):e.isVector2?(n.boundary=8,n.storage=8):e.isVector3||e.isColor?(n.boundary=16,n.storage=12):e.isVector4?(n.boundary=16,n.storage=16):e.isMatrix3?(n.boundary=48,n.storage=48):e.isMatrix4?(n.boundary=64,n.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),n}function c(e){const n=e.target;n.removeEventListener("dispose",c);const r=a.indexOf(n.__bindingPointIndex);a.splice(r,1),t.deleteBuffer(i[n.id]),delete i[n.id],delete s[n.id]}return{bind:function(t,e){const n=e.program;r.uniformBlockBinding(t,n)},update:function(n,h){let d=i[n.id];void 0===d&&(function(t){const e=t.uniforms;let n=0;let r=0;for(let t=0,i=e.length;t<i;t++){const i=e[t],s=u(i);if(i.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),i.__offset=n,t>0){r=n%16;const t=16-r;0!==r&&t-s.boundary<0&&(n+=16-r,i.__offset=n)}n+=s.storage}r=n%16,r>0&&(n+=16-r),t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const r=t.createBuffer(),i=e.__size,s=e.usage;return t.bindBuffer(35345,r),t.bufferData(35345,i,s),t.bindBuffer(35345,null),t.bindBufferBase(35345,n,r),r}(n),i[n.id]=d,n.addEventListener("dispose",c));const p=h.program;r.updateUBOMapping(n,p);const f=e.render.frame;s[n.id]!==f&&(function(e){const n=i[e.id],r=e.uniforms,s=e.__cache;t.bindBuffer(35345,n);for(let e=0,n=r.length;e<n;e++){const n=r[e];if(!0===l(n,e,s)){const e=n.value,r=n.__offset;"number"==typeof e?(n.__data[0]=e,t.bufferSubData(35345,r,n.__data)):(n.value.isMatrix3?(n.__data[0]=n.value.elements[0],n.__data[1]=n.value.elements[1],n.__data[2]=n.value.elements[2],n.__data[3]=n.value.elements[0],n.__data[4]=n.value.elements[3],n.__data[5]=n.value.elements[4],n.__data[6]=n.value.elements[5],n.__data[7]=n.value.elements[0],n.__data[8]=n.value.elements[6],n.__data[9]=n.value.elements[7],n.__data[10]=n.value.elements[8],n.__data[11]=n.value.elements[0]):e.toArray(n.__data),t.bufferSubData(35345,r,n.__data))}}t.bindBuffer(35345,null)}(n),s[n.id]=f)},dispose:function(){for(const e in i)t.deleteBuffer(i[e]);a=[],i={},s={}}}}function ul(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:function(){const t=Pn("canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0===t.depth||t.depth,i=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,u=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let h;h=null!==n?n.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let d=null,p=null;const f=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Fe,this.physicallyCorrectLights=!1,this.toneMapping=et,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let b=!1,w=0,S=0,_=null,k=-1,I=null;const M=new er,T=new er;let C=null,E=e.width,A=e.height,N=1,R=null,D=null;const L=new er(0,0,E,A),F=new er(0,0,E,A);let $=!1;const P=new Es;let O=!1,z=!1,B=null;const U=new Br,W=new Rn,V=new ur,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===_?N:1}let j,q,X,K,Y,Z,J,Q,tt,nt,rt,it,st,at,ot,lt,ut,ct,ht,dt,pt,ft,mt,gt,xt=n;function yt(t,n){for(let r=0;r<t.length;r++){const i=t[r],s=e.getContext(i,n);if(null!==s)return s}return null}try{const t={alpha:!0,depth:r,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${a}`),e.addEventListener("webglcontextlost",wt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",_t,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===g.isWebGL1Renderer&&e.shift(),xt=yt(e,t),null===xt)throw yt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function vt(){j=new na(xt),q=new zs(xt,j,t),j.init(q),ft=new tl(xt,j,q),X=new Jo(xt,j,q),K=new sa,Y=new Oo,Z=new Qo(xt,j,X,Y,q,ft,K),J=new Us(g),Q=new ea(g),tt=new Ns(xt,q),mt=new Ps(xt,j,tt,q),nt=new ra(xt,tt,K,mt),rt=new ca(xt,nt,tt,K),ht=new ua(xt,q,Z),lt=new Bs(Y),it=new Po(g,J,Q,j,q,mt,lt),st=new ol(g,Y),at=new Wo,ot=new Xo(j,q),ct=new $s(g,J,X,rt,h,o),ut=new Zo(g,rt,q),gt=new ll(xt,K,q,X),dt=new Os(xt,j,K,q),pt=new ia(xt,j,K,q),K.programs=it.programs,g.capabilities=q,g.extensions=j,g.properties=Y,g.renderLists=at,g.shadowMap=ut,g.state=X,g.info=K}vt();const bt=new al(g,xt);function wt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const t=K.autoReset,e=ut.enabled,n=ut.autoUpdate,r=ut.needsUpdate,i=ut.type;vt(),K.autoReset=t,ut.enabled=e,ut.autoUpdate=n,ut.needsUpdate=r,ut.type=i}function _t(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function It(t){const e=t.target;e.removeEventListener("dispose",It),function(t){(function(t){const e=Y.get(t).programs;void 0!==e&&(e.forEach((function(t){it.releaseProgram(t)})),t.isShaderMaterial&&it.releaseShaderCache(t))})(t),Y.remove(t)}(e)}this.xr=bt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=j.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=j.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(t){void 0!==t&&(N=t,this.setSize(E,A,!1))},this.getSize=function(t){return t.set(E,A)},this.setSize=function(t,n,r){bt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=t,A=n,e.width=Math.floor(t*N),e.height=Math.floor(n*N),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(E*N,A*N).floor()},this.setDrawingBufferSize=function(t,n,r){E=t,A=n,N=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(M)},this.getViewport=function(t){return t.copy(L)},this.setViewport=function(t,e,n,r){t.isVector4?L.set(t.x,t.y,t.z,t.w):L.set(t,e,n,r),X.viewport(M.copy(L).multiplyScalar(N).floor())},this.getScissor=function(t){return t.copy(F)},this.setScissor=function(t,e,n,r){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,n,r),X.scissor(T.copy(F).multiplyScalar(N).floor())},this.getScissorTest=function(){return $},this.setScissorTest=function(t){X.setScissorTest($=t)},this.setOpaqueSort=function(t){R=t},this.setTransparentSort=function(t){D=t},this.getClearColor=function(t){return t.copy(ct.getClearColor())},this.setClearColor=function(){ct.setClearColor.apply(ct,arguments)},this.getClearAlpha=function(){return ct.getClearAlpha()},this.setClearAlpha=function(){ct.setClearAlpha.apply(ct,arguments)},this.clear=function(t=!0,e=!0,n=!0){let r=0;t&&(r|=16384),e&&(r|=256),n&&(r|=1024),xt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",wt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",_t,!1),at.dispose(),ot.dispose(),Y.dispose(),J.dispose(),Q.dispose(),rt.dispose(),mt.dispose(),gt.dispose(),it.dispose(),bt.dispose(),bt.removeEventListener("sessionstart",Ct),bt.removeEventListener("sessionend",Et),B&&(B.dispose(),B=null),At.stop()},this.renderBufferDirect=function(t,e,n,r,i,s){null===e&&(e=G);const a=i.isMesh&&i.matrixWorld.determinant()<0,o=function(t,e,n,r,i){!0!==e.isScene&&(e=G),Z.resetTextureUnits();const s=e.fog,a=r.isMeshStandardMaterial?e.environment:null,o=null===_?g.outputEncoding:!0===_.isXRRenderTarget?_.texture.encoding:Fe,l=(r.isMeshStandardMaterial?Q:J).get(r.envMap||a),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!r.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,f=!!n.morphAttributes.color,m=r.toneMapped?g.toneMapping:et,x=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,y=void 0!==x?x.length:0,v=Y.get(r),b=p.state.lights;if(!0===O&&(!0===z||t!==I)){const e=t===I&&r.id===k;lt.setState(r,t,e)}let w=!1;r.version===v.__version?v.needsLights&&v.lightsStateVersion!==b.state.version||v.outputEncoding!==o||i.isInstancedMesh&&!1===v.instancing?w=!0:i.isInstancedMesh||!0!==v.instancing?i.isSkinnedMesh&&!1===v.skinning?w=!0:i.isSkinnedMesh||!0!==v.skinning?v.envMap!==l||!0===r.fog&&v.fog!==s?w=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===lt.numPlanes&&v.numIntersection===lt.numIntersection?(v.vertexAlphas!==u||v.vertexTangents!==c||v.morphTargets!==h||v.morphNormals!==d||v.morphColors!==f||v.toneMapping!==m||!0===q.isWebGL2&&v.morphTargetsCount!==y)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,v.__version=r.version);let S=v.currentProgram;!0===w&&(S=Pt(r,e,i));let M=!1,T=!1,C=!1;const E=S.getUniforms(),R=v.uniforms;if(X.useProgram(S.program)&&(M=!0,T=!0,C=!0),r.id!==k&&(k=r.id,T=!0),M||I!==t){if(E.setValue(xt,"projectionMatrix",t.projectionMatrix),q.logarithmicDepthBuffer&&E.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),I!==t&&(I=t,T=!0,C=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=E.map.cameraPosition;void 0!==e&&e.setValue(xt,V.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&E.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&E.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(i.isSkinnedMesh){E.setOptional(xt,i,"bindMatrix"),E.setOptional(xt,i,"bindMatrixInverse");const t=i.skeleton;t&&(q.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),E.setValue(xt,"boneTexture",t.boneTexture,Z),E.setValue(xt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const D=n.morphAttributes;var L,F;if((void 0!==D.position||void 0!==D.normal||void 0!==D.color&&!0===q.isWebGL2)&&ht.update(i,n,r,S),(T||v.receiveShadow!==i.receiveShadow)&&(v.receiveShadow=i.receiveShadow,E.setValue(xt,"receiveShadow",i.receiveShadow)),T&&(E.setValue(xt,"toneMappingExposure",g.toneMappingExposure),v.needsLights&&(F=C,(L=R).ambientLightColor.needsUpdate=F,L.lightProbe.needsUpdate=F,L.directionalLights.needsUpdate=F,L.directionalLightShadows.needsUpdate=F,L.pointLights.needsUpdate=F,L.pointLightShadows.needsUpdate=F,L.spotLights.needsUpdate=F,L.spotLightShadows.needsUpdate=F,L.rectAreaLights.needsUpdate=F,L.hemisphereLights.needsUpdate=F),s&&!0===r.fog&&st.refreshFogUniforms(R,s),st.refreshMaterialUniforms(R,r,N,A,B),mo.upload(xt,v.uniformsList,R,Z)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(mo.upload(xt,v.uniformsList,R,Z),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&E.setValue(xt,"center",i.center),E.setValue(xt,"modelViewMatrix",i.modelViewMatrix),E.setValue(xt,"normalMatrix",i.normalMatrix),E.setValue(xt,"modelMatrix",i.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const t=r.uniformsGroups;for(let e=0,n=t.length;e<n;e++)if(q.isWebGL2){const n=t[e];gt.update(n,S),gt.bind(n,S)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return S}(t,e,n,r,i);X.setMaterial(r,a);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=nt.getWireframeAttribute(n),h=2),mt.setup(i,r,o,n,l);let d=dt;null!==l&&(c=tt.get(l),d=pt,d.setIndex(c));const f=null!==l?l.count:u.count,m=n.drawRange.start*h,x=n.drawRange.count*h,y=null!==s?s.start*h:0,v=null!==s?s.count*h:1/0,b=Math.max(m,y),w=Math.min(f,m+x,y+v)-1,S=Math.max(0,w-b+1);if(0!==S){if(i.isMesh)!0===r.wireframe?(X.setLineWidth(r.wireframeLinewidth*H()),d.setMode(1)):d.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),X.setLineWidth(t*H()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(b,S,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(b,S,t)}else d.render(b,S)}},this.compile=function(t,e){p=ot.get(t),p.init(),m.push(p),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(g.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++)Pt(n[r],t,e);else Pt(n,t,e)})),m.pop(),p=null};let Tt=null;function Ct(){At.stop()}function Et(){At.start()}const At=new As;function Nt(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||P.intersectsSprite(t)){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(U);const e=rt.update(t),i=t.material;i.visible&&d.push(t,e,i,n,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==K.render.frame&&(t.skeleton.update(),t.skeleton.frame=K.render.frame),!t.frustumCulled||P.intersectsObject(t))){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(U);const e=rt.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i[a.materialIndex];o&&o.visible&&d.push(t,e,o,n,V.z,a)}}else i.visible&&d.push(t,e,i,n,V.z,null)}const i=t.children;for(let t=0,s=i.length;t<s;t++)Nt(i[t],e,n,r)}function Lt(t,e,n,r){const i=t.opaque,a=t.transmissive,o=t.transparent;p.setupLightsView(n),a.length>0&&function(t,e,n){const r=q.isWebGL2;null===B&&(B=new nr(1,1,{generateMipmaps:!0,type:j.has("EXT_color_buffer_half_float")?Dt:Mt,minFilter:kt,samples:r&&!0===s?4:0})),g.getDrawingBufferSize(W),r?B.setSize(W.x,W.y):B.setSize(An(W.x),An(W.y));const i=g.getRenderTarget();g.setRenderTarget(B),g.clear();const a=g.toneMapping;g.toneMapping=et,Ft(t,e,n),g.toneMapping=a,Z.updateMultisampleRenderTarget(B),Z.updateRenderTargetMipmap(B),g.setRenderTarget(i)}(i,e,n),r&&X.viewport(M.copy(r)),i.length>0&&Ft(i,e,n),a.length>0&&Ft(a,e,n),o.length>0&&Ft(o,e,n),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1)}function Ft(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,s=t.length;i<s;i++){const s=t[i],a=s.object,o=s.geometry,l=null===r?s.material:r,u=s.group;a.layers.test(n.layers)&&$t(a,e,n,o,l,u)}}function $t(t,e,n,r,i,s){t.onBeforeRender(g,e,n,r,i,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),i.onBeforeRender(g,e,n,r,t,s),!0===i.transparent&&i.side===v?(i.side=y,i.needsUpdate=!0,g.renderBufferDirect(n,e,r,i,t,s),i.side=x,i.needsUpdate=!0,g.renderBufferDirect(n,e,r,i,t,s),i.side=v):g.renderBufferDirect(n,e,r,i,t,s),t.onAfterRender(g,e,n,r,i,s)}function Pt(t,e,n){!0!==e.isScene&&(e=G);const r=Y.get(t),i=p.state.lights,s=p.state.shadowsArray,a=i.state.version,o=it.getParameters(t,i.state,s,e,n),l=it.getProgramCacheKey(o);let u=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?Q:J).get(t.envMap||r.environment),void 0===u&&(t.addEventListener("dispose",It),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return Ot(t,o),c}else o.uniforms=it.getUniforms(t),t.onBuild(n,o,g),t.onBeforeCompile(o,g),c=it.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=lt.uniform),Ot(t,o),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=c.getUniforms(),f=mo.seqWithValue(d.seq,h);return r.currentProgram=c,r.uniformsList=f,c}function Ot(t,e){const n=Y.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}At.setAnimationLoop((function(t){Tt&&Tt(t)})),"undefined"!=typeof self&&At.setContext(self),this.setAnimationLoop=function(t){Tt=t,bt.setAnimationLoop(t),null===t?At.stop():At.start()},bt.addEventListener("sessionstart",Ct),bt.addEventListener("sessionend",Et),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===bt.enabled&&!0===bt.isPresenting&&(!0===bt.cameraAutoUpdate&&bt.updateCamera(e),e=bt.getCamera()),!0===t.isScene&&t.onBeforeRender(g,t,e,_),p=ot.get(t,m.length),p.init(),m.push(p),U.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),P.setFromProjectionMatrix(U),z=this.localClippingEnabled,O=lt.init(this.clippingPlanes,z,e),d=at.get(t,f.length),d.init(),f.push(d),Nt(t,e,0,g.sortObjects),d.finish(),!0===g.sortObjects&&d.sort(R,D),!0===O&&lt.beginShadows();const n=p.state.shadowsArray;if(ut.render(n,t,e),!0===O&&lt.endShadows(),!0===this.info.autoReset&&this.info.reset(),ct.render(d,t),p.setupLights(g.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,r=n.length;e<r;e++){const r=n[e];Lt(d,t,r,r.viewport)}}else Lt(d,t,e);null!==_&&(Z.updateMultisampleRenderTarget(_),Z.updateRenderTargetMipmap(_)),!0===t.isScene&&t.onAfterRender(g,t,e),mt.resetDefaultState(),k=-1,I=null,m.pop(),p=m.length>0?m[m.length-1]:null,f.pop(),d=f.length>0?f[f.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(t,e,n){Y.get(t.texture).__webglTexture=e,Y.get(t.depthTexture).__webglTexture=n;const r=Y.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===j.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const n=Y.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){_=t,w=e,S=n;let r=!0;if(t){const e=Y.get(t);void 0!==e.__useDefaultFramebuffer?(X.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?Z.setupRenderTarget(t):e.__hasExternalTextures&&Z.rebindTextures(t,Y.get(t.texture).__webglTexture,Y.get(t.depthTexture).__webglTexture)}let i=null,s=!1,a=!1;if(t){const n=t.texture;(n.isData3DTexture||n.isDataArrayTexture)&&(a=!0);const r=Y.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=r[e],s=!0):i=q.isWebGL2&&t.samples>0&&!1===Z.useMultisampledRTT(t)?Y.get(t).__webglMultisampledFramebuffer:r,M.copy(t.viewport),T.copy(t.scissor),C=t.scissorTest}else M.copy(L).multiplyScalar(N).floor(),T.copy(F).multiplyScalar(N).floor(),C=$;if(X.bindFramebuffer(36160,i)&&q.drawBuffers&&r&&X.drawBuffers(t,i),X.viewport(M),X.scissor(T),X.setScissorTest(C),s){const r=Y.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(a){const r=Y.get(t.texture),i=e||0;xt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}k=-1},this.readRenderTargetPixels=function(t,e,n,r,i,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=Y.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){X.bindFramebuffer(36160,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==zt&&ft.convert(o)!==xt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===Dt&&(j.has("EXT_color_buffer_half_float")||q.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(l===Mt||ft.convert(l)===xt.getParameter(35738)||l===Rt&&(q.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&xt.readPixels(e,n,r,i,ft.convert(o),ft.convert(l),s)}finally{const t=null!==_?Y.get(_).__webglFramebuffer:null;X.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),s=Math.floor(e.image.height*r);Z.setTexture2D(e,0),xt.copyTexSubImage2D(3553,n,0,0,t.x,t.y,i,s),X.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,s=e.image.height,a=ft.convert(n.format),o=ft.convert(n.type);Z.setTexture2D(n,0),xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,r,t.x,t.y,i,s,a,o,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):xt.texSubImage2D(3553,r,t.x,t.y,a,o,e.image),0===r&&n.generateMipmaps&&xt.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(g.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=ft.convert(r.format),u=ft.convert(r.type);let c;if(r.isData3DTexture)Z.setTexture3D(r,0),c=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Z.setTexture2DArray(r,0),c=35866}xt.pixelStorei(37440,r.flipY),xt.pixelStorei(37441,r.premultiplyAlpha),xt.pixelStorei(3317,r.unpackAlignment);const h=xt.getParameter(3314),d=xt.getParameter(32878),p=xt.getParameter(3316),f=xt.getParameter(3315),m=xt.getParameter(32877),x=n.isCompressedTexture?n.mipmaps[0]:n.image;xt.pixelStorei(3314,x.width),xt.pixelStorei(32878,x.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isData3DTexture?xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,x.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,x.data)):xt.texSubImage3D(c,i,e.x,e.y,e.z,s,a,o,l,u,x),xt.pixelStorei(3314,h),xt.pixelStorei(32878,d),xt.pixelStorei(3316,p),xt.pixelStorei(3315,f),xt.pixelStorei(32877,m),0===i&&r.generateMipmaps&&xt.generateMipmap(c),X.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?Z.setTextureCube(t,0):t.isData3DTexture?Z.setTexture3D(t,0):t.isDataArrayTexture?Z.setTexture2DArray(t,0):Z.setTexture2D(t,0),X.unbindTexture()},this.resetState=function(){w=0,S=0,_=null,X.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class cl extends ul{}cl.prototype.isWebGL1Renderer=!0;class hl{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Xn(t),this.density=e}clone(){return new hl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class dl{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Xn(t),this.near=e,this.far=n}clone(){return new dl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class pl extends hi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}class fl{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=on,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=kn()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=kn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=kn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ml=new ur;class gl{constructor(t,e,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ml.fromBufferAttribute(this,e),ml.applyMatrix4(t),this.setXYZ(e,ml.x,ml.y,ml.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ml.fromBufferAttribute(this,e),ml.applyNormalMatrix(t),this.setXYZ(e,ml.x,ml.y,ml.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ml.fromBufferAttribute(this,e),ml.transformDirection(t),this.setXYZ(e,ml.x,ml.y,ml.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ci(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new gl(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class xl extends ki{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Xn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let yl;const vl=new ur,bl=new ur,wl=new ur,Sl=new Rn,_l=new Rn,kl=new Br,Il=new ur,Ml=new ur,Tl=new ur,Cl=new Rn,El=new Rn,Al=new Rn;class Nl extends hi{constructor(t){if(super(),this.isSprite=!0,this.type="Sprite",void 0===yl){yl=new ji;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new fl(t,5);yl.setIndex([0,1,2,0,2,3]),yl.setAttribute("position",new gl(e,3,0,!1)),yl.setAttribute("uv",new gl(e,2,3,!1))}this.geometry=yl,this.material=void 0!==t?t:new xl,this.center=new Rn(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),bl.setFromMatrixScale(this.matrixWorld),kl.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),wl.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&bl.multiplyScalar(-wl.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const s=this.center;Rl(Il.set(-.5,-.5,0),wl,s,bl,r,i),Rl(Ml.set(.5,-.5,0),wl,s,bl,r,i),Rl(Tl.set(.5,.5,0),wl,s,bl,r,i),Cl.set(0,0),El.set(1,0),Al.set(1,1);let a=t.ray.intersectTriangle(Il,Ml,Tl,!1,vl);if(null===a&&(Rl(Ml.set(-.5,.5,0),wl,s,bl,r,i),El.set(0,1),a=t.ray.intersectTriangle(Il,Tl,Ml,!1,vl),null===a))return;const o=t.ray.origin.distanceTo(vl);o<t.near||o>t.far||e.push({distance:o,point:vl.clone(),uv:Si.getUV(vl,Il,Ml,Tl,Cl,El,Al,new Rn),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Rl(t,e,n,r,i,s){Sl.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(_l.x=s*Sl.x-i*Sl.y,_l.y=i*Sl.x+s*Sl.y):_l.copy(Sl),t.copy(e),t.x+=_l.x,t.y+=_l.y,t.applyMatrix4(kl)}const Dl=new ur,Ll=new ur;class Fl extends hi{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Dl.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Dl);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Dl.setFromMatrixPosition(t.matrixWorld),Ll.setFromMatrixPosition(this.matrixWorld);const n=Dl.distanceTo(Ll)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,r=n.length;t<r;t++){const r=n[t];e.object.levels.push({object:r.object.uuid,distance:r.distance})}return e}}const $l=new ur,Pl=new er,Ol=new er,zl=new ur,Bl=new Br;class Ul extends cs{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Br,this.bindMatrixInverse=new Br}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new er,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Pl.fromBufferAttribute(r.attributes.skinIndex,t),Ol.fromBufferAttribute(r.attributes.skinWeight,t),$l.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const r=Ol.getComponent(t);if(0!==r){const i=Pl.getComponent(t);Bl.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(zl.copy($l).applyMatrix4(Bl),r)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Wl extends hi{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Vl extends tr{constructor(t=null,e=1,n=1,r,i,s,a,o,l=gt,u=gt,c,h){super(null,s,a,o,l,u,r,i,c,h),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Gl=new Br,Hl=new Br;class jl{constructor(t=[],e=[]){this.uuid=kn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Br)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Br;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=t.length;r<i;r++){const i=t[r]?t[r].matrixWorld:Hl;Gl.multiplyMatrices(i,e[r]),Gl.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new jl(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=En(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Vl(e,t,t,zt,Rt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new Wl),this.bones.push(i),this.boneInverses.push((new Br).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const s=n[r];t.boneInverses.push(s.toArray())}return t}}class ql extends Ci{constructor(t,e,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Xl=new Br,Kl=new Br,Yl=[],Zl=new cs;class Jl extends cs{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new ql(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(Zl.geometry=this.geometry,Zl.material=this.material,void 0!==Zl.material)for(let i=0;i<r;i++){this.getMatrixAt(i,Xl),Kl.multiplyMatrices(n,Xl),Zl.matrixWorld=Kl,Zl.raycast(t,Yl);for(let t=0,n=Yl.length;t<n;t++){const n=Yl[t];n.instanceId=i,n.object=this,e.push(n)}Yl.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new ql(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Ql extends ki{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Xn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const tu=new ur,eu=new ur,nu=new Br,ru=new zr,iu=new Nr;class su extends hi{constructor(t=new ji,e=new Ql){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)tu.fromBufferAttribute(e,t-1),eu.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=tu.distanceTo(eu);t.setAttribute("lineDistance",new Pi(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),iu.copy(n.boundingSphere),iu.applyMatrix4(r),iu.radius+=i,!1===t.ray.intersectsSphere(iu))return;nu.copy(r).invert(),ru.copy(t.ray).applyMatrix4(nu);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new ur,u=new ur,c=new ur,h=new ur,d=this.isLineSegments?2:1,p=n.index,f=n.attributes.position;if(null!==p)for(let n=Math.max(0,s.start),r=Math.min(p.count,s.start+s.count)-1;n<r;n+=d){const r=p.getX(n),i=p.getX(n+1);if(l.fromBufferAttribute(f,r),u.fromBufferAttribute(f,i),ru.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const s=t.ray.origin.distanceTo(h);s<t.near||s>t.far||e.push({distance:s,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,s.start),r=Math.min(f.count,s.start+s.count)-1;n<r;n+=d){if(l.fromBufferAttribute(f,n),u.fromBufferAttribute(f,n+1),ru.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}const au=new ur,ou=new ur;class lu extends su{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)au.fromBufferAttribute(e,t),ou.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+au.distanceTo(ou);t.setAttribute("lineDistance",new Pi(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class uu extends su{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class cu extends ki{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Xn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const hu=new Br,du=new zr,pu=new Nr,fu=new ur;class mu extends hi{constructor(t=new ji,e=new cu){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),pu.copy(n.boundingSphere),pu.applyMatrix4(r),pu.radius+=i,!1===t.ray.intersectsSphere(pu))return;hu.copy(r).invert(),du.copy(t.ray).applyMatrix4(hu);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,u=n.attributes.position;if(null!==l)for(let n=Math.max(0,s.start),i=Math.min(l.count,s.start+s.count);n<i;n++){const i=l.getX(n);fu.fromBufferAttribute(u,i),gu(fu,i,o,r,t,e,this)}else for(let n=Math.max(0,s.start),i=Math.min(u.count,s.start+s.count);n<i;n++)fu.fromBufferAttribute(u,n),gu(fu,n,o,r,t,e,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function gu(t,e,n,r,i,s,a){const o=du.distanceSqToPoint(t);if(o<n){const n=new ur;du.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:a})}}class xu extends tr{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==s?s:wt,this.magFilter=void 0!==i?i:wt,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){u.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class yu extends tr{constructor(t,e,n){super({width:t,height:e}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=gt,this.minFilter=gt,this.generateMipmaps=!1,this.needsUpdate=!0}}class vu extends tr{constructor(t,e,n,r,i,s,a,o,l,u,c,h){super(null,s,a,o,l,u,r,i,c,h),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class bu extends tr{constructor(t,e,n,r,i,s,a,o,l){super(t,e,n,r,i,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class wu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let s;s=e||t*n[i-1];let a,o=0,l=i-1;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),a=n[r]-s,a<0)o=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(r=l,n[r]===s)return r/(i-1);const u=n[r];return(r+(s-u)/(n[r+1]-u))/(i-1)}getTangent(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const s=this.getPoint(r),a=this.getPoint(i),o=e||(s.isVector2?new Rn:new ur);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new ur,r=[],i=[],s=[],a=new ur,o=new Br;for(let e=0;e<=t;e++){const n=e/t;r[e]=this.getTangentAt(n,new ur)}i[0]=new ur,s[0]=new ur;let l=Number.MAX_VALUE;const u=Math.abs(r[0].x),c=Math.abs(r[0].y),h=Math.abs(r[0].z);u<=l&&(l=u,n.set(1,0,0)),c<=l&&(l=c,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],a),s[0].crossVectors(r[0],i[0]);for(let e=1;e<=t;e++){if(i[e]=i[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(r[e-1],r[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(In(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(r[e],i[e])}if(!0===e){let e=Math.acos(In(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(a.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],e*n)),s[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Su extends wu{constructor(t=0,e=0,n=1,r=1,i=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new Rn,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const s=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=s?0:r),!0!==this.aClockwise||s||(i===r?i=-r:i-=r);const a=this.aStartAngle+t*i;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class _u extends Su{constructor(t,e,n,r,i,s){super(t,e,n,n,r,i,s),this.isArcCurve=!0,this.type="ArcCurve"}}function ku(){let t=0,e=0,n=0,r=0;function i(i,s,a,o){t=i,e=a,n=-3*i+3*s-2*a-o,r=2*i-2*s+a+o}return{initCatmullRom:function(t,e,n,r,s){i(e,n,s*(n-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,u=(n-e)/a-(r-e)/(a+o)+(r-n)/o;l*=a,u*=a,i(e,n,l,u)},calc:function(i){const s=i*i;return t+e*i+n*s+r*(s*i)}}}const Iu=new ur,Mu=new ku,Tu=new ku,Cu=new ku;class Eu extends wu{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new ur){const n=e,r=this.points,i=r.length,s=(i-(this.closed?0:1))*t;let a,o,l=Math.floor(s),u=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===u&&l===i-1&&(l=i-2,u=1),this.closed||l>0?a=r[(l-1)%i]:(Iu.subVectors(r[0],r[1]).add(r[0]),a=Iu);const c=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(Iu.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=Iu),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(c),t),n=Math.pow(c.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Mu.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,e,n,r),Tu.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,e,n,r),Cu.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,e,n,r)}else"catmullrom"===this.curveType&&(Mu.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Tu.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),Cu.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return n.set(Mu.calc(u),Tu.calc(u),Cu.calc(u)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ur).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Au(t,e,n,r,i){const s=.5*(r-e),a=.5*(i-n),o=t*t;return(2*n-2*r+s+a)*(t*o)+(-3*n+3*r-2*s-a)*o+s*t+n}function Nu(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function Ru(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}class Du extends wu{constructor(t=new Rn,e=new Rn,n=new Rn,r=new Rn){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new Rn){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Ru(t,r.x,i.x,s.x,a.x),Ru(t,r.y,i.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Lu extends wu{constructor(t=new ur,e=new ur,n=new ur,r=new ur){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ur){const n=e,r=this.v0,i=this.v1,s=this.v2,a=this.v3;return n.set(Ru(t,r.x,i.x,s.x,a.x),Ru(t,r.y,i.y,s.y,a.y),Ru(t,r.z,i.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Fu extends wu{constructor(t=new Rn,e=new Rn){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Rn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Rn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class $u extends wu{constructor(t=new ur,e=new ur){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new ur){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Pu extends wu{constructor(t=new Rn,e=new Rn,n=new Rn){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Rn){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Nu(t,r.x,i.x,s.x),Nu(t,r.y,i.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ou extends wu{constructor(t=new ur,e=new ur,n=new ur){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ur){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(Nu(t,r.x,i.x,s.x),Nu(t,r.y,i.y,s.y),Nu(t,r.z,i.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class zu extends wu{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Rn){const n=e,r=this.points,i=(r.length-1)*t,s=Math.floor(i),a=i-s,o=r[0===s?s:s-1],l=r[s],u=r[s>r.length-2?r.length-1:s+1],c=r[s>r.length-3?r.length-1:s+2];return n.set(Au(a,o.x,l.x,u.x,c.x),Au(a,o.y,l.y,u.y,c.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Rn).fromArray(n))}return this}}var Bu=Object.freeze({__proto__:null,ArcCurve:_u,CatmullRomCurve3:Eu,CubicBezierCurve:Du,CubicBezierCurve3:Lu,EllipseCurve:Su,LineCurve:Fu,LineCurve3:$u,QuadraticBezierCurve:Pu,QuadraticBezierCurve3:Ou,SplineCurve:zu});class Uu extends wu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Fu(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){const t=r[i]-n,s=this.curves[i],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const s=i[r],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const r=o[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Bu[n.type]).fromJSON(n))}return this}}class Wu extends Uu{constructor(t){super(),this.type="Path",this.currentPoint=new Rn,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Fu(this.currentPoint.clone(),new Rn(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new Pu(this.currentPoint.clone(),new Rn(t,e),new Rn(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,s){const a=new Du(this.currentPoint.clone(),new Rn(t,e),new Rn(n,r),new Rn(i,s));return this.curves.push(a),this.currentPoint.set(i,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new zu(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,r,i,s),this}absarc(t,e,n,r,i,s){return this.absellipse(t,e,n,n,r,i,s),this}ellipse(t,e,n,r,i,s,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+l,e+u,n,r,i,s,a,o),this}absellipse(t,e,n,r,i,s,a,o){const l=new Su(t,e,n,r,i,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Vu extends ji{constructor(t=[new Rn(0,-.5),new Rn(.5,0),new Rn(0,.5)],e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=In(r,0,2*Math.PI);const i=[],s=[],a=[],o=[],l=[],u=1/e,c=new ur,h=new Rn,d=new ur,p=new ur,f=new ur;let m=0,g=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:m=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:m=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let i=0;i<=e;i++){const d=n+i*u*r,p=Math.sin(d),f=Math.cos(d);for(let n=0;n<=t.length-1;n++){c.x=t[n].x*p,c.y=t[n].y,c.z=t[n].x*f,s.push(c.x,c.y,c.z),h.x=i/e,h.y=n/(t.length-1),a.push(h.x,h.y);const r=o[3*n+0]*p,u=o[3*n+1],d=o[3*n+0]*f;l.push(r,u,d)}}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const r=e+n*t.length,s=r,a=r+t.length,o=r+t.length+1,l=r+1;i.push(s,a,l),i.push(o,l,a)}this.setIndex(i),this.setAttribute("position",new Pi(s,3)),this.setAttribute("uv",new Pi(a,2)),this.setAttribute("normal",new Pi(l,3))}static fromJSON(t){return new Vu(t.points,t.segments,t.phiStart,t.phiLength)}}class Gu extends Vu{constructor(t=1,e=1,n=4,r=8){const i=new Wu;i.absarc(0,-e/2,t,1.5*Math.PI,0),i.absarc(0,e/2,t,0,.5*Math.PI),super(i.getPoints(n),r),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:r}}static fromJSON(t){return new Gu(t.radius,t.length,t.capSegments,t.radialSegments)}}class Hu extends ji{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],s=[],a=[],o=[],l=new ur,u=new Rn;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let i=0,c=3;i<=e;i++,c+=3){const h=n+i/e*r;l.x=t*Math.cos(h),l.y=t*Math.sin(h),s.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(s[c]/t+1)/2,u.y=(s[c+1]/t+1)/2,o.push(u.x,u.y)}for(let t=1;t<=e;t++)i.push(t,t+1,0);this.setIndex(i),this.setAttribute("position",new Pi(s,3)),this.setAttribute("normal",new Pi(a,3)),this.setAttribute("uv",new Pi(o,2))}static fromJSON(t){return new Hu(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class ju extends ji{constructor(t=1,e=1,n=1,r=8,i=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o};const l=this;r=Math.floor(r),i=Math.floor(i);const u=[],c=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function x(n){const i=p,s=new Rn,f=new ur;let x=0;const y=!0===n?t:e,v=!0===n?1:-1;for(let t=1;t<=r;t++)c.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const b=p;for(let t=0;t<=r;t++){const e=t/r*o+a,n=Math.cos(e),i=Math.sin(e);f.x=y*i,f.y=m*v,f.z=y*n,c.push(f.x,f.y,f.z),h.push(0,v,0),s.x=.5*n+.5,s.y=.5*i*v+.5,d.push(s.x,s.y),p++}for(let t=0;t<r;t++){const e=i+t,r=b+t;!0===n?u.push(r,r+1,e):u.push(r+1,r,e),x+=3}l.addGroup(g,x,!0===n?1:2),g+=x}!function(){const s=new ur,x=new ur;let y=0;const v=(e-t)/n;for(let l=0;l<=i;l++){const u=[],g=l/i,y=g*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*o+a,l=Math.sin(i),f=Math.cos(i);x.x=y*l,x.y=-g*n+m,x.z=y*f,c.push(x.x,x.y,x.z),s.set(l,v,f).normalize(),h.push(s.x,s.y,s.z),d.push(e,1-g),u.push(p++)}f.push(u)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){const n=f[e][t],r=f[e+1][t],i=f[e+1][t+1],s=f[e][t+1];u.push(n,r,s),u.push(r,i,s),y+=6}l.addGroup(g,y,0),g+=y}(),!1===s&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new Pi(c,3)),this.setAttribute("normal",new Pi(h,3)),this.setAttribute("uv",new Pi(d,2))}static fromJSON(t){return new ju(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class qu extends ju{constructor(t=1,e=1,n=8,r=1,i=!1,s=0,a=2*Math.PI){super(0,t,e,n,r,i,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:a}}static fromJSON(t){return new qu(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Xu extends ji{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],s=[];function a(t,e,n,r){const i=r+1,s=[];for(let r=0;r<=i;r++){s[r]=[];const a=t.clone().lerp(n,r/i),o=e.clone().lerp(n,r/i),l=i-r;for(let t=0;t<=l;t++)s[r][t]=0===t&&r===i?a:a.clone().lerp(o,t/l)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(s[t][n+1]),o(s[t+1][n]),o(s[t][n])):(o(s[t][n+1]),o(s[t+1][n+1]),o(s[t+1][n]))}}function o(t){i.push(t.x,t.y,t.z)}function l(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function u(t,e,n,r){r<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=r/2/Math.PI+.5)}function c(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new ur,r=new ur,i=new ur;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],r),l(e[s+2],i),a(n,r,i,t)}(r),function(t){const e=new ur;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){const t=new ur;for(let n=0;n<i.length;n+=3){t.x=i[n+0],t.y=i[n+1],t.z=i[n+2];const r=c(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(r,1-a)}var e;(function(){const t=new ur,e=new ur,n=new ur,r=new ur,a=new Rn,o=new Rn,l=new Rn;for(let h=0,d=0;h<i.length;h+=9,d+=6){t.set(i[h+0],i[h+1],i[h+2]),e.set(i[h+3],i[h+4],i[h+5]),n.set(i[h+6],i[h+7],i[h+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),r.copy(t).add(e).add(n).divideScalar(3);const p=c(r);u(a,d+0,t,p),u(o,d+2,e,p),u(l,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],r=s[t+4],i=Math.max(e,n,r),a=Math.min(e,n,r);i>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Pi(i,3)),this.setAttribute("normal",new Pi(i.slice(),3)),this.setAttribute("uv",new Pi(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new Xu(t.vertices,t.indices,t.radius,t.details)}}class Ku extends Xu{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ku(t.radius,t.detail)}}const Yu=new ur,Zu=new ur,Ju=new ur,Qu=new Si;class tc extends ji{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,r=Math.pow(10,n),i=Math.cos(Sn*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],u=["a","b","c"],c=new Array(3),h={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=Qu;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Qu.getNormal(Ju),c[0]=`${Math.round(e.x*r)},${Math.round(e.y*r)},${Math.round(e.z*r)}`,c[1]=`${Math.round(n.x*r)},${Math.round(n.y*r)},${Math.round(n.z*r)}`,c[2]=`${Math.round(o.x*r)},${Math.round(o.y*r)},${Math.round(o.z*r)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=c[t],r=c[e],s=Qu[u[t]],a=Qu[u[e]],o=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?(Ju.dot(h[p].normal)<=i&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:Ju.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];Yu.fromBufferAttribute(a,e),Zu.fromBufferAttribute(a,n),d.push(Yu.x,Yu.y,Yu.z),d.push(Zu.x,Zu.y,Zu.z)}this.setAttribute("position",new Pi(d,3))}}}class ec extends Wu{constructor(t){super(t),this.uuid=kn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Wu).fromJSON(n))}return this}}function nc(t,e,n,r,i){let s,a;if(i===function(t,e,n,r){let i=0;for(let s=e,a=n-r;s<n;s+=r)i+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return i}(t,e,n,r)>0)for(s=e;s<n;s+=r)a=_c(s,t[s],t[s+1],a);else for(s=n-r;s>=e;s-=r)a=_c(s,t[s],t[s+1],a);return a&&xc(a,a.next)&&(kc(a),a=a.next),a}function rc(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!xc(r,r.next)&&0!==gc(r.prev,r,r.next))r=r.next;else{if(kc(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function ic(t,e,n,r,i,s,a){if(!t)return;!a&&s&&function(t,e,n,r){let i=t;do{null===i.z&&(i.z=dc(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n,r,i,s,a,o,l,u=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,r=n,o=0,e=0;e<u&&(o++,r=r.nextZ,r);e++);for(l=u;o>0||l>0&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),s?s.nextZ=i:t=i,i.prevZ=s,s=i;n=r}s.nextZ=null,u*=2}while(a>1)}(i)}(t,r,i,s);let o,l,u=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?ac(t,r,i,s):sc(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),kc(t),t=l.next,u=l.next;else if((t=l)===u){a?1===a?ic(t=oc(rc(t),e,n),e,n,r,i,s,2):2===a&&lc(t,e,n,r,i,s):ic(rc(t),e,n,r,i,s,1);break}}function sc(t){const e=t.prev,n=t,r=t.next;if(gc(e,n,r)>=0)return!1;let i=t.next.next;for(;i!==t.prev;){if(fc(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&gc(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function ac(t,e,n,r){const i=t.prev,s=t,a=t.next;if(gc(i,s,a)>=0)return!1;const o=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,l=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,u=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,c=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,h=dc(o,l,e,n,r),d=dc(u,c,e,n,r);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=h&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&fc(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&gc(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&fc(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&gc(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=h;){if(p!==t.prev&&p!==t.next&&fc(i.x,i.y,s.x,s.y,a.x,a.y,p.x,p.y)&&gc(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&fc(i.x,i.y,s.x,s.y,a.x,a.y,f.x,f.y)&&gc(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function oc(t,e,n){let r=t;do{const i=r.prev,s=r.next.next;!xc(i,s)&&yc(i,r,r.next,s)&&wc(i,s)&&wc(s,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(s.i/n),kc(r),kc(r.next),r=t=s),r=r.next}while(r!==t);return rc(r)}function lc(t,e,n,r,i,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&mc(a,t)){let o=Sc(a,t);return a=rc(a,a.next),o=rc(o,o.next),ic(a,e,n,r,i,s),void ic(o,e,n,r,i,s)}t=t.next}a=a.next}while(a!==t)}function uc(t,e){return t.x-e.x}function cc(t,e){if(e=function(t,e){let n=e;const r=t.x,i=t.y;let s,a=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>a){if(a=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(r===a)return s;const o=s,l=s.x,u=s.y;let c,h=1/0;n=s;do{r>=n.x&&n.x>=l&&r!==n.x&&fc(i<u?r:a,i,l,u,i<u?a:r,i,n.x,n.y)&&(c=Math.abs(i-n.y)/(r-n.x),wc(n,t)&&(c<h||c===h&&(n.x>s.x||n.x===s.x&&hc(s,n)))&&(s=n,h=c)),n=n.next}while(n!==o);return s}(t,e),e){const n=Sc(e,t);rc(e,e.next),rc(n,n.next)}}function hc(t,e){return gc(t.prev,t,e.prev)<0&&gc(e.next,t,t.next)<0}function dc(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function pc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function fc(t,e,n,r,i,s,a,o){return(i-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(r-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(i-a)*(r-o)>=0}function mc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&yc(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(wc(t,e)&&wc(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(gc(t.prev,t,e.prev)||gc(t,e.prev,e))||xc(t,e)&&gc(t.prev,t,t.next)>0&&gc(e.prev,e,e.next)>0)}function gc(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function xc(t,e){return t.x===e.x&&t.y===e.y}function yc(t,e,n,r){const i=bc(gc(t,e,n)),s=bc(gc(t,e,r)),a=bc(gc(n,r,t)),o=bc(gc(n,r,e));return i!==s&&a!==o||!(0!==i||!vc(t,n,e))||!(0!==s||!vc(t,r,e))||!(0!==a||!vc(n,t,r))||!(0!==o||!vc(n,e,r))}function vc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function bc(t){return t>0?1:t<0?-1:0}function wc(t,e){return gc(t.prev,t,t.next)<0?gc(t,e,t.next)>=0&&gc(t,t.prev,e)>=0:gc(t,e,t.prev)<0||gc(t,t.next,e)<0}function Sc(t,e){const n=new Ic(t.i,t.x,t.y),r=new Ic(e.i,e.x,e.y),i=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,s.next=r,r.prev=s,r}function _c(t,e,n,r){const i=new Ic(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function kc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ic(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Mc{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return Mc.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];Tc(t),Cc(n,t);let s=t.length;e.forEach(Tc);for(let t=0;t<e.length;t++)r.push(s),s+=e[t].length,Cc(n,e[t]);const a=function(t,e,n=2){const r=e&&e.length,i=r?e[0]*n:t.length;let s=nc(t,0,i,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u,c,h,d,p;if(r&&(s=function(t,e,n,r){const i=[];let s,a,o,l,u;for(s=0,a=e.length;s<a;s++)o=e[s]*r,l=s<a-1?e[s+1]*r:t.length,u=nc(t,o,l,r,!1),u===u.next&&(u.steiner=!0),i.push(pc(u));for(i.sort(uc),s=0;s<i.length;s++)cc(i[s],n),n=rc(n,n.next);return n}(t,e,s,n)),t.length>80*n){o=u=t[0],l=c=t[1];for(let e=n;e<i;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>u&&(u=h),d>c&&(c=d);p=Math.max(u-o,c-l),p=0!==p?1/p:0}return ic(s,a,n,o,l,p),a}(n,r);for(let t=0;t<a.length;t+=3)i.push(a.slice(t,t+3));return i}}function Tc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Cc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Ec extends ji{constructor(t=new ec([new Rn(.5,.5),new Rn(-.5,.5),new Rn(-.5,-.5),new Rn(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let e=0,n=t.length;e<n;e++)s(t[e]);function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let u=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:c-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Ac;let g,x,y,v,b,w=!1;f&&(g=f.getSpacedPoints(o),w=!0,u=!1,x=f.computeFrenetFrames(o,!1),y=new ur,v=new ur,b=new ur),u||(p=0,c=0,h=0,d=0);const S=t.extractPoints(a);let _=S.shape;const k=S.holes;if(!Mc.isClockWise(_)){_=_.reverse();for(let t=0,e=k.length;t<e;t++){const e=k[t];Mc.isClockWise(e)&&(k[t]=e.reverse())}}const I=Mc.triangulateShape(_,k),M=_;for(let t=0,e=k.length;t<e;t++){const e=k[t];_=_.concat(e)}function T(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const C=_.length,E=I.length;function A(t,e,n){let r,i,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,u=n.y-t.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=e.x-o/h,f=e.y+a/h,m=((n.x-u/d-p)*u-(n.y+l/d-f)*l)/(a*u-o*l);r=p+a*m-t.x,i=f+o*m-t.y;const g=r*r+i*i;if(g<=2)return new Rn(r,i);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(u)&&(t=!0),t?(r=-o,i=a,s=Math.sqrt(c)):(r=a,i=o,s=Math.sqrt(c/2))}return new Rn(r/s,i/s)}const N=[];for(let t=0,e=M.length,n=e-1,r=t+1;t<e;t++,n++,r++)n===e&&(n=0),r===e&&(r=0),N[t]=A(M[t],M[n],M[r]);const R=[];let D,L=N.concat();for(let t=0,e=k.length;t<e;t++){const e=k[t];D=[];for(let t=0,n=e.length,r=n-1,i=t+1;t<n;t++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[t]=A(e[t],e[r],e[i]);R.push(D),L=L.concat(D)}for(let t=0;t<p;t++){const e=t/p,n=c*Math.cos(e*Math.PI/2),r=h*Math.sin(e*Math.PI/2)+d;for(let t=0,e=M.length;t<e;t++){const e=T(M[t],N[t],r);P(e.x,e.y,-n)}for(let t=0,e=k.length;t<e;t++){const e=k[t];D=R[t];for(let t=0,i=e.length;t<i;t++){const i=T(e[t],D[t],r);P(i.x,i.y,-n)}}}const F=h+d;for(let t=0;t<C;t++){const e=u?T(_[t],L[t],F):_[t];w?(v.copy(x.normals[0]).multiplyScalar(e.x),y.copy(x.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(v).add(y),P(b.x,b.y,b.z)):P(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<C;e++){const n=u?T(_[e],L[e],F):_[e];w?(v.copy(x.normals[t]).multiplyScalar(n.x),y.copy(x.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(v).add(y),P(b.x,b.y,b.z)):P(n.x,n.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=c*Math.cos(e*Math.PI/2),r=h*Math.sin(e*Math.PI/2)+d;for(let t=0,e=M.length;t<e;t++){const e=T(M[t],N[t],r);P(e.x,e.y,l+n)}for(let t=0,e=k.length;t<e;t++){const e=k[t];D=R[t];for(let t=0,i=e.length;t<i;t++){const i=T(e[t],D[t],r);w?P(i.x,i.y+g[o-1].y,g[o-1].x+n):P(i.x,i.y,l+n)}}}function $(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=C*t,s=C*(t+1);z(e+r+n,e+i+n,e+i+s,e+r+s)}}}function P(t,e,n){s.push(t),s.push(e),s.push(n)}function O(t,e,i){B(t),B(e),B(i);const s=r.length/3,a=m.generateTopUV(n,r,s-3,s-2,s-1);U(a[0]),U(a[1]),U(a[2])}function z(t,e,i,s){B(t),B(e),B(s),B(e),B(i),B(s);const a=r.length/3,o=m.generateSideWallUV(n,r,a-6,a-3,a-2,a-1);U(o[0]),U(o[1]),U(o[3]),U(o[1]),U(o[2]),U(o[3])}function B(t){r.push(s[3*t+0]),r.push(s[3*t+1]),r.push(s[3*t+2])}function U(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(u){let t=0,e=C*t;for(let t=0;t<E;t++){const n=I[t];O(n[2]+e,n[1]+e,n[0]+e)}t=o+2*p,e=C*t;for(let t=0;t<E;t++){const n=I[t];O(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<E;t++){const e=I[t];O(e[2],e[1],e[0])}for(let t=0;t<E;t++){const e=I[t];O(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;$(M,e),e+=M.length;for(let t=0,n=k.length;t<n;t++){const n=k[t];$(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Pi(r,3)),this.setAttribute("uv",new Pi(i,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new Bu[r.type]).fromJSON(r)),new Ec(n,t.options)}}const Ac={generateTopUV:function(t,e,n,r,i){const s=e[3*n],a=e[3*n+1],o=e[3*r],l=e[3*r+1],u=e[3*i],c=e[3*i+1];return[new Rn(s,a),new Rn(o,l),new Rn(u,c)]},generateSideWallUV:function(t,e,n,r,i,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],u=e[3*r],c=e[3*r+1],h=e[3*r+2],d=e[3*i],p=e[3*i+1],f=e[3*i+2],m=e[3*s],g=e[3*s+1],x=e[3*s+2];return Math.abs(o-c)<Math.abs(a-u)?[new Rn(a,1-l),new Rn(u,1-h),new Rn(d,1-f),new Rn(m,1-x)]:[new Rn(o,1-l),new Rn(c,1-h),new Rn(p,1-f),new Rn(g,1-x)]}};class Nc extends Xu{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Nc(t.radius,t.detail)}}class Rc extends Xu{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Rc(t.radius,t.detail)}}class Dc extends ji{constructor(t=.5,e=1,n=8,r=1,i=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],u=[];let c=t;const h=(e-t)/(r=Math.max(1,r)),d=new ur,p=new Rn;for(let t=0;t<=r;t++){for(let t=0;t<=n;t++){const r=i+t/n*s;d.x=c*Math.cos(r),d.y=c*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,u.push(p.x,p.y)}c+=h}for(let t=0;t<r;t++){const e=t*(n+1);for(let t=0;t<n;t++){const r=t+e,i=r,s=r+n+1,o=r+n+2,l=r+1;a.push(i,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Pi(o,3)),this.setAttribute("normal",new Pi(l,3)),this.setAttribute("uv",new Pi(u,2))}static fromJSON(t){return new Dc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Lc extends ji{constructor(t=new ec([new Rn(0,.5),new Rn(-.5,-.5),new Rn(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=r.length/3,l=t.extractPoints(e);let u=l.shape;const c=l.holes;!1===Mc.isClockWise(u)&&(u=u.reverse());for(let t=0,e=c.length;t<e;t++){const e=c[t];!0===Mc.isClockWise(e)&&(c[t]=e.reverse())}const h=Mc.triangulateShape(u,c);for(let t=0,e=c.length;t<e;t++){const e=c[t];u=u.concat(e)}for(let t=0,e=u.length;t<e;t++){const e=u[t];r.push(e.x,e.y,0),i.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],r=e[0]+a,i=e[1]+a,s=e[2]+a;n.push(r,i,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Pi(r,3)),this.setAttribute("normal",new Pi(i,3)),this.setAttribute("uv",new Pi(s,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}return new Lc(n,t.curveSegments)}}class Fc extends ji{constructor(t=1,e=32,n=16,r=0,i=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const u=[],c=new ur,h=new ur,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],x=d/n;let y=0;0==d&&0==s?y=.5/e:d==n&&o==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;c.x=-t*Math.cos(r+o*i)*Math.sin(s+x*a),c.y=t*Math.cos(s+x*a),c.z=t*Math.sin(r+o*i)*Math.sin(s+x*a),p.push(c.x,c.y,c.z),h.copy(c).normalize(),f.push(h.x,h.y,h.z),m.push(o+y,1-x),g.push(l++)}u.push(g)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const e=u[t][r+1],i=u[t][r],a=u[t+1][r],l=u[t+1][r+1];(0!==t||s>0)&&d.push(e,i,l),(t!==n-1||o<Math.PI)&&d.push(i,a,l)}this.setIndex(d),this.setAttribute("position",new Pi(p,3)),this.setAttribute("normal",new Pi(f,3)),this.setAttribute("uv",new Pi(m,2))}static fromJSON(t){return new Fc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class $c extends Xu{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new $c(t.radius,t.detail)}}class Pc extends ji{constructor(t=1,e=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const s=[],a=[],o=[],l=[],u=new ur,c=new ur,h=new ur;for(let s=0;s<=n;s++)for(let d=0;d<=r;d++){const p=d/r*i,f=s/n*Math.PI*2;c.x=(t+e*Math.cos(f))*Math.cos(p),c.y=(t+e*Math.cos(f))*Math.sin(p),c.z=e*Math.sin(f),a.push(c.x,c.y,c.z),u.x=t*Math.cos(p),u.y=t*Math.sin(p),h.subVectors(c,u).normalize(),o.push(h.x,h.y,h.z),l.push(d/r),l.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*t+e-1,i=(r+1)*(t-1)+e-1,a=(r+1)*(t-1)+e,o=(r+1)*t+e;s.push(n,i,o),s.push(i,a,o)}this.setIndex(s),this.setAttribute("position",new Pi(a,3)),this.setAttribute("normal",new Pi(o,3)),this.setAttribute("uv",new Pi(l,2))}static fromJSON(t){return new Pc(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Oc extends ji{constructor(t=1,e=.4,n=64,r=8,i=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:s},n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],u=[],c=new ur,h=new ur,d=new ur,p=new ur,f=new ur,m=new ur,g=new ur;for(let a=0;a<=n;++a){const y=a/n*i*Math.PI*2;x(y,i,s,t,d),x(y+.01,i,s,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,s=-e*Math.cos(i),p=e*Math.sin(i);c.x=d.x+(s*g.x+p*f.x),c.y=d.y+(s*g.y+p*f.y),c.z=d.z+(s*g.z+p*f.z),o.push(c.x,c.y,c.z),h.subVectors(c,d).normalize(),l.push(h.x,h.y,h.z),u.push(a/n),u.push(t/r)}}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,o=(r+1)*(t-1)+e;a.push(n,i,o),a.push(i,s,o)}function x(t,e,n,r,i){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);i.x=r*(2+l)*.5*s,i.y=r*(2+l)*a*.5,i.z=r*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Pi(o,3)),this.setAttribute("normal",new Pi(l,3)),this.setAttribute("uv",new Pi(u,2))}static fromJSON(t){return new Oc(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class zc extends ji{constructor(t=new Ou(new ur(-1,-1,0),new ur(-1,1,0),new ur(1,1,0)),e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const s=t.computeFrenetFrames(e,i);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new ur,o=new ur,l=new Rn;let u=new ur;const c=[],h=[],d=[],p=[];function f(i){u=t.getPointAt(i/e,u);const l=s.normals[i],d=s.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+i*d.x,o.y=s*l.y+i*d.y,o.z=s*l.z+i*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=u.x+n*o.x,a.y=u.y+n*o.y,a.z=u.z+n*o.z,c.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===i?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)l.x=t/e,l.y=n/r,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,a=(r+1)*(t-1)+e;p.push(n,i,a),p.push(i,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Pi(c,3)),this.setAttribute("normal",new Pi(h,3)),this.setAttribute("uv",new Pi(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new zc((new Bu[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Bc extends ji{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,r=new ur,i=new ur;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],u=l.start;for(let t=u,o=u+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),u=a.getX(t+(o+1)%3);r.fromBufferAttribute(s,l),i.fromBufferAttribute(s,u),!0===Uc(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;r.fromBufferAttribute(s,o),i.fromBufferAttribute(s,l),!0===Uc(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}this.setAttribute("position",new Pi(e,3))}}}function Uc(t,e,n){const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r),n.add(i),!0)}var Wc=Object.freeze({__proto__:null,BoxGeometry:ds,BoxBufferGeometry:ds,CapsuleGeometry:Gu,CapsuleBufferGeometry:Gu,CircleGeometry:Hu,CircleBufferGeometry:Hu,ConeGeometry:qu,ConeBufferGeometry:qu,CylinderGeometry:ju,CylinderBufferGeometry:ju,DodecahedronGeometry:Ku,DodecahedronBufferGeometry:Ku,EdgesGeometry:tc,ExtrudeGeometry:Ec,ExtrudeBufferGeometry:Ec,IcosahedronGeometry:Nc,IcosahedronBufferGeometry:Nc,LatheGeometry:Vu,LatheBufferGeometry:Vu,OctahedronGeometry:Rc,OctahedronBufferGeometry:Rc,PlaneGeometry:Rs,PlaneBufferGeometry:Rs,PolyhedronGeometry:Xu,PolyhedronBufferGeometry:Xu,RingGeometry:Dc,RingBufferGeometry:Dc,ShapeGeometry:Lc,ShapeBufferGeometry:Lc,SphereGeometry:Fc,SphereBufferGeometry:Fc,TetrahedronGeometry:$c,TetrahedronBufferGeometry:$c,TorusGeometry:Pc,TorusBufferGeometry:Pc,TorusKnotGeometry:Oc,TorusKnotBufferGeometry:Oc,TubeGeometry:zc,TubeBufferGeometry:zc,WireframeGeometry:Bc});class Vc extends ki{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Xn(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Gc extends gs{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Hc extends ki{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Xn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ze,this.normalScale=new Rn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class jc extends Hc{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Rn(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return In(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Xn(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Xn(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Xn(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class qc extends ki{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Xn(16777215),this.specular=new Xn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ze,this.normalScale=new Rn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Xc extends ki{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Xn(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ze,this.normalScale=new Rn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Kc extends ki{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ze,this.normalScale=new Rn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Yc extends ki{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Xn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Zc extends ki{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Xn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ze,this.normalScale=new Rn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Jc extends Ql{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Qc(t,e,n){return eh(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)}function th(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function eh(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function nh(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n}function rh(t,e,n){const r=t.length,i=new t.constructor(r);for(let s=0,a=0;a!==r;++s){const r=n[s]*e;for(let n=0;n!==e;++n)i[a++]=t[r+n]}return i}function ih(t,e,n,r){let i=1,s=t[0];for(;void 0!==s&&void 0===s[r];)s=t[i++];if(void 0===s)return;let a=s[r];if(void 0!==a)if(Array.isArray(a))do{a=s[r],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[i++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[r],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[i++]}while(void 0!==s);else do{a=s[r],void 0!==a&&(e.push(s.time),n.push(a)),s=t[i++]}while(void 0!==s)}var sh=Object.freeze({__proto__:null,arraySlice:Qc,convertArray:th,isTypedArray:eh,getKeyframeOrder:nh,sortedArray:rh,flattenJSON:ih,subclip:function(t,e,n,r,i=30){const s=t.clone();s.name=e;const a=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],o=e.getValueSize(),l=[],u=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*i;if(!(s<n||s>=r)){l.push(e.times[t]);for(let n=0;n<o;++n)u.push(e.values[t*o+n])}}0!==l.length&&(e.times=th(l,e.times.constructor),e.values=th(u,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let t=0;t<s.tracks.length;++t)o>s.tracks[t].times[0]&&(o=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,s=e/r;for(let e=0;e<i;++e){const r=n.tracks[e],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const a=t.tracks.find((function(t){return t.name===r.name&&t.ValueTypeName===i}));if(void 0===a)continue;let o=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=r.times.length-1;let d;if(s<=r.times[0]){const t=o,e=l-o;d=Qc(r.values,t,e)}else if(s>=r.times[h]){const t=h*l+o,e=t+l-o;d=Qc(r.values,t,e)}else{const t=r.createInterpolant(),e=o,n=l-o;t.evaluate(s),d=Qc(t.resultBuffer,e,n)}"quaternion"===i&&(new lr).fromArray(d).normalize().conjugate().toArray(d);const p=a.times.length;for(let t=0;t<p;++t){const e=t*c+u;if("quaternion"===i)lr.multiplyQuaternionsFlat(a.values,e,d,0,a.values,e);else{const t=c-2*u;for(let n=0;n<t;++n)a.values[e+n]-=d[n]}}}return t.blendMode=Ne,t}});class ah{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let s;n:{r:if(!(t<r)){for(let s=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(i=r,r=e[++n],t<r)break e}s=e.length;break n}if(t>=i)break t;{const a=e[1];t<a&&(n=2,i=a);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(r=i,i=e[--n-1],t>=i)break e}s=n,n=0}}for(;n<s;){const r=n+s>>>1;t<e[r]?s=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let t=0;t!==r;++t)e[t]=n[i+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class oh extends ah{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Te,endingEnd:Te}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,s=t+1,a=r[i],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case Ce:i=t,a=2*e-n;break;case Ee:i=r.length-2,a=e+r[i]-r[i+1];break;default:i=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Ce:s=t,o=2*n-e;break;case Ee:s=1,o=n+r[1]-r[0];break;default:s=t-1,o=e}const l=.5*(n-e),u=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=s*u}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,x=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let t=0;t!==a;++t)i[t]=g*s[u+t]+x*s[l+t]+y*s[o+t]+v*s[c+t];return i}}class lh extends ah{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,u=(n-e)/(r-e),c=1-u;for(let t=0;t!==a;++t)i[t]=s[l+t]*c+s[o+t]*u;return i}}class uh extends ah{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class ch{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=th(e,this.TimeBufferType),this.values=th(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:th(t.times,Array),values:th(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new uh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new lh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new oh(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ke:e=this.InterpolantFactoryMethodDiscrete;break;case Ie:e=this.InterpolantFactoryMethodLinear;break;case Me:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ke;case this.InterpolantFactoryMethodLinear:return Ie;case this.InterpolantFactoryMethodSmooth:return Me}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const t=this.getValueSize();this.times=Qc(n,i,s),this.values=Qc(this.values,i*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==i;e++){const r=n[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,s),t=!1;break}s=r}if(void 0!==r&&eh(r))for(let e=0,n=r.length;e!==n;++e){const n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=Qc(this.times),e=Qc(this.values),n=this.getValueSize(),r=this.getInterpolation()===Me,i=t.length-1;let s=1;for(let a=1;a<i;++a){let i=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(r)i=!0;else{const t=a*n,r=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[r+a]||n!==e[s+a]){i=!0;break}}}if(i){if(a!==s){t[s]=t[a];const r=a*n,i=s*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++s}}if(i>0){t[s]=t[i];for(let t=i*n,r=s*n,a=0;a!==n;++a)e[r+a]=e[t+a];++s}return s!==t.length?(this.times=Qc(t,0,s),this.values=Qc(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=Qc(this.times,0),e=Qc(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}ch.prototype.TimeBufferType=Float32Array,ch.prototype.ValueBufferType=Float32Array,ch.prototype.DefaultInterpolation=Ie;class hh extends ch{}hh.prototype.ValueTypeName="bool",hh.prototype.ValueBufferType=Array,hh.prototype.DefaultInterpolation=ke,hh.prototype.InterpolantFactoryMethodLinear=void 0,hh.prototype.InterpolantFactoryMethodSmooth=void 0;class dh extends ch{}dh.prototype.ValueTypeName="color";class ph extends ch{}ph.prototype.ValueTypeName="number";class fh extends ah{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(r-e);let l=t*a;for(let t=l+a;l!==t;l+=4)lr.slerpFlat(i,0,s,l-a,s,l,o);return i}}class mh extends ch{InterpolantFactoryMethodLinear(t){return new fh(this.times,this.values,this.getValueSize(),t)}}mh.prototype.ValueTypeName="quaternion",mh.prototype.DefaultInterpolation=Ie,mh.prototype.InterpolantFactoryMethodSmooth=void 0;class gh extends ch{}gh.prototype.ValueTypeName="string",gh.prototype.ValueBufferType=Array,gh.prototype.DefaultInterpolation=ke,gh.prototype.InterpolantFactoryMethodLinear=void 0,gh.prototype.InterpolantFactoryMethodSmooth=void 0;class xh extends ch{}xh.prototype.ValueTypeName="vector";class yh{constructor(t,e=-1,n,r=Ae){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=kn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,i=n.length;t!==i;++t)e.push(vh(n[t]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,r=n.length;t!==r;++t)e.push(ch.toJSON(n[t]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,s=[];for(let t=0;t<i;t++){let a=[],o=[];a.push((t+i-1)%i,t,(t+1)%i),o.push(0,1,0);const l=nh(a);a=rh(a,1,l),o=rh(o,1,l),r||0!==a[0]||(a.push(i),o.push(o[0])),s.push(new ph(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(i);if(s&&s.length>1){const t=s[1];let e=r[t];e||(r[t]=e=[]),e.push(n)}}const s=[];for(const t in r)s.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return s}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const s=[],a=[];ih(n,s,a,r),0!==s.length&&i.push(new t(e,s,a))}},r=[],i=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const i=l[t].keys;if(i&&0!==i.length)if(i[0].morphTargets){const t={};let e;for(e=0;e<i.length;e++)if(i[e].morphTargets)for(let n=0;n<i[e].morphTargets.length;n++)t[i[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let r=0;r!==i[e].morphTargets.length;++r){const r=i[e];t.push(r.time),s.push(r.morphTarget===n?1:0)}r.push(new ph(".morphTargetInfluence["+n+"]",t,s))}o=t.length*s}else{const s=".bones["+e[t].name+"]";n(xh,s+".position",i,"pos",r),n(mh,s+".quaternion",i,"rot",r),n(xh,s+".scale",i,"scl",r)}}return 0===r.length?null:new this(i,o,r,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function vh(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ph;case"vector":case"vector2":case"vector3":case"vector4":return xh;case"color":return dh;case"quaternion":return mh;case"bool":case"boolean":return hh;case"string":return gh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];ih(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const bh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class wh{constructor(t,e,n){const r=this;let i,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==r.onStart&&r.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const Sh=new wh;class _h{constructor(t){this.manager=void 0!==t?t:Sh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const kh={};class Ih extends Error{constructor(t,e){super(t),this.response=e}}class Mh extends _h{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=bh.get(t);if(void 0!==i)return this.manager.itemStart(t),setTimeout((()=>{e&&e(i),this.manager.itemEnd(t)}),0),i;if(void 0!==kh[t])return void kh[t].push({onLoad:e,onProgress:n,onError:r});kh[t]=[],kh[t].push({onLoad:e,onProgress:n,onError:r});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=kh[t],r=e.body.getReader(),i=e.headers.get("Content-Length"),s=i?parseInt(i):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){r.read().then((({done:r,value:i})=>{if(r)t.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(r)}t.enqueue(i),e()}}))}()}});return new Response(l)}throw new Ih(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,a)));case"json":return t.json();default:if(void 0===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,r=new TextDecoder(n);return t.arrayBuffer().then((t=>r.decode(t)))}}})).then((e=>{bh.add(t,e);const n=kh[t];delete kh[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onLoad&&r.onLoad(e)}})).catch((e=>{const n=kh[t];if(void 0===n)throw this.manager.itemError(t),e;delete kh[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Th extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Mh(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=yh.parse(t[n]);e.push(r)}return e}}class Ch extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=[],a=new vu,o=new Mh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function u(u){o.load(t[u],(function(t){const n=i.parse(t,!0);s[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=wt),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))}),n,r)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)u(e);else o.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=wt),a.format=n.format,a.needsUpdate=!0,e&&e(a)}),n,r);return a}}class Eh extends _h{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=bh.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a=Pn("img");function o(){u(),bh.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){u(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(t),a.src=t,a}}class Ah extends _h{constructor(t){super(t)}load(t,e,n,r){const i=new ws,s=new Eh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],(function(t){i.images[n]=t,a++,6===a&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let e=0;e<t.length;++e)o(e);return i}}class Nh extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Vl,a=new Mh(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(i.withCredentials),a.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:ft,s.wrapT=void 0!==n.wrapT?n.wrapT:ft,s.magFilter=void 0!==n.magFilter?n.magFilter:wt,s.minFilter=void 0!==n.minFilter?n.minFilter:wt,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=kt),1===n.mipmapCount&&(s.minFilter=wt),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,r),s}}class Rh extends _h{constructor(t){super(t)}load(t,e,n,r){const i=new tr,s=new Eh(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){i.image=t,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class Dh extends hi{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Xn(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}class Lh extends Dh{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(hi.DefaultUp),this.updateMatrix(),this.groundColor=new Xn(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Fh=new Br,$h=new ur,Ph=new ur;class Oh{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Rn(512,512),this.map=null,this.mapPass=null,this.matrix=new Br,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Es,this._frameExtents=new Rn(1,1),this._viewportCount=1,this._viewports=[new er(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;$h.setFromMatrixPosition(t.matrixWorld),e.position.copy($h),Ph.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Ph),e.updateMatrixWorld(),Fh.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class zh extends Oh{constructor(){super(new ys(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=2*_n*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Bh extends Dh{constructor(t,e,n=0,r=Math.PI/3,i=0,s=1){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(hi.DefaultUp),this.updateMatrix(),this.target=new hi,this.distance=n,this.angle=r,this.penumbra=i,this.decay=s,this.shadow=new zh}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Uh=new Br,Wh=new ur,Vh=new ur;class Gh extends Oh{constructor(){super(new ys(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Rn(4,2),this._viewportCount=6,this._viewports=[new er(2,1,1,1),new er(0,1,1,1),new er(3,1,1,1),new er(1,1,1,1),new er(3,0,1,1),new er(1,0,1,1)],this._cubeDirections=[new ur(1,0,0),new ur(-1,0,0),new ur(0,0,1),new ur(0,0,-1),new ur(0,1,0),new ur(0,-1,0)],this._cubeUps=[new ur(0,1,0),new ur(0,1,0),new ur(0,1,0),new ur(0,1,0),new ur(0,0,1),new ur(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Wh.setFromMatrixPosition(t.matrixWorld),n.position.copy(Wh),Vh.copy(n.position),Vh.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Vh),n.updateMatrixWorld(),r.makeTranslation(-Wh.x,-Wh.y,-Wh.z),Uh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Uh)}}class Hh extends Dh{constructor(t,e,n=0,r=1){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Gh}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class jh extends Oh{constructor(){super(new Ws(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class qh extends Dh{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(hi.DefaultUp),this.updateMatrix(),this.target=new hi,this.shadow=new jh}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Xh extends Dh{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Kh extends Dh{constructor(t,e,n=10,r=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Yh{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ur)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*r),e.addScaledVector(s[2],.488603*i),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*r*1.092548),e.addScaledVector(s[5],r*i*1.092548),e.addScaledVector(s[6],.315392*(3*i*i-1)),e.addScaledVector(s[7],n*i*1.092548),e.addScaledVector(s[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*r),e.addScaledVector(s[2],1.023328*i),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*r),e.addScaledVector(s[5],.858086*r*i),e.addScaledVector(s[6],.743125*i*i-.247708),e.addScaledVector(s[7],.858086*n*i),e.addScaledVector(s[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}class Zh extends Dh{constructor(t=new Yh,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Jh extends _h{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,s=new Mh(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=Jh.createMaterialFromType(t.type);if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new Xn).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.iridescence&&(r.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(r.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(r.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const i=t.uniforms[e];switch(r.uniforms[e]={},i.type){case"t":r.uniforms[e].value=n(i.value);break;case"c":r.uniforms[e].value=(new Xn).setHex(i.value);break;case"v2":r.uniforms[e].value=(new Rn).fromArray(i.value);break;case"v3":r.uniforms[e].value=(new ur).fromArray(i.value);break;case"v4":r.uniforms[e].value=(new er).fromArray(i.value);break;case"m3":r.uniforms[e].value=(new Dn).fromArray(i.value);break;case"m4":r.uniforms[e].value=(new Br).fromArray(i.value);break;default:r.uniforms[e].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Rn).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Rn).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(r.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(r.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=n(t.thicknessMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=n(t.sheenRoughnessMap)),r}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){return new{ShadowMaterial:Vc,SpriteMaterial:xl,RawShaderMaterial:Gc,ShaderMaterial:gs,PointsMaterial:cu,MeshPhysicalMaterial:jc,MeshStandardMaterial:Hc,MeshPhongMaterial:qc,MeshToonMaterial:Xc,MeshNormalMaterial:Kc,MeshLambertMaterial:Yc,MeshDepthMaterial:Ko,MeshDistanceMaterial:Yo,MeshBasicMaterial:Ii,MeshMatcapMaterial:Zc,LineDashedMaterial:Jc,LineBasicMaterial:Ql,Material:ki}[t]}}class Qh{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class td extends ji{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class ed extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Mh(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],s=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),a=$n(i.type,s),o=new fl(a,i.stride);return o.uuid=i.uuid,e[r]=o,o}const i=t.isInstancedBufferGeometry?new td:new ji,s=t.data.index;if(void 0!==s){const t=$n(s.type,s.array);i.setIndex(new Ci(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let s;if(n.isInterleavedBufferAttribute){const e=r(t.data,n.data);s=new gl(e,n.itemSize,n.offset,n.normalized)}else{const t=$n(n.type,n.array);s=new(n.isInstancedBufferAttribute?ql:Ci)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),void 0!==n.usage&&s.setUsage(n.usage),void 0!==n.updateRange&&(s.updateRange.offset=n.updateRange.offset,s.updateRange.count=n.updateRange.count),i.setAttribute(e,s)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];let a;if(i.isInterleavedBufferAttribute){const e=r(t.data,i.data);a=new gl(e,i.itemSize,i.offset,i.normalized)}else{const t=$n(i.type,i.array);a=new Ci(t,i.itemSize,i.normalized)}void 0!==i.name&&(a.name=i.name),s.push(a)}i.morphAttributes[e]=s}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];i.addGroup(e.start,e.count,e.materialIndex)}const u=t.data.boundingSphere;if(void 0!==u){const t=new ur;void 0!==u.center&&t.fromArray(u.center),i.boundingSphere=new Nr(t,u.radius)}return t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}class nd extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=""===this.path?Qh.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new Mh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=s.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?i.parse(s,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)}async loadAsync(t,e){const n=""===this.path?Qh.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const r=new Mh(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const i=await r.loadAsync(t,e),s=JSON.parse(i),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,i,o,a,n),u=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,u),void 0!==e){let t=!1;for(const e in s)if(s[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),i=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,i),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,r,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new ec).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse((function(t){t.isBone&&(r[t.uuid]=t)})),void 0!==t)for(let e=0,i=t.length;e<i;e++){const i=(new jl).fromJSON(t[e],r);n[i.uuid]=i}return n}parseGeometries(t,e){const n={};if(void 0!==t){const r=new ed;for(let i=0,s=t.length;i<s;i++){let s;const a=t[i];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in Wc?s=Wc[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new Jh;i.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];if("MultiMaterial"===s.type){const t=[];for(let e=0;e<s.materials.length;e++){const r=s.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),t.push(n[r.uuid])}r[s.uuid]=t}else void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=yh.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:$n(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new wh(e);i=new Eh(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],i=n.url;if(Array.isArray(i)){const t=[];for(let e=0,n=i.length;e<n;e++){const n=s(i[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new Vl(n.data,n.width,n.height)))}r[n.uuid]=new Zn(t)}else{const t=s(n.url);r[n.uuid]=new Zn(t)}}}return r}async parseImagesAsync(t){const e=this,n={};let r;async function i(t){if("string"==typeof t){const n=t,i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await r.loadAsync(i)}return t.data?{data:$n(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){r=new Eh(this.manager),r.setCrossOrigin(this.crossOrigin);for(let e=0,r=t.length;e<r;e++){const r=t[e],s=r.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=s[e],r=await i(n);null!==r&&(r instanceof HTMLImageElement?t.push(r):t.push(new Vl(r.data,r.width,r.height)))}n[r.uuid]=new Zn(t)}else{const t=await i(r.url);n[r.uuid]=new Zn(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,s=t.length;i<s;i++){const s=t[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image],o=a.data;let l;Array.isArray(o)?(l=new ws,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new Vl:new tr,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=n(s.mapping,rd)),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=n(s.wrap[0],id),l.wrapT=n(s.wrap[1],id)),void 0!==s.format&&(l.format=s.format),void 0!==s.type&&(l.type=s.type),void 0!==s.encoding&&(l.encoding=s.encoding),void 0!==s.minFilter&&(l.minFilter=n(s.minFilter,sd)),void 0!==s.magFilter&&(l.magFilter=n(s.magFilter,sd)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(l.userData=s.userData),r[s.uuid]=l}return r}parseObject(t,e,n,r,i){let s,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function u(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function c(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),r[t]}switch(t.type){case"Scene":s=new pl,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new Xn(t.background):s.background=c(t.background)),void 0!==t.environment&&(s.environment=c(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new dl(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new hl(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":s=new ys(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new Ws(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new Xh(t.color,t.intensity);break;case"DirectionalLight":s=new qh(t.color,t.intensity);break;case"PointLight":s=new Hh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new Kh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new Bh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":s=new Lh(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new Zh).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=u(t.material),s=new Ul(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=u(t.material),s=new cs(a,o);break;case"InstancedMesh":a=l(t.geometry),o=u(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;s=new Jl(a,o,e),s.instanceMatrix=new ql(new Float32Array(n.array),16),void 0!==r&&(s.instanceColor=new ql(new Float32Array(r.array),r.itemSize));break;case"LOD":s=new Fl;break;case"Line":s=new su(l(t.geometry),u(t.material));break;case"LineLoop":s=new uu(l(t.geometry),u(t.material));break;case"LineSegments":s=new lu(l(t.geometry),u(t.material));break;case"PointCloud":case"Points":s=new mu(l(t.geometry),u(t.material));break;case"Sprite":s=new Nl(u(t.material));break;case"Group":s=new nl;break;case"Bone":s=new Wl;break;default:s=new hi}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,r,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=s.getObjectByProperty("uuid",n.object);void 0!==r&&s.addLevel(r,n.distance)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}}const rd={UVMapping:ot,CubeReflectionMapping:lt,CubeRefractionMapping:ut,EquirectangularReflectionMapping:ct,EquirectangularRefractionMapping:ht,CubeUVReflectionMapping:dt},id={RepeatWrapping:pt,ClampToEdgeWrapping:ft,MirroredRepeatWrapping:mt},sd={NearestFilter:gt,NearestMipmapNearestFilter:xt,NearestMipmapLinearFilter:vt,LinearFilter:wt,LinearMipmapNearestFilter:St,LinearMipmapLinearFilter:kt};class ad extends _h{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=bh.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){bh.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}let od;const ld={getContext:function(){return void 0===od&&(od=new(window.AudioContext||window.webkitAudioContext)),od},setContext:function(t){od=t}};class ud extends _h{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Mh(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{const t=n.slice(0);ld.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}}class cd extends Zh{constructor(t,e,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const r=(new Xn).set(t),i=(new Xn).set(e),s=new ur(r.r,r.g,r.b),a=new ur(i.r,i.g,i.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}class hd extends Zh{constructor(t,e=1){super(void 0,e),this.isAmbientLightProbe=!0;const n=(new Xn).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const dd=new Br,pd=new Br,fd=new Br;class md{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ys,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ys,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,fd.copy(t.projectionMatrix);const n=e.eyeSep/2,r=n*e.near/e.focus,i=e.near*Math.tan(Sn*e.fov*.5)/e.zoom;let s,a;pd.elements[12]=-n,dd.elements[12]=n,s=-i*e.aspect+r,a=i*e.aspect+r,fd.elements[0]=2*e.near/(a-s),fd.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(fd),s=-i*e.aspect-r,a=i*e.aspect-r,fd.elements[0]=2*e.near/(a-s),fd.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(fd)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(pd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(dd)}}class gd{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=xd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=xd();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function xd(){return("undefined"==typeof performance?Date:performance).now()}const yd=new ur,vd=new lr,bd=new ur,wd=new ur;class Sd extends hi{constructor(){super(),this.type="AudioListener",this.context=ld.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new gd}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(yd,vd,bd),wd.set(0,0,-1).applyQuaternion(vd),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(yd.x,t),e.positionY.linearRampToValueAtTime(yd.y,t),e.positionZ.linearRampToValueAtTime(yd.z,t),e.forwardX.linearRampToValueAtTime(wd.x,t),e.forwardY.linearRampToValueAtTime(wd.y,t),e.forwardZ.linearRampToValueAtTime(wd.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(yd.x,yd.y,yd.z),e.setOrientation(wd.x,wd.y,wd.z,n.x,n.y,n.z)}}class _d extends hi{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const kd=new ur,Id=new lr,Md=new ur,Td=new ur;class Cd extends _d{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(kd,Id,Md),Td.set(0,0,1).applyQuaternion(Id);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(kd.x,t),e.positionY.linearRampToValueAtTime(kd.y,t),e.positionZ.linearRampToValueAtTime(kd.z,t),e.orientationX.linearRampToValueAtTime(Td.x,t),e.orientationY.linearRampToValueAtTime(Td.y,t),e.orientationZ.linearRampToValueAtTime(Td.z,t)}else e.setPosition(kd.x,kd.y,kd.z),e.setOrientation(Td.x,Td.y,Td.z)}}class Ed{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Ad{constructor(t,e,n){let r,i,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==r;++t)n[i+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let t=e,i=e+e;t!==i;++t)if(n[t]!==n[t+e]){a.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let t=n,i=r;t!==i;++t)e[t]=e[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]}_slerp(t,e,n,r){lr.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const s=this._workIndex*i;lr.multiplyQuaternionsFlat(t,s,t,e,t,n),lr.slerpFlat(t,e,t,e,t,s,r)}_lerp(t,e,n,r,i){const s=1-r;for(let a=0;a!==i;++a){const i=e+a;t[i]=t[i]*s+t[n+a]*r}}_lerpAdditive(t,e,n,r,i){for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]+t[n+s]*r}}}const Nd=new RegExp("[\\[\\]\\.:\\/]","g"),Rd="[^\\[\\]\\.:\\/]",Dd="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Ld=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Rd)+/(WCOD+)?/.source.replace("WCOD",Dd)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Rd)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Rd)+"$"),Fd=["material","materials","bones"];class $d{constructor(t,e,n){this.path=e,this.parsedPath=n||$d.parseTrackName(e),this.node=$d.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new $d.Composite(t,e,n):new $d(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Nd,"")}static parseTrackName(t){const e=Ld.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Fd.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const s=n(i.children);if(s)return s}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=$d.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const s=t[r];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}$d.Composite=class{constructor(t,e,n){const r=n||$d.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},$d.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},$d.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},$d.prototype.GetterByBindingType=[$d.prototype._getValue_direct,$d.prototype._getValue_array,$d.prototype._getValue_arrayElement,$d.prototype._getValue_toArray],$d.prototype.SetterByBindingTypeAndVersioning=[[$d.prototype._setValue_direct,$d.prototype._setValue_direct_setNeedsUpdate,$d.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[$d.prototype._setValue_array,$d.prototype._setValue_array_setNeedsUpdate,$d.prototype._setValue_array_setMatrixWorldNeedsUpdate],[$d.prototype._setValue_arrayElement,$d.prototype._setValue_arrayElement_setNeedsUpdate,$d.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[$d.prototype._setValue_fromArray,$d.prototype._setValue_fromArray_setNeedsUpdate,$d.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Pd{constructor(){this.isAnimationObjectGroup=!0,this.uuid=kn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,s=i.length;let a,o=t.length,l=this.nCachedObjects_;for(let u=0,c=arguments.length;u!==c;++u){const c=arguments[u],h=c.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(c);for(let t=0,e=s;t!==e;++t)i[t].push(new $d(c,n[t],r[t]))}else if(d<l){a=t[d];const o=--l,u=t[o];e[u.uuid]=d,t[d]=u,e[h]=o,t[o]=c;for(let t=0,e=s;t!==e;++t){const e=i[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new $d(c,n[t],r[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=i){const s=i++,u=t[s];e[u.uuid]=l,t[l]=u,e[o]=s,t[s]=a;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[l]=r,e[s]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<i){const a=--i,o=t[a],u=--s,c=t[u];e[o.uuid]=l,t[l]=o,e[c.uuid]=a,t[a]=c,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],i=e[u];e[l]=r,e[a]=i,e.pop()}}else{const i=--s,a=t[i];i>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[l]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,c=new Array(l);r=i.length,n[t]=r,s.push(t),a.push(e),i.push(c);for(let n=u,r=o.length;n!==r;++n){const r=o[n];c[n]=new $d(r,t,e)}return c}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),i[n]=i[a],i.pop(),r[n]=r[a],r.pop()}}}class Od{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,s=i.length,a=new Array(s),o={endingStart:Te,endingEnd:Te};for(let t=0;t!==s;++t){const e=i[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Se,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,s=n/r;t.warp(1,i,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=i,o[1]=i+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===Ne)for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);else for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulate(r,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const s=n===_e;if(0===t)return-1===i?r:s&&1==(1&i)?e-r:r;if(n===we){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(s&&1==(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=Ce,r.endingEnd=Ce):(r.endingStart=t?this.zeroSlopeAtStart?Ce:Te:Ee,r.endingEnd=e?this.zeroSlopeAtEnd?Ce:Te:Ee)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let s=this._weightInterpolant;null===s&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=i,o[0]=e,a[1]=i+t,o[1]=n,this}}const zd=new Float32Array(1);class Bd extends vn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let t=0;t!==i;++t){const i=r[t],l=i.name;let c=u[l];if(void 0!==c)++c.referenceCount,s[t]=c;else{if(c=s[t],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,o,l));continue}const r=e&&e._propertyBindings[t].binding.parsedPath;c=new Ad($d.create(n,l,r),i.ValueTypeName,i.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,o,l),s[t]=c}a[t].resultBuffer=c.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let s=i[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,s=this._actionsByClip,a=s[i],o=a.knownActions,l=o[o.length-1],u=t._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let s=r[e];void 0===s&&(s={},r[e]=s),s[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,a=s[r],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[i],0===Object.keys(a).length&&delete s[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new lh(new Float32Array(2),new Float32Array(2),1,zd),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let s="string"==typeof t?yh.findByName(r,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:Ae),void 0!==o){const t=o.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const u=new Od(this,s,e,n);return this._bindAction(u,l),this._addInactiveAction(u,a,i),u}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?yh.findByName(n,t):t,s=i?i.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),s=this._accuIndex^=1;for(let a=0;a!==n;++a)e[a]._update(r,t,i,s);const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,s=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,s._cacheIndex=i,e[i]=s,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Ud{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Ud(void 0===this.value.clone?this.value:this.value.clone())}}let Wd=0;class Vd extends vn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Wd++}),this.name="",this.usage=on,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,n=e.length;t<n;t++)this.uniforms.push(e[t].clone());return this}clone(){return(new this.constructor).copy(this)}}class Gd extends fl{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class Hd{constructor(t,e,n,r,i){this.isGLBufferAttribute=!0,this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}class jd{constructor(t,e,n=0,r=1/0){this.ray=new zr(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new Zr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Xd(t,this,n,e),n.sort(qd),n}intersectObjects(t,e=!0,n=[]){for(let r=0,i=t.length;r<i;r++)Xd(t[r],this,n,e);return n.sort(qd),n}}function qd(t,e){return t.distance-e.distance}function Xd(t,e,n,r){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===r){const r=t.children;for(let t=0,i=r.length;t<i;t++)Xd(r[t],e,n,!0)}}class Kd{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(In(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Yd{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const Zd=new Rn;class Jd{constructor(t=new Rn(1/0,1/0),e=new Rn(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Zd.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Zd.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Qd=new ur,tp=new ur;class ep{constructor(t=new ur,e=new ur){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Qd.subVectors(t,this.start),tp.subVectors(this.end,this.start);const n=tp.dot(tp);let r=tp.dot(Qd)/n;return e&&(r=In(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const np=new ur;class rp extends hi{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new ji,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const i=t/n*Math.PI*2,s=e/n*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new Pi(r,3));const i=new Ql({fog:!1,toneMapped:!1});this.cone=new lu(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),np.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(np),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ip=new ur,sp=new Br,ap=new Br;class op extends lu{constructor(t){const e=lp(t),n=new ji,r=[],i=[],s=new Xn(0,0,1),a=new Xn(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(s.r,s.g,s.b),i.push(a.r,a.g,a.b))}n.setAttribute("position",new Pi(r,3)),n.setAttribute("color",new Pi(i,3)),super(n,new Ql({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");ap.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(sp.multiplyMatrices(ap,i.matrixWorld),ip.setFromMatrixPosition(sp),r.setXYZ(n,ip.x,ip.y,ip.z),sp.multiplyMatrices(ap,i.parent.matrixWorld),ip.setFromMatrixPosition(sp),r.setXYZ(n+1,ip.x,ip.y,ip.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function lp(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,lp(t.children[n]));return e}class up extends cs{constructor(t,e,n){super(new Fc(e,4,2),new Ii({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const cp=new ur,hp=new Xn,dp=new Xn;class pp extends hi{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new Rc(e);r.rotateY(.5*Math.PI),this.material=new Ii({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),s=new Float32Array(3*i.count);r.setAttribute("color",new Ci(s,3)),this.add(new cs(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");hp.copy(this.light.color),dp.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?hp:dp;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(cp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class fp extends lu{constructor(t=10,e=10,n=4473924,r=8947848){n=new Xn(n),r=new Xn(r);const i=e/2,s=t/e,a=t/2,o=[],l=[];for(let t=0,u=0,c=-a;t<=e;t++,c+=s){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);const e=t===i?n:r;e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3}const u=new ji;u.setAttribute("position",new Pi(o,3)),u.setAttribute("color",new Pi(l,3)),super(u,new Ql({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class mp extends lu{constructor(t=10,e=16,n=8,r=64,i=4473924,s=8947848){i=new Xn(i),s=new Xn(s);const a=[],o=[];for(let n=0;n<=e;n++){const r=n/e*(2*Math.PI),l=Math.sin(r)*t,u=Math.cos(r)*t;a.push(0,0,0),a.push(l,0,u);const c=1&n?i:s;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let e=0;e<=n;e++){const l=1&e?i:s,u=t-t/n*e;for(let t=0;t<r;t++){let e=t/r*(2*Math.PI),n=Math.sin(e)*u,i=Math.cos(e)*u;a.push(n,0,i),o.push(l.r,l.g,l.b),e=(t+1)/r*(2*Math.PI),n=Math.sin(e)*u,i=Math.cos(e)*u,a.push(n,0,i),o.push(l.r,l.g,l.b)}}const l=new ji;l.setAttribute("position",new Pi(a,3)),l.setAttribute("color",new Pi(o,3)),super(l,new Ql({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const gp=new ur,xp=new ur,yp=new ur;class vp extends hi{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new ji;r.setAttribute("position",new Pi([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new Ql({fog:!1,toneMapped:!1});this.lightPlane=new su(r,i),this.add(this.lightPlane),r=new ji,r.setAttribute("position",new Pi([0,0,0,0,0,1],3)),this.targetLine=new su(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){gp.setFromMatrixPosition(this.light.matrixWorld),xp.setFromMatrixPosition(this.light.target.matrixWorld),yp.subVectors(xp,gp),this.lightPlane.lookAt(xp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xp),this.targetLine.scale.z=yp.length()}}const bp=new ur,wp=new xs;class Sp extends lu{constructor(t){const e=new ji,n=new Ql({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],s={};function a(t,e){o(t),o(e)}function o(t){r.push(0,0,0),i.push(0,0,0),void 0===s[t]&&(s[t]=[]),s[t].push(r.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Pi(r,3)),e.setAttribute("color",new Pi(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new Xn(16755200),u=new Xn(16711680),c=new Xn(43775),h=new Xn(16777215),d=new Xn(3355443);this.setColors(l,u,c,h,d)}setColors(t,e,n,r,i){const s=this.geometry.getAttribute("color");s.setXYZ(0,t.r,t.g,t.b),s.setXYZ(1,t.r,t.g,t.b),s.setXYZ(2,t.r,t.g,t.b),s.setXYZ(3,t.r,t.g,t.b),s.setXYZ(4,t.r,t.g,t.b),s.setXYZ(5,t.r,t.g,t.b),s.setXYZ(6,t.r,t.g,t.b),s.setXYZ(7,t.r,t.g,t.b),s.setXYZ(8,t.r,t.g,t.b),s.setXYZ(9,t.r,t.g,t.b),s.setXYZ(10,t.r,t.g,t.b),s.setXYZ(11,t.r,t.g,t.b),s.setXYZ(12,t.r,t.g,t.b),s.setXYZ(13,t.r,t.g,t.b),s.setXYZ(14,t.r,t.g,t.b),s.setXYZ(15,t.r,t.g,t.b),s.setXYZ(16,t.r,t.g,t.b),s.setXYZ(17,t.r,t.g,t.b),s.setXYZ(18,t.r,t.g,t.b),s.setXYZ(19,t.r,t.g,t.b),s.setXYZ(20,t.r,t.g,t.b),s.setXYZ(21,t.r,t.g,t.b),s.setXYZ(22,t.r,t.g,t.b),s.setXYZ(23,t.r,t.g,t.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,n.r,n.g,n.b),s.setXYZ(33,n.r,n.g,n.b),s.setXYZ(34,n.r,n.g,n.b),s.setXYZ(35,n.r,n.g,n.b),s.setXYZ(36,n.r,n.g,n.b),s.setXYZ(37,n.r,n.g,n.b),s.setXYZ(38,r.r,r.g,r.b),s.setXYZ(39,r.r,r.g,r.b),s.setXYZ(40,i.r,i.g,i.b),s.setXYZ(41,i.r,i.g,i.b),s.setXYZ(42,i.r,i.g,i.b),s.setXYZ(43,i.r,i.g,i.b),s.setXYZ(44,i.r,i.g,i.b),s.setXYZ(45,i.r,i.g,i.b),s.setXYZ(46,i.r,i.g,i.b),s.setXYZ(47,i.r,i.g,i.b),s.setXYZ(48,i.r,i.g,i.b),s.setXYZ(49,i.r,i.g,i.b),s.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;wp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),_p("c",e,t,wp,0,0,-1),_p("t",e,t,wp,0,0,1),_p("n1",e,t,wp,-1,-1,-1),_p("n2",e,t,wp,1,-1,-1),_p("n3",e,t,wp,-1,1,-1),_p("n4",e,t,wp,1,1,-1),_p("f1",e,t,wp,-1,-1,1),_p("f2",e,t,wp,1,-1,1),_p("f3",e,t,wp,-1,1,1),_p("f4",e,t,wp,1,1,1),_p("u1",e,t,wp,.7,1.1,-1),_p("u2",e,t,wp,-.7,1.1,-1),_p("u3",e,t,wp,0,2,-1),_p("cf1",e,t,wp,-1,0,1),_p("cf2",e,t,wp,1,0,1),_p("cf3",e,t,wp,0,-1,1),_p("cf4",e,t,wp,0,1,1),_p("cn1",e,t,wp,-1,0,-1),_p("cn2",e,t,wp,1,0,-1),_p("cn3",e,t,wp,0,-1,-1),_p("cn4",e,t,wp,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function _p(t,e,n,r,i,s,a){bp.set(i,s,a).unproject(r);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],bp.x,bp.y,bp.z)}}const kp=new dr;class Ip extends lu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new ji;i.setIndex(new Ci(n,1)),i.setAttribute("position",new Ci(r,3)),super(i,new Ql({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&kp.setFromObject(this.object),kp.isEmpty())return;const e=kp.min,n=kp.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}}class Mp extends lu{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new ji;r.setIndex(new Ci(n,1)),r.setAttribute("position",new Pi([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Ql({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class Tp extends su{constructor(t,e=1,n=16776960){const r=n,i=new ji;i.setAttribute("position",new Pi([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere(),super(i,new Ql({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new ji;s.setAttribute("position",new Pi([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new cs(s,new Ii({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}}const Cp=new ur;let Ep,Ap;class Np extends hi{constructor(t=new ur(0,0,1),e=new ur(0,0,0),n=1,r=16776960,i=.2*n,s=.2*i){super(),this.type="ArrowHelper",void 0===Ep&&(Ep=new ji,Ep.setAttribute("position",new Pi([0,0,0,0,1,0],3)),Ap=new ju(0,.5,1,5,1),Ap.translate(0,-.5,0)),this.position.copy(e),this.line=new su(Ep,new Ql({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new cs(Ap,new Ii({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Cp.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Cp,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class Rp extends lu{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new ji;n.setAttribute("position",new Pi(e,3)),n.setAttribute("color",new Pi([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Ql({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const r=new Xn,i=this.geometry.attributes.color.array;return r.set(t),r.toArray(i,0),r.toArray(i,3),r.set(e),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Dp{constructor(){this.type="ShapePath",this.color=new Xn,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Wu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,s){return this.currentPath.bezierCurveTo(t,e,n,r,i,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new ec;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,s=0;s<n;i=s++){let n=e[i],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[i],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return r}const i=Mc.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let a,o,l;const u=[];if(1===s.length)return o=s[0],l=new ec,l.curves=o.curves,u.push(l),u;let c=!i(s[0].getPoints());c=t?!c:c;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let e=0,n=s.length;e<n;e++)o=s[e],p=o.getPoints(),a=i(p),a=t?!a:a,a?(!c&&d[g]&&g++,d[g]={s:new ec,p},d[g].s.curves=o.curves,c&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(s);if(d.length>1){let t=!1,e=0;for(let t=0,e=d.length;t<e;t++)h[t]=[];for(let n=0,i=d.length;n<i;n++){const i=m[n];for(let s=0;s<i.length;s++){const a=i[s];let o=!0;for(let i=0;i<d.length;i++)r(a.p,d[i].p)&&(n!==i&&e++,o?(o=!1,h[i].push(a)):t=!0);o&&h[n].push(a)}}e>0&&!1===t&&(m=h)}for(let t=0,e=d.length;t<e;t++){l=d[t].s,u.push(l),f=m[t];for(let t=0,e=f.length;t<e;t++)l.holes.push(f[t].h)}return u}}const Lp=Fp();function Fp(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),r=new Uint32Array(512),i=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(r[t]=0,r[256|t]=32768,i[t]=24,i[256|t]=24):e<-14?(r[t]=1024>>-e-14,r[256|t]=1024>>-e-14|32768,i[t]=-e-1,i[256|t]=-e-1):e<=15?(r[t]=e+15<<10,r[256|t]=e+15<<10|32768,i[t]=13,i[256|t]=13):e<128?(r[t]=31744,r[256|t]=64512,i[t]=24,i[256|t]=24):(r[t]=31744,r[256|t]=64512,i[t]=13,i[256|t]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;0==(8388608&e);)e<<=1,n-=8388608;e&=-8388609,n+=947912704,s[t]=e|n}for(let t=1024;t<2048;++t)s[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:n,baseTable:r,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:o}}var $p=Object.freeze({__proto__:null,toHalfFloat:function(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=In(t,-65504,65504),Lp.floatView[0]=t;const e=Lp.uint32View[0],n=e>>23&511;return Lp.baseTable[n]+((8388607&e)>>Lp.shiftTable[n])},fromHalfFloat:function(t){const e=t>>10;return Lp.uint32View[0]=Lp.mantissaTable[Lp.offsetTable[e]+(1023&t)]+Lp.exponentTable[e],Lp.floatView[0]}});class Pp extends ji{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class Op extends ji{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function zp(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function Bp(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function Up(){console.error("THREE.ImmediateRenderObject has been removed.")}class Wp extends nr{constructor(t,e,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(t,e,n),this.samples=4}}class Vp extends rr{constructor(t,e,n,r){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(t,e,n,r)}}class Gp extends sr{constructor(t,e,n,r){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(t,e,n,r)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:a}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=a);const Hp=new ur,jp=new lr,qp=new ur,Xp=new Br,Kp=new Br;class Yp{constructor(t={}){const e=this;let n,r,i,s;const a={camera:{fov:0,style:""},objects:new WeakMap},o=void 0!==t.element?t.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");function u(t){return Math.abs(t)<1e-10?0:t}function c(t){const e=t.elements;return"matrix3d("+u(e[0])+","+u(-e[1])+","+u(e[2])+","+u(e[3])+","+u(e[4])+","+u(-e[5])+","+u(e[6])+","+u(e[7])+","+u(e[8])+","+u(-e[9])+","+u(e[10])+","+u(e[11])+","+u(e[12])+","+u(-e[13])+","+u(e[14])+","+u(e[15])+")"}function h(t){const e=t.elements;return"translate(-50%,-50%)matrix3d("+u(e[0])+","+u(e[1])+","+u(e[2])+","+u(e[3])+","+u(-e[4])+","+u(-e[5])+","+u(-e[6])+","+u(-e[7])+","+u(e[8])+","+u(e[9])+","+u(e[10])+","+u(e[11])+","+u(e[12])+","+u(e[13])+","+u(e[14])+","+u(e[15])+")"}function d(t,n,r,i){if(t.isCSS3DObject){const i=!0===t.visible&&!0===t.layers.test(r.layers);if(t.element.style.display=!0===i?"":"none",!0===i){let i;t.onBeforeRender(e,n,r),t.isCSS3DSprite?(Xp.copy(r.matrixWorldInverse),Xp.transpose(),0!==t.rotation2D&&Xp.multiply(Kp.makeRotationZ(t.rotation2D)),t.matrixWorld.decompose(Hp,jp,qp),Xp.setPosition(Hp),Xp.scale(qp),Xp.elements[3]=0,Xp.elements[7]=0,Xp.elements[11]=0,Xp.elements[15]=1,i=h(Xp)):i=h(t.matrixWorld);const s=t.element,o=a.objects.get(t);if(void 0===o||o.style!==i){s.style.transform=i;const e={style:i};a.objects.set(t,e)}s.parentNode!==l&&l.appendChild(s),t.onAfterRender(e,n,r)}}for(let e=0,s=t.children.length;e<s;e++)d(t.children[e],n,r,i)}l.style.transformStyle="preserve-3d",l.style.pointerEvents="none",o.appendChild(l),this.getSize=function(){return{width:n,height:r}},this.render=function(t,e){const n=e.projectionMatrix.elements[5]*s;let r,h;a.camera.fov!==n&&(o.style.perspective=e.isPerspectiveCamera?n+"px":"",a.camera.fov=n),!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),e.isOrthographicCamera&&(r=-(e.right+e.left)/2,h=(e.top+e.bottom)/2);const p=e.isOrthographicCamera?"scale("+n+")translate("+u(r)+"px,"+u(h)+"px)"+c(e.matrixWorldInverse):"translateZ("+n+"px)"+c(e.matrixWorldInverse),f=p+"translate("+i+"px,"+s+"px)";a.camera.style!==f&&(l.style.transform=f,a.camera.style=f),d(t,t,e,p)},this.setSize=function(t,e){n=t,r=e,i=n/2,s=r/2,o.style.width=t+"px",o.style.height=e+"px",l.style.width=t+"px",l.style.height=e+"px"}}}class Zp{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Jp{refCount(t){return Qp("refCount")}incRef(t){return Qp("incRef")}timerAvailable(){return!0}time(t){return Qp("time")}read(t){return Qp("read")}readSync(t){return Qp("readSync")}readToGPU(t,e){return Qp("readToGPU")}numDataIds(){return Qp("numDataIds")}disposeData(t,e){return Qp("disposeData")}write(t,e,n){return Qp("write")}move(t,e,n,r,i){return Qp("move")}memory(){return Qp("memory")}floatPrecision(){return Qp("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Qp("dispose")}}function Qp(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function tf(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,rf(t,e,n)}function ef(t,e,n){return Math.max(t,Math.min(e,n))}function nf(t){return t%2==0?t:t+1}function rf(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function sf(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function af(t,e,n=""){sf(cf(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function of(t){sf(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function lf(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||wf(t)&&!n)for(let r=0;r<t.length;++r)lf(t[r],e,n);else e.push(t);return e}function uf(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function cf(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function hf(t){return t%1==0}function df(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function pf(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function ff(t,e=(t=>0),n,r=setTimeout){return new Promise(((i,s)=>{let a=0;const o=()=>{if(t())return void i();a++;const l=e(a);null!=n&&a>=n?s():r(o,l)};o()}))}function mf(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const i=t.slice();return i[r]=e/n,i}function gf(t,e){const n=e.length;return sf((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),sf(t.every((t=>hf(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function xf(t,e){const n=[],r=[],i=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||i?null:gf(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=s){if(s[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==s[a]||s[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),s[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function yf(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function vf(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function bf(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function wf(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function Sf(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function _f(t){return"string"==typeof t||t instanceof String}function kf(t){return"number"==typeof t}function If(t){return Array.isArray(t)?If(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":kf(t)?"float32":_f(t)?"string":"boolean"==typeof t?"bool":"float32"}function Mf(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Tf(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Cf(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Ef(t,e,n,r=!1){const i=new Array;if(1===e.length){const s=e[0]*(r?2:1);for(let e=0;e<s;e++)i[e]=n[t+e]}else{const s=e[0],a=e.slice(1),o=a.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<s;e++)i[e]=Ef(t+e*o,a,n,r)}return i}function Af(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return Ef(0,t,e,n)}function Nf(t,e){const n=Rf(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Rf(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Df(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Af(t,new Float32Array(n));if("int32"===e)return Af(t,new Int32Array(n));if("bool"===e)return Af(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Lf(t){t.forEach((e=>{sf(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ff(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function $f(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function Pf(t){return t&&t.then&&"function"==typeof t.then}class Of{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=zf,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(Bf().getBool("IS_TEST")||Bf().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];Bf().getBool("IS_TEST")||Bf().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Pf(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function zf(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function Bf(){return Wf}let Uf,Wf=null;function Vf(){if(null==Uf){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Uf=t}return Uf}function Gf(t,e){const n=function(){const t=Vf();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Hf="Abs",jf="Acos",qf="Acosh",Xf="Add",Kf="AddN",Yf="All",Zf="Any",Jf="ArgMax",Qf="ArgMin",tm="Asin",em="Asinh",nm="Atan",rm="Atanh",im="Atan2",sm="AvgPool",am="AvgPoolGrad",om="AvgPool3D",lm="AvgPool3DGrad",um="BatchMatMul",cm="BatchToSpaceND",hm="Bincount",dm="BroadcastArgs",pm="Cast",fm="Ceil",mm="ClipByValue",gm="Complex",xm="ComplexAbs",ym="Concat",vm="Conv2D",bm="Conv2DBackpropFilter",wm="Conv2DBackpropInput",Sm="Conv3D",_m="Conv3DBackpropFilterV2",km="Conv3DBackpropInputV2",Im="Cos",Mm="Cosh",Tm="Cumprod",Cm="Cumsum",Em="CropAndResize",Am="DenseBincount",Nm="DepthToSpace",Rm="DepthwiseConv2dNative",Dm="DepthwiseConv2dNativeBackpropFilter",Lm="DepthwiseConv2dNativeBackpropInput",Fm="Diag",$m="Dilation2D",Pm="Dilation2DBackpropInput",Om="Dilation2DBackpropFilter",zm="RealDiv",Bm="Einsum",Um="Elu",Wm="EluGrad",Vm="Erf",Gm="Equal",Hm="Exp",jm="ExpandDims",qm="Expm1",Xm="FFT",Km="Fill",Ym="FlipLeftRight",Zm="Floor",Jm="FloorDiv",Qm="FusedBatchNorm",tg="GatherV2",eg="GatherNd",ng="Greater",rg="GreaterEqual",ig="Identity",sg="IFFT",ag="Imag",og="IsFinite",lg="IsInf",ug="IsNan",cg="LeakyRelu",hg="Less",dg="LessEqual",pg="LinSpace",fg="Log",mg="Log1p",gg="LogicalAnd",xg="LogicalNot",yg="LogicalOr",vg="LRN",bg="LRNGrad",wg="Max",Sg="Maximum",_g="MaxPool",kg="MaxPoolGrad",Ig="MaxPool3D",Mg="MaxPool3DGrad",Tg="MaxPoolWithArgmax",Cg="Mean",Eg="Min",Ag="Minimum",Ng="MirrorPad",Rg="Mod",Dg="Multinomial",Lg="Multiply",Fg="Neg",$g="NotEqual",Pg="NonMaxSuppressionV3",Og="NonMaxSuppressionV4",zg="NonMaxSuppressionV5",Bg="OnesLike",Ug="OneHot",Wg="Pack",Vg="PadV2",Gg="Pow",Hg="Prelu",jg="Prod",qg="RaggedGather",Xg="RaggedTensorToTensor",Kg="Range",Yg="Real",Zg="Reciprocal",Jg="Relu",Qg="Reshape",tx="ResizeNearestNeighbor",ex="ResizeNearestNeighborGrad",nx="ResizeBilinear",rx="ResizeBilinearGrad",ix="Relu6",sx="Reverse",ax="Round",ox="Rsqrt",lx="ScatterNd",ux="SearchSorted",cx="Select",hx="Selu",dx="Slice",px="Sin",fx="Sinh",mx="Sign",gx="Sigmoid",xx="Softplus",yx="Sqrt",vx="Sum",bx="SpaceToBatchND",wx="SplitV",Sx="Softmax",_x="SparseFillEmptyRows",kx="SparseReshape",Ix="SparseSegmentMean",Mx="SparseSegmentSum",Tx="SparseToDense",Cx="SquaredDifference",Ex="Square",Ax="StridedSlice",Nx="StringNGrams",Rx="StringSplit",Dx="StringToHashBucketFast",Lx="Sub",Fx="Tan",$x="Tanh",Px="Tile",Ox="TopK",zx="Transform",Bx="Transpose",Ux="Unique",Wx="Unpack",Vx="UnsortedSegmentSum",Gx="ZerosLike",Hx="Step",jx="RotateWithOffset",qx="_FusedMatMul",Xx="FusedConv2D",Kx="FusedDepthwiseConv2D";function Yx(...t){Bf().getBool("IS_TEST")||Bf().getBool("PROD")||console.warn(...t)}function Zx(...t){Bf().getBool("IS_TEST")||Bf().getBool("PROD")||console.log(...t)}const Jx=Gf("kernelRegistry",(()=>new Map)),Qx=Gf("gradRegistry",(()=>new Map));function ty(t,e){const n=sy(t,e);return Jx.get(n)}function ey(t){return Qx.get(t)}function ny(t){const e=Jx.entries(),n=[];for(;;){const{done:r,value:i}=e.next();if(r)break;const[s,a]=i,[o]=s.split("_");o===t&&n.push(a)}return n}function ry(t){const{kernelName:e,backendName:n}=t,r=sy(e,n);Jx.has(r)&&Yx(`The kernel '${e}' for backend '${n}' is already registered`),Jx.set(r,t)}function iy(t){const{kernelName:e}=t;Qx.has(e)&&Bf().getBool("DEBUG")&&Yx(`Overriding the gradient for '${e}'`),Qx.set(e,t)}function sy(t,e){return`${e}_${t}`}var ay=n(720);const oy=n.n(ay)()||ay;function ly(t){return oy.fromString(t,!0,16)}const uy=ly("c3a5c85c97cb3127"),cy=ly("b492b66fbe98f273"),hy=ly("9ae16a3b2f90404f");function dy(t){return t.xor(t.shru(47))}function py(t,e,n){const r=t.slice(e,e+n);return oy.fromBytes(Array.from(r),!0,!0)}function fy(t,e){return py(t,e,8)}function my(t,e){return py(t,e,4)}function gy(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function xy(t,e,n=ly("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let i=e.xor(r).mul(n);return i=i.xor(i.shru(47)),i=i.mul(n),i}function yy(t,e,n,r){return function(t,e,n,r,i,s){i=i.add(t),s=gy(s.add(i).add(r),21);const a=i;return i=(i=i.add(e)).add(n),s=s.add(gy(i,44)),[i.add(r),s.add(a)]}(fy(t,e),fy(t,e+8),fy(t,e+16),fy(t,e+24),n,r)}function vy(t,e=t.length){const n=oy.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=hy.add(2*e),r=fy(t,0).add(hy),i=fy(t,e-8);return xy(gy(i,37).mul(n).add(r),gy(r,25).add(i).mul(n),n)}if(e>=4){const n=hy.add(2*e);return xy(my(t,0).shl(3).add(e),my(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return dy(hy.mul(n).xor(uy.mul(r))).mul(hy)}return hy}(t,e):function(t,e=t.length){const n=hy.add(2*e),r=fy(t,0).mul(cy),i=fy(t,8),s=fy(t,e-8).mul(n),a=fy(t,e-16).mul(hy);return xy(gy(r.add(i),43).add(gy(s,30)).add(a),r.add(gy(i.add(hy),18)).add(s),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=hy.add(2*e),r=fy(t,0).mul(hy),i=fy(t,8),s=fy(t,e-8).mul(n),a=fy(t,e-16).mul(hy),o=gy(r.add(i),43).add(gy(s,30)).add(a),l=xy(o,r.add(gy(i.add(hy),18)).add(s),n),u=fy(t,16).mul(n),c=fy(t,24),h=o.add(fy(t,e-32)).mul(n),d=l.add(fy(t,e-24)).mul(n);return xy(gy(u.add(c),43).add(gy(h,30)).add(d),u.add(gy(c.add(r),18)).add(h),n)}(t,e);let r=n,i=n.mul(cy).add(113),s=dy(i.mul(hy).add(113)).mul(hy),a=[oy.UZERO,oy.UZERO],o=[oy.UZERO,oy.UZERO];r=r.mul(hy).add(fy(t,0));let l=0;const u=64*(e-1>>6),c=u+(e-1&63)-63;do{r=gy(r.add(i).add(a[0]).add(fy(t,l+8)),37).mul(cy),i=gy(i.add(a[1]).add(fy(t,l+48)),42).mul(cy),r=r.xor(o[1]),i=i.add(a[0]).add(fy(t,l+40)),s=gy(s.add(o[0]),33).mul(cy),a=yy(t,l,a[1].mul(cy),r.add(o[0])),o=yy(t,l+32,s.add(o[1]),i.add(fy(t,l+16))),[s,r]=[r,s],l+=64}while(l!==u);const h=cy.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=gy(r.add(i).add(a[0]).add(fy(t,l+8)),37).mul(h),i=gy(i.add(a[1]).add(fy(t,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),i=i.add(a[0].mul(9).add(fy(t,l+40))),s=gy(s.add(o[0]),33).mul(h),a=yy(t,l,a[1].mul(h),r.add(o[0])),o=yy(t,l+32,s.add(o[1]),i.add(fy(t,l+16))),[s,r]=[r,s],xy(xy(a[0],o[0],h).add(dy(i).mul(uy)).add(s),xy(a[1],o[1],h).add(r),h)}function by(t,e){return"string"===e?_y(t):wy([t],e)}function wy(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=lf(t)),Bf().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Sy(){return Bf().platform.now()}function _y(t,e="utf-8"){return e=e||"utf-8",Bf().platform.encode(t,e)}function ky(t,e="utf-8"){return e=e||"utf-8",Bf().platform.decode(t,e)}class Iy{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Ty)}profileKernel(t,e,n){let r;const i=()=>{r=n()};let s;const a=Sy();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(i);else{i();for(const t of r)t.dataSync();s=Promise.resolve({kernelMs:Sy()-a})}if(Bf().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{My(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:i,extraInfo:s}=t;n.forEach((t=>{Promise.all([t.data(),r,s]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],i,n[2])}))}))}}function My(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ty{logKernelProfile(t,e,n,r,i,s){const a="number"==typeof r?pf(`${r}ms`,9):r.error,o=pf(t,25),l=e.rank,u=e.size,c=pf(e.shape.toString(),14);let h="";for(const t in i){const n=i[t];if(null!=n){const r=n.shape||e.shape,i=r.length;h+=`${t}: ${i}D ${i>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Cy(t,e,n,r){const i=Cf(e),s=function(t,e,n,r){const i=uf(e),s=r[r.length-1],a=new Array(s).fill(0),o=e.length,l="complex64"===n?Ry(t):t;if(o>1)for(let t=0;t<i/s;t++){const e=t*s;for(let t=0;t<s;t++)a[t]=Math.max(a[t],Ey(l[e+t],0,n).length)}return a}(t,e,n,i),a=e.length,o=Ny(t,e,n,i,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Ey(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:_f(t)?`'${t}'`:"bool"===n?Ay(t):parseFloat(t.toFixed(7)).toString(),pf(r,e)}function Ay(t){return 0===t?"false":"true"}function Ny(t,e,n,r,i,s=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Ey(Ry(t)[0],0,n)]:"bool"===n?[Ay(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=Ry(r),s=Ry(s)),["["+r.map(((t,e)=>Ey(t,i[e],n))).join(", ")+", ..., "+s.map(((t,e)=>Ey(t,i[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ry(t):Array.from(t)).map(((t,e)=>Ey(t,i[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,s=r+h;d.push(...Ny(t.slice(r,s),u,n,c,i,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,s=r+h;d.push(...Ny(t.slice(r,s),u,n,c,i,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,s=r+h;d.push(...Ny(t.slice(r,s),u,n,c,i,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Ry(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Dy{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=uf(t),null!=n){const t=n.length;sf(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||vf(e,this.size),this.strides=Cf(t)}set(t,...e){0===e.length&&(e=[0]),sf(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ly().makeTensor(this.values,this.shape,this.dtype)}}let Ly=null,Fy=null,$y=null;class Py{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=uf(t),this.strides=Cf(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Fy.buffer(this.shape,this.dtype,t)}bufferSync(){return Fy.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Af(this.shape,t,"complex64"===this.dtype)}arraySync(){return Af(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Ly().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>ky(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Ly().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Ly().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>ky(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Ly().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Ly().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Fy.print(this,t)}clone(){return this.throwIfDisposed(),Fy.clone(this)}toString(t=!1){return Cy(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Fy.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Ly().makeVariable(this,t,e,n)}}function Oy(){return Gf("Tensor",(()=>Py))}Object.defineProperty(Py,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Oy();class zy extends Py{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!cf(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ly().disposeTensor(this),this.dataId=t.dataId,Ly().incRef(this,null)}dispose(){Ly().disposeVariable(this),this.isDisposedInternal=!0}}var By,Uy,Wy,Vy,Gy;Object.defineProperty(zy,Symbol.hasInstance,{value:t=>t instanceof Py&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(By||(By={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Uy||(Uy={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Wy||(Wy={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Vy||(Vy={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Gy||(Gy={}));const Hy={float32:Vy,int32:Uy,bool:Wy,complex64:Gy};function jy(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Hy[t][e]}function qy(t){return jy(t,"int32")}function Xy(t,e){if(t.dtype===e.dtype)return[t,e];const n=jy(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Ky(t,e){return e.some((e=>e.id===t.id))}function Yy(t){const e=[];return Zy(t,e,new Set),e}function Zy(t,e,n){if(null==t)return;if(t instanceof Py)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const i=t;for(const t in i){const r=i[t];n.has(r)||(n.add(r),Zy(r,e,n))}}function Jy(t){return null!=t.kernelName}class Qy{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class tv{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Qy}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Yx(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Iy(this.backendInstance),!0}setupRegisteredKernels(){ny(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){ny(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Jp||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,Yx(`Initialization of backend ${t} failed`),Yx(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return Yx(`Initialization of backend ${t} failed`),Yx(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,i=this.readSync(e),s=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,i,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return tv.nextTensorId++}nextVariableId(){return tv.nextVariableId++}clone(t){const e=nv.runKernel(ig,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return nv.runKernel(pm,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==ty(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let i=0;n.forEach((t=>{i+="complex64"===t.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-i-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),i=this.state.numBytes,s=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Jy(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Jy(t)){const{kernelName:e,inputs:i,attrs:s}=t;null==this.backendName&&this.backend;const l=ty(e,this.backendName);sf(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:s,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(r){const t=this.getTensorsForGradient(e,i,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,i=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,i)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=Jy(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=a()})),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=ey(t);if(null!=r){const t=r.inputsToSave||[],i=r.outputsToSave||[];let s;r.saveAllInputs?(sf(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(e).map((t=>e[t]))):s=t.map((t=>e[t]));const a=n.filter(((t,e)=>i[e]));return s.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=t;"string"===n&&_f(t[0])&&(i=t.map((t=>_y(t))));const s=r.write(i,e,n),a=new Py(e,n,s,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(s),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(i);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const i={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:i}=t,s=new Py(r,i,n,this.nextTensorId());return this.trackTensor(s,e),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const i=new zy(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Sf(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof zy||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*Sf(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,i,s){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:i},o=ey(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=Rf(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],i,s))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Yy(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(sf(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));sf(i instanceof Py,(()=>"The result y returned by f() must be a tensor."));const s=function(t,e,n){const r={},i={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const s=t[n],a=s.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){s.outputs.forEach((t=>r[t.id]=!0)),o=!0,i[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(s[n.outputs[t].id]){for(const t in r)s[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(i[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const i=n.inputs[e];r[i.id]&&(t[e]=i)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,i);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[i.id]=null==n?function(t){const e=Nf(uf(t),"float32");return nv.makeTensor(e,t,"float32")}(i.shape):n,function(t,e,n,r){for(let i=e.length-1;i>=0;i--){const s=e[i],a=[];if(s.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const i=n((()=>o[e]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${i.dtype}'`);const a=s.inputs[e];if(!cf(i.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${i.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=i;else{const e=t[a.id];t[a.id]=r(e,i),e.dispose()}}}}(t,s,(t=>this.tidy(t)),rv);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:i,grads:r}}))}customGrad(t){return sf(Mf(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;sf(e.every((t=>t instanceof Py)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,i)=>(n=t(...e,i),sf(n.value instanceof Py,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),sf(Mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const i=n.gradFunc(t,r),s=Array.isArray(i)?i:[i];sf(s.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),sf(s.every((t=>t instanceof Py)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return s.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Sy(),n=await this.backend.time(t);return n.wallMs=Sy()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Qy;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ev(){const t=Vf();if(null==t._tfengine){const e=new Of(t);t._tfengine=new tv(e)}var e;return e=t._tfengine.ENV,Wf=e,Ly=()=>t._tfengine,t._tfengine}tv.nextTensorId=0,tv.nextVariableId=0;const nv=ev();function rv(t,e){const n={a:t,b:e};return nv.runKernel(Xf,n)}function iv(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function sv(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const av=Bf();function ov(t,e){let n=t;if(wf(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||wf(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Bf().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&lv(t,r,[]),r}function lv(t,e,n){if(n=n||[],!Array.isArray(t)&&!wf(t))return void sf(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));sf(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),sf(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)lv(t[e],r,n.concat(e))}function uv(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function cv(t,e,n,r="numeric"){if(t instanceof Py)return uv(r,t.dtype,e,n),t;let i=If(t);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),uv(r,i,e,n),null==t||!wf(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=ov(t,i);wf(t)||Array.isArray(t)||(t=[t]);const a="string"!==i?wy(t,i):lf(t,[],!0);return nv.makeTensor(a,s,i)}function hv(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,i)=>cv(t,`${e}[${i}]`,n,r)))}function dv(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...t)=>{nv.startScope(n);try{const e=r(...t);return Pf(e)&&console.error("Cannot return a Promise inside of tidy."),nv.endScope(e),e}catch(t){throw nv.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}av.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),av.registerFlag("IS_BROWSER",(()=>sv())),av.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),av.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),av.registerFlag("PROD",(()=>!1)),av.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>av.getBool("DEBUG"))),av.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),av.registerFlag("IS_TEST",(()=>!1)),av.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),av.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),av.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),av.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),av.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const pv=dv({complex_:function(t,e){const n=cv(t,"real","complex"),r=cv(e,"imag","complex");af(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:n,imag:r};return nv.runKernel(gm,i)}});function fv(t,e,n,r){if(null==r&&(r=If(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!wf(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Lf(e);const t=uf(e),r=uf(n);sf(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],i=t!==n.length-1||r!==uf(e.slice(t));sf(n[t]===e[t]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return wf(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?wy(t,r):lf(t,[],!0),nv.makeTensor(t,e,r)}function mv(t,e,n){return fv(t,e,ov(t,n),n)}async function gv(t,e){const n=[],r=[],i=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let s=0;s<i.length;++s){const a=i[s],o=Array.isArray(t)?t[s].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let i=0;for(let t=0;t<e.length;t++){const n=e[t],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,i),i+=4,r.set(n,i),i+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:xv(await Promise.all(r)),specs:n}}function xv(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let i=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),i),i+=t.byteLength})),r.buffer}const yv="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function vv(t){return yv?Buffer.byteLength(t):new Blob([t]).size}function bv(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function wv(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Sv(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:vv(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:vv(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class _v{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==_v.instance&&(_v.instance=new _v),_v.instance}static registerSaveRouter(t){_v.getInstance().saveRouters.push(t)}static registerLoadRouter(t){_v.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return _v.getHandlers(t,"save")}static getLoadHandlers(t,e){return _v.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?_v.getInstance().loadRouters:_v.getInstance().saveRouters).forEach((e=>{const i=e(t,n);null!==i&&r.push(i)})),r}}const kv="tensorflowjs",Iv="models_store",Mv="model_info_store";function Tv(){if(!Bf().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Cv(t){const e=t.result;e.createObjectStore(Iv,{keyPath:"modelPath"}),e.createObjectStore(Mv,{keyPath:"modelPath"})}class Ev{constructor(t){if(this.indexedDB=Tv(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(kv,1);r.onupgradeneeded=()=>Cv(r),r.onsuccess=()=>{const i=r.result;if(null==e){const e=i.transaction(Iv,"readonly"),r=e.objectStore(Iv).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(i.close(),n(r.error)),e.oncomplete=()=>i.close()}else{const r=Sv(e),s=i.transaction(Mv,"readwrite");let a=s.objectStore(Mv);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=i.transaction(Iv,"readwrite");const o=l.objectStore(Iv).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=s.objectStore(Mv);const e=a.delete(this.modelPath);e.onsuccess=()=>(i.close(),n(o.error)),e.onerror=t=>(i.close(),n(o.error))}},o.onerror=t=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}}},r.onerror=t=>n(r.error)}))}}Ev.URL_SCHEME="indexeddb://";const Av=t=>{return Bf().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ev.URL_SCHEME)?(e=t.slice(Ev.URL_SCHEME.length),new Ev(e)):null;var e};_v.registerSaveRouter(Av),_v.registerLoadRouter(Av);class Nv{constructor(){this.indexedDB=Tv()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(kv,1);n.onupgradeneeded=()=>Cv(n),n.onsuccess=()=>{const r=n.result,i=r.transaction(Mv,"readonly"),s=i.objectStore(Mv).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),i.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Ev.URL_SCHEME)?e.slice(Ev.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(kv,1);r.onupgradeneeded=()=>Cv(r),r.onsuccess=()=>{const i=r.result,s=i.transaction(Mv,"readwrite"),a=s.objectStore(Mv),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),s=()=>{l=i.transaction(Iv,"readwrite");const r=l.objectStore(Iv).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),i.close(),n(o.error))}},o.onerror=t=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},r.onerror=t=>n(r.error)}))}}const Rv="/",Dv="tensorflowjs_models",Lv="info",Fv="model_topology",$v="weight_specs",Pv="weight_data",Ov="model_metadata";function zv(t){return{info:[Dv,t,Lv].join(Rv),topology:[Dv,t,Fv].join(Rv),weightSpecs:[Dv,t,$v].join(Rv),weightData:[Dv,t,Pv].join(Rv),modelMetadata:[Dv,t,Ov].join(Rv)}}function Bv(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Uv(t){const e=t.split(Rv);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Rv)}class Wv{constructor(t){if(!Bf().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=zv(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Sv(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(yv)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(t){throw Bv(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const t=JSON.parse(i);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(yv){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(s),e}}Wv.URL_SCHEME="localstorage://";const Vv=t=>{return Bf().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Wv.URL_SCHEME)?(e=t.slice(Wv.URL_SCHEME.length),new Wv(e)):null;var e};_v.registerSaveRouter(Vv),_v.registerLoadRouter(Vv);class Gv{constructor(){sf(Bf().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),sf("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Dv+Rv,n=Rv+Lv;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);i.startsWith(e)&&i.endsWith(n)&&(t[Uv(i)]=JSON.parse(this.LS.getItem(i)))}return t}async removeModel(t){var e;const n=zv(t=(e=t).startsWith(Wv.URL_SCHEME)?e.slice(Wv.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return Bv(n),r}}class Hv{constructor(){this.managers={}}static getInstance(){return null==Hv.instance&&(Hv.instance=new Hv),Hv.instance}static registerManager(t,e){sf(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),sf(t.length>0,(()=>"scheme must not be an empty string."));const n=Hv.getInstance();sf(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=Hv.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Hv.getInstance().managers)}}class jv{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&Bf().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(t,e)}}if(Bf().get("IS_BROWSER")){Bf().setPlatform("browser",new jv);try{Hv.registerManager(Wv.URL_SCHEME,new Gv)}catch(t){}try{Hv.registerManager(Ev.URL_SCHEME,new Nv)}catch(t){}}let qv;function Xv(t,e="float32",n){return e=e||"float32",Lf(t),new Dy(t,e,n)}Bf().get("IS_NODE")&&!Bf().get("IS_BROWSER")&&Bf().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Bf().global.fetch?Bf().global.fetch(t,e):(null==qv&&(qv=n(410)),qv(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Kv=dv({cast_:function(t,e){const n=cv(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},i={dtype:e};return nv.runKernel(pm,r,i)}}),Yv=dv({clone_:function(t){const e={x:cv(t,"x","clone","string_or_numeric")};return nv.runKernel(ig,e)}});function Zv(t){return new Promise((t=>setTimeout(t))).then(t)}ev(),Fy={buffer:Xv,cast:Kv,clone:Yv,print:function(t,e=!1){console.log(t.toString(e))}};class Jv{constructor(t){if(!Bf().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Jv.URL_SCHEME)&&(t=t.slice(Jv.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=wv(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await Zv((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Zv((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Sv(t)}}}}function Qv(t,e,n,r){!function(t){sf(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){sf(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),sf(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),sf(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(t.map((s=>(s.then((s=>{const a=n+ ++i/t.length*(r-n);return e(a),s})),s))))}async function tb(t,e){null==e&&(e={});const n=null==e.fetchFunc?Bf().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),i=(null==e.onProgress?await Promise.all(r):await Qv(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(i):await Qv(i,e.onProgress,.5,1)}Jv.URL_SCHEME="downloads://",_v.registerSaveRouter((t=>Bf().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Jv.URL_SCHEME)?function(t="model"){return new Jv(t)}(t.slice(Jv.URL_SCHEME.length)):null));class eb{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(sf("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Bf().platform.fetch,sf(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&sf(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=wv(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Sv(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(t,e){let n,r;return null!=t.weightsManifest&&([n,r]=await e(t.weightsManifest)),function(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),r}(t,n,r)}(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),i=this.weightPathPrefix||n,s=function(t){const e=[];for(const n of t)e.push(...n.weights);return e}(t),a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(i+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[s,bv(await tb(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function nb(t){return null!=t.match(eb.URL_SCHEME_REGEX)}eb.URL_SCHEME_REGEX=/^https?:\/\//;const rb=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>nb(t))):nb(t),n)return function(t,e){return new eb(t,e)}(t,e)}return null};function ib(t,e){const n=t.length,r=[];for(let i=0;i<n;i++){const s=n-1-i,a=t[s]||1;(e[e.length-1-i]||1)>1&&1===a&&r.unshift(s)}return r}function sb(t,e){const n=[];for(let r=0;r<e.length;r++){const i=t[t.length-r-1],s=e.length-r-1,a=e[s];(null==i||1===i&&a>1)&&n.unshift(s)}return n}function ab(t,e){const n=[],r=Math.max(t.length,e.length);for(let i=0;i<r;i++){let r=t[t.length-i-1];null==r&&(r=1);let s=e[e.length-i-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function ob(t,e,n){const r=t.shape.length;sf(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),sf(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let i=0;i<r;++i)sf(e[i]+n[i]<=t.shape[i],(()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${e[i]+n[i]}) would overflow input.shape[${i}] (${t.shape[i]})`))}function lb(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function ub(t,e,n){const r=[];for(let i=0;i<t.length;i++)r[i]=Math.ceil((e[i]-t[i])/n[i]);return r}function cb(t,e,n,r){const i=[...t];for(let t=i.length;t<r.length;t++)i.push(1);for(let t=0;t<n;t++)0===t?i[e]=1:(i.splice(e,0,1),i.pop());return i}function hb(t,e,n){return n<=t?n:n-(e-1)}function db(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function pb(t,e,n,r,i,s,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=fb(a,l,u,r,t),h=mb(o,l,u,i,t),d=cb(s,l,u,t)}else for(let e=0;e<u;e++)c[e]=xb(a,r,s,t,e,l),h[e]=yb(o,i,s,t,e,l),d[e]=gb(s,e,l);return{begin:c,end:h,strides:d}}function fb(t,e,n,r,i){const s=[...i],a=db(n,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{const a=hb(e,n,i);let o=r[a];t&1<<a&&(o=0),s[i]=o}return s}function mb(t,e,n,r,i){const s=[...i],a=db(n,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const a=hb(e,n,i);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let t=0;t<s.length;t++){const e=i[t];s[t]<0&&(s[t]+=e),s[t]=ef(0,s[t],i[t])}return s}function gb(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function xb(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=ef(0,a,l-1),a}function yb(t,e,n,r,i,s){let a=e[i];const o=n[i]||1;(t&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=o>0?ef(0,a,l):ef(-1,a,l-1),a}function vb(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function bb(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function wb(t,e,n){let r;const i=t.shape.length;let s;return r="number"==typeof e?[e,...new Array(i-1).fill(0)]:e.length<i?e.concat(new Array(i-e.length).fill(0)):e.slice(),r.forEach((t=>{sf(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(sf(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,s]}function Sb(t,e,n,r,i,s,a,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<h.dims;t++)c&&0!=(1<<t&o)&&h.numAddAxisAfterEllipsis++,1<<t&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const i=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<i;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let e=0;e<t.length;++e){if(0===d.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<e),r=t[e];if(-1===r){g.push(n?1:-1);continue}const i=[d.beginMask&1<<e,d.endMask&1<<e],s=[d.strides[e]>0?0:-1,d.strides[e]>0?r:r-1];if(n&&d.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[e];const a=!!(d.beginMask&1<<e&&d.endMask&1<<e);if(d.beginValid&&d.endValid){if(n){const t=d.begin[e]<0?r+d.begin[e]:d.begin[e];if(d.begin[e]=t,d.end[e]=d.begin[e]+1,t<0||t>=r)throw Error(`slice index ${d.begin[e]} of dimension ${e} out of bounds.`)}else d.begin[e]=_b(d.begin[e],0,d.strides[e],r,i,s),d.end[e]=_b(d.end[e],1,d.strides[e],r,i,s);const t=1===d.strides[e]&&0===d.begin[e]&&d.end[e]===r;p=p&&t,f=f&&(0===e&&1===d.strides[e]||t)}else p=p&&1===d.strides[e]&&a,f=f&&(0===e&&1===d.strides[e]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[e]-d.begin[e],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=d.strides[e]<0?-r:r,l=!0),l){let t;t=0===o||o<0!=d.strides[e]<0?0:Math.trunc(o/d.strides[e])+(o%d.strides[e]!=0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<d.finalShapeGatherIndices.length;++t){const e=d.finalShapeGatherIndices[t];e>=0?x.push(g[e]):-2===e&&x.push(1)}return{finalShapeSparse:x.filter(((t,e)=>-2!==d.finalShapeGatherIndices[e])),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function _b(t,e,n,r,i,s){if(i[e])return n>0?s[e]:s[e+1&1];{const e=t<0?r+t:t;return e<s[0]?s[0]:e>s[1]?s[1]:e}}_v.registerSaveRouter(rb),_v.registerLoadRouter(rb);class kb{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ib{constructor(){this.classNameMap={}}static getMap(){return null==Ib.instance&&(Ib.instance=new Ib),Ib.instance}static register(t){Ib.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Mb(t){sf(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),sf("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),sf(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ib.register(t)}function Tb(){return nv}function Cb(){return nv.memory()}function Eb(t,e){return nv.tidy(t,e)}function Ab(t){Yy(t).forEach((t=>t.dispose()))}function Nb(t){return nv.keep(t)}function Rb(t,e,n=1){return nv.registerBackend(t,e,n)}function Db(){return nv.backend}function Lb(t){return nv.customGrad(t)}function Fb(t,e){if((wf(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&wf(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return fv(t,[],[],e)}$y=function(t){Bf().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class $b extends kb{minimize(t,e=!1,n){const{value:r,grads:i}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:i[t.name]})));this.applyGradients(t)}else this.applyGradients(i);return Ab(i),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){sf(Mf(t),(()=>"The f passed in variableGrads(f) must be a function")),sf(null==e||Array.isArray(e)&&e.every((t=>t instanceof zy)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in nv.registeredVariables)e.push(nv.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,i=e.length;sf((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:s,grads:a}=nv.gradients(t,e,null,!0);sf(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),sf(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:s,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Ab(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Fb(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty($b,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Pb=dv({abs_:function(t){const e=cv(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return nv.runKernel(xm,t)}{const t={x:e};return nv.runKernel(Hf,t)}}}),Ob=dv({add_:function(t,e){let n=cv(t,"a","add"),r=cv(e,"b","add");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Xf,i)}}),zb=dv({all_:function(t,e=null,n=!1){const r={x:cv(t,"x","all","bool")},i={axis:e,keepDims:n};return nv.runKernel(Yf,r,i)}}),Bb=dv({any_:function(t,e=null,n=!1){const r={x:cv(t,"x","any","bool")},i={axis:e,keepDims:n};return nv.runKernel(Zf,r,i)}}),Ub=dv({argMax_:function(t,e=0){const n={x:cv(t,"x","argMax")},r={axis:e};return nv.runKernel(Jf,n,r)}});function Wb(t,e,n,r,i="NHWC",s){return Hb(t,[...e,t[3]],n,s,r,null,null,tw(i))}function Vb(t,e,n,r,i,s,a="channelsLast"){const[o,l]=Xb(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Hb(t,u,n,r,i,s,!1,a)}function Gb(t,e,n,r,i,s,a="NDHWC"){const[o,l,u]=Kb(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return jb(t,c,n,r,i,!1,h,s)}function Hb(t,e,n,r,i,s,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=Xb(n),[x,y]=Xb(r),v=Yb(d,x),b=Yb(p,y),{padInfo:w,outHeight:S,outWidth:_}=function(t,e,n,r,i,s,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,i){null==r&&(r=qb(t,e,n));const s=t[1];return[Zb((t[0]-e+2*r)/n+1,i),Zb((s-e+2*r)/n+1,i)]}([e,n],s,r,t,o);c=i[0],h=i[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/i);const t=Math.max(0,(c-1)*r+s-e),o=Math.max(0,(h-1)*i+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/r),h=Math.ceil((n-a+1)/i);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Zb((e-s+d+p)/r+1,o),h=Zb((n-a+f+m)/i+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(i,u,c,m,g,v,b,s,o),k=a?f*h:f;let I;return"channelsFirst"===o?I=[l,k,S,_]:"channelsLast"===o&&(I=[l,S,_,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:_,outChannels:k,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:t,outShape:I,filterShape:e}}function jb(t,e,n,r,i,s=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[x,y,v]=Kb(n),[b,w,S]=Kb(r),_=Yb(p,b),k=Yb(f,w),I=Yb(m,S),{padInfo:M,outDepth:T,outHeight:C,outWidth:E}=function(t,e,n,r,i,s,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,i,s){null==i&&(i=qb(t,e,r));const a=t[1],o=t[2];return[Zb((t[0]-e+2*i)/r+1,s),Zb((a-e+2*i)/r+1,s),Zb((o-e+2*i)/r+1,s),1]}([e,n,r,1],o,0,i,t,c);d=s[0],p=s[1],f=s[2]}else if("same"===t){d=Math.ceil(e/i),p=Math.ceil(n/s),f=Math.ceil(r/a);const t=(d-1)*i+o-e,c=(p-1)*s+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),x=t-g,y=Math.floor(c/2),v=c-y,b=Math.floor(m/2);h={top:y,bottom:v,left:b,right:m-b,front:g,back:x,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/i),p=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(i,u,c,h,x,y,v,_,k,I,o),A=s?g*d:g;let N;return"channelsFirst"===a?N=[l,A,T,C,E]:"channelsLast"===a&&(N=[l,T,C,E,A]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:C,outWidth:E,outChannels:A,padInfo:M,strideDepth:x,strideHeight:y,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:_,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:t,outShape:N,filterShape:e}}function qb(t,e,n,r=1){const i=Yb(e,r);return Math.floor((t[0]*(n-1)-n+i)/2)}function Xb(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Kb(t){return"number"==typeof t?[t,t,t]:t}function Yb(t,e){return e<=1?t:t+(t-1)*(e-1)}function Zb(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Jb(t){const[e,n,r]=Xb(t);return 1===e&&1===n&&1===r}function Qb(t,e){return Jb(t)||Jb(e)}function tw(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function ew(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)sf(hf(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{sf(hf(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const nw=dv({reshape_:function(t,e){const n={x:cv(t,"x","reshape","string_or_numeric")},r={shape:e};return nv.runKernel(Qg,n,r)}}),rw=dv({avgPool_:function(t,e,n,r,i){const s=cv(t,"x","avgPool","float32");sf(Qb(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=s,o=!1;3===s.rank&&(o=!0,a=nw(s,[1,s.shape[0],s.shape[1],s.shape[2]])),sf(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),ew("avgPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i};let c=nv.runKernel(sm,l,u);return c=Kv(c,s.dtype),o?nw(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),iw=dv({avgPool3d_:function(t,e,n,r,i,s="NDHWC"){const a=cv(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=nw(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),sf(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),sf("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ew("avgPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s};let h=nv.runKernel(om,u,c);return h=Kv(h,o.dtype),l?nw(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),sw=dv({batchNorm_:function(t,e,n,r,i,s){null==s&&(s=.001);const a=cv(t,"x","batchNorm"),o=cv(e,"mean","batchNorm"),l=cv(n,"variance","batchNorm");let u,c;null!=i&&(u=cv(i,"scale","batchNorm")),null!=r&&(c=cv(r,"offset","batchNorm")),sf(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),sf(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),sf(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?nw(t,[1,1,1,t.size]):2===t.rank?nw(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?nw(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:s},f=nv.runKernel(Qm,d,p);return nw(f,a.shape)}}),aw=dv({batchNorm2d_:function(t,e,n,r,i,s){const a=cv(t,"x","batchNorm"),o=cv(e,"mean","batchNorm"),l=cv(n,"variance","batchNorm");let u,c;return null!=i&&(u=cv(i,"scale","batchNorm")),null!=r&&(c=cv(r,"offset","batchNorm")),sf(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),sf(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),sf(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&sf(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&sf(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),sw(a,o,l,c,u,s)}}),ow=dv({batchNorm3d_:function(t,e,n,r,i,s){const a=cv(t,"x","batchNorm"),o=cv(e,"mean","batchNorm"),l=cv(n,"variance","batchNorm");let u,c;return null!=i&&(u=cv(i,"scale","batchNorm")),null!=r&&(c=cv(r,"offset","batchNorm")),sf(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),sf(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),sf(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&sf(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&sf(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),sw(a,o,l,c,u,s)}}),lw=dv({batchNorm4d_:function(t,e,n,r,i,s){const a=cv(t,"x","batchNorm"),o=cv(e,"mean","batchNorm"),l=cv(n,"variance","batchNorm");let u,c;return null!=i&&(u=cv(i,"scale","batchNorm")),null!=r&&(c=cv(r,"offset","batchNorm")),sf(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),sf(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),sf(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&sf(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&sf(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),sw(a,o,l,c,u,s)}}),uw=dv({broadcastTo_:function(t,e){let n=cv(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=nw(n,t)}const i=n.shape,s=Array.from(e);for(let t=e.length-1;t>=0;t--)if(i[t]===e[t])s[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===s.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Yv(n);const a={x:n},o={reps:s};return nv.runKernel(Px,a,o)}});function cw(t,e,n){const r={shape:t,value:e,dtype:n};return nv.runKernel(Km,{},r)}const hw=dv({clipByValue_:function(t,e,n){const r=cv(t,"x","clipByValue");if(sf(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`)),e===n)return cw(r.shape,e,r.dtype);const i={x:r},s={clipValueMin:e,clipValueMax:n};return nv.runKernel(mm,i,s)}}),dw=dv({concat_:function(t,e=0){sf(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=hv(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Yv(n[0]);const r=n,i={axis:e};return nv.runKernel(ym,r,i)}}),pw=dv({concat1d_:function(t){return dw(t,0)}}),fw=dv({concat2d_:function(t,e){return dw(t,e)}}),mw=dv({concat3d_:function(t,e){return dw(t,e)}}),gw=dv({concat4d_:function(t,e){return dw(t,e)}}),xw=dv({conv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=cv(t,"x","conv2d","float32"),l=cv(e,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=nw(o,[1,o.shape[0],o.shape[1],o.shape[2]])),sf(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),sf(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ew("conv2d",r,a);const h="NHWC"===i?u.shape[3]:u.shape[1];sf(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),sf(Qb(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=nv.runKernel(vm,d,p);return c?nw(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),yw=dv({conv1d_:function(t,e,n,r,i="NWC",s=1,a){const o=cv(t,"x","conv1d"),l=cv(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=nw(o,[1,o.shape[0],o.shape[1]])),sf(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),sf(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ew("conv1d",r,a),sf(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),sf(Qb(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),sf("NWC"===i,(()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`));const h=nw(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=nw(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=xw(d,h,[1,n],r,"NHWC",[1,s],a);return nw(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),vw=dv({conv2DBackpropInput_:function(t,e,n,r,i,s="NHWC",a){sf(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=nw(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),sf(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),sf(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),sf(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];sf(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),sf(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),ew("conv2dDerInput",i,a);const d={dy:l,filter:n},p={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,inputShape:o},f=nv.runKernel(wm,d,p);return u?nw(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bw=dv({conv2dTranspose_:function(t,e,n,r,i,s){const a=cv(t,"x","conv2dTranspose"),o=cv(e,"filter","conv2dTranspose");return vw(n,a,o,r,i,"NHWC",s)}}),ww=dv({conv3d_:function(t,e,n,r,i="NDHWC",s=[1,1,1]){const a=cv(t,"x","conv3d"),o=cv(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=nw(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),sf(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),sf(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),sf(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),sf(Qb(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),sf("NDHWC"===i,(()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:i,dilations:s},d=nv.runKernel(Sm,c,h);return u?nw(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Sw=dv({conv3DBackpropInput_:function(t,e,n,r,i){sf(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let s=t,a=e,o=!1;4===e.rank&&(o=!0,a=nw(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const l=s[4],u=a.shape[4];sf(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),sf(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),sf(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),sf(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),sf(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:i,strides:r,inputShape:s},d=nv.runKernel(km,c,h);return o?nw(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),_w=dv({conv3dTranspose_:function(t,e,n,r,i){const s=cv(t,"x","conv3dTranspose"),a=cv(e,"filter","conv3dTranspose");return Sw(n,s,a,r,i)}}),kw=dv({depthwiseConv2d_:function(t,e,n,r,i="NHWC",s=[1,1],a){const o=cv(t,"x","depthwiseConv2d","float32"),l=cv(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=nw(o,[1,o.shape[0],o.shape[1],o.shape[2]])),sf(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),sf(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===i?u.shape[3]:u.shape[1];sf(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ew("depthwiseConv2d",r,a);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=nv.runKernel(Rm,d,p);return c?nw(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Iw=dv({floorDiv_:function(t,e){let n=cv(t,"a","floorDiv"),r=cv(e,"b","floorDiv");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Jm,i)}}),Mw=dv({div_:function(t,e){let n=cv(t,"a","div"),r=cv(e,"b","div");if([n,r]=Xy(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Iw(n,r);const i={a:n,b:r};return nv.runKernel(zm,i,{})}}),Tw=dv({elu_:function(t){const e={x:cv(t,"x","elu","float32")};return nv.runKernel(Um,e)}}),Cw=dv({equal_:function(t,e){let n=cv(t,"a","equal","string_or_numeric"),r=cv(e,"b","equal","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(Gm,i)}}),Ew=dv({exp_:function(t){const e={x:cv(t,"x","exp")};return nv.runKernel(Hm,e)}}),Aw=dv({expandDims_:function(t,e=0){const n=cv(t,"x","expandDims","string_or_numeric");sf(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},i={dim:e};return nv.runKernel(jm,r,i)}}),Nw=dv({tile_:function(t,e){const n=cv(t,"x","tile","string_or_numeric");sf(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},i={reps:e};return nv.runKernel(Px,r,i)}}),Rw=dv({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const i=Xv([t,e],r),s=t<=e?t:e;for(let t=0;t<s;++t)i.set(1,t,t);const a=nw(i.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Nw(Aw(a,0),[n[0],1,1]);if(2===n.length)return Nw(Aw(Aw(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Nw(Aw(Aw(Aw(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Dw=dv({floor_:function(t){const e={x:cv(t,"x","floor","float32")};return nv.runKernel(Zm,e)}}),Lw=dv({gather_:function(t,e,n=0,r=0){const i={x:cv(t,"x","gather"),indices:cv(e,"indices","gather","int32")},s={axis:n,batchDims:r};return nv.runKernel(tg,i,s)}}),Fw=dv({greater_:function(t,e){let n=cv(t,"a","greater","string_or_numeric"),r=cv(e,"b","greater","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(ng,i)}}),$w=dv({greaterEqual_:function(t,e){let n=cv(t,"a","greaterEqual","string_or_numeric"),r=cv(e,"b","greaterEqual","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(rg,i)}}),Pw=dv({leakyRelu_:function(t,e=.2){const n={x:cv(t,"x","leakyRelu")},r={alpha:e};return nv.runKernel(cg,n,r)}}),Ow=dv({log_:function(t){const e={x:cv(t,"x","log","float32")};return nv.runKernel(fg,e)}}),zw=dv({log1p_:function(t){const e={x:cv(t,"x","log1p")};return nv.runKernel(mg,e)}}),Bw=dv({max_:function(t,e=null,n=!1){const r={x:cv(t,"x","max")},i={reductionIndices:e,keepDims:n};return nv.runKernel(wg,r,i)}}),Uw=dv({mul_:function(t,e){let n=cv(t,"a","mul"),r=cv(e,"b","mul");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Lg,i)}}),Ww=dv({sub_:function(t,e){let n=cv(t,"a","sub"),r=cv(e,"b","sub");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Lx,i)}}),Vw=dv({sum_:function(t,e=null,n=!1){let r=cv(t,"x","sum");"bool"===r.dtype&&(r=Kv(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return nv.runKernel(vx,i,s)}}),Gw=dv({logSoftmax_:function(t,e=-1){const n=cv(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=Lb(((t,n)=>{const r=Bw(t,e,!0),i=Ww(t,r),s=Ww(Kv(i,"float32"),Ow(Vw(Ew(i),e,!0)));return n([s]),{value:s,gradFunc:(t,n)=>{const[r]=n,i=Ew(r);return Ww(t,Uw(Vw(t,e,!0),i))}}}));return r(n)}}),Hw=dv({logicalAnd_:function(t,e){const n=cv(t,"a","logicalAnd","bool"),r=cv(e,"b","logicalAnd","bool");ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(gg,i)}}),jw=dv({matMul_:function(t,e,n=!1,r=!1){let i=cv(t,"a","matMul"),s=cv(e,"b","matMul");[i,s]=Xy(i,s);const a={a:i,b:s},o={transposeA:n,transposeB:r};return nv.runKernel(um,a,o)}}),qw=dv({maxPool_:function(t,e,n,r,i){const s=cv(t,"x","maxPool");let a=s,o=!1;3===s.rank&&(o=!0,a=nw(s,[1,s.shape[0],s.shape[1],s.shape[2]])),sf(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),sf(Qb(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ew("maxPool",r,i);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:i},c=nv.runKernel(_g,l,u);return o?nw(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Xw=dv({maxPool3d_:function(t,e=[1,1,1],n,r,i,s="NDHWC"){const a=cv(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=nw(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),sf(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),sf("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ew("maxPool3d",r,i);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:s},h=nv.runKernel(Ig,u,c);return l?nw(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Kw=dv({maximum_:function(t,e){let n=cv(t,"a","maximum"),r=cv(e,"b","maximum");[n,r]=Xy(n,r),"bool"===n.dtype&&(n=Kv(n,"int32"),r=Kv(r,"int32")),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(Sg,i)}}),Yw=dv({mean_:function(t,e=null,n=!1){const r={x:cv(t,"x","mean")},i={axis:e,keepDims:n};return nv.runKernel(Cg,r,i)}}),Zw=dv({minimum_:function(t,e){let n=cv(t,"a","minimum"),r=cv(e,"b","minimum");[n,r]=Xy(n,r),"bool"===n.dtype&&(n=Kv(n,"int32"),r=Kv(r,"int32")),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(Ag,i)}});function Jw(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Qw(t,e,n){const r=t.length+e.length,i=[];let s=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?i.push(t[s++]):i.push(e[a++]);return i}function tS(t,e){const n=[],r=t.length;for(let i=0;i<r;i++)-1===e.indexOf(i)&&n.push(t[i]);return[n,e.map((e=>t[e]))]}function eS(t,e){return Qw(t,e.map((t=>1)),e)}function nS(t,e,n){sf(Jw(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function rS(t,e){if(Jw(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function iS(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function sS(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const aS=dv({square_:function(t){const e=cv(t,"x","square");return nv.runKernel("Square",{x:e},{})}}),oS=dv({moments_:function(t,e=null,n=!1){const r=gf(e,(t=cv(t,"x","moments")).shape),i=Yw(t,r,n);let s=i.shape;n||(s=eS(i.shape,r));const a=aS(Ww(Kv(t,"float32"),nw(i,s)));return{mean:i,variance:Yw(a,r,n)}}}),lS=dv({neg_:function(t){const e={x:cv(t,"x","neg")};return nv.runKernel(Fg,e)}}),uS=dv({notEqual_:function(t,e){let n=cv(t,"a","notEqual","string_or_numeric"),r=cv(e,"b","notEqual","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel($g,i)}}),cS=dv({oneHot_:function(t,e,n=1,r=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:cv(t,"indices","oneHot","int32")},a={dtype:i,depth:e,onValue:n,offValue:r};return nv.runKernel(Ug,s,a)}});function hS(t,e="float32"){if("complex64"===e){const e=hS(t,"float32"),n=hS(t,"float32");return pv(e,n)}const n=Rf(uf(t),e);return nv.makeTensor(n,t,e)}function dS(t,e="float32"){if("complex64"===e){const e=dS(t,"float32"),n=hS(t,"float32");return pv(e,n)}const n=Nf(uf(t),e);return nv.makeTensor(n,t,e)}const pS=dv({onesLike_:function(t){const e={x:cv(t,"x","onesLike")};return nv.runKernel(Bg,e)}}),fS=dv({pad_:function(t,e,n=0){const r=cv(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},s={x:r};return nv.runKernel(Vg,s,i)}}),mS=dv({prelu_:function(t,e){const n={x:cv(t,"x","prelu"),alpha:cv(e,"alpha","prelu")};return nv.runKernel(Hg,n)}});var gS=n(377);class xS{constructor(t,e,n,r,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=i||Math.random();this.random=gS.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,i,s;do{r=2*this.random()-1,i=2*this.random()-1,s=r*r+i*i}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*i*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class yS{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=gS.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const vS=dv({randomNormal_:function(t,e=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new xS(e,n,r,!1,i),a=Xv(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=s.nextValue();return a.toTensor()}}),bS=dv({randomUniform_:function(t,e=0,n=1,r="float32",i){const s=Xv(t,r),a=new yS(e,n,null,i);for(let t=0;t<s.values.length;t++)s.values[t]=a.nextValue();return s.toTensor()}}),wS=dv({relu_:function(t){const e={x:cv(t,"x","relu")};return nv.runKernel(Jg,e)}}),SS=dv({reverse_:function(t,e){const n={x:cv(t,"x","reverse")},r={dims:e};return nv.runKernel(sx,n,r)}}),_S=dv({selu_:function(t){const e={x:cv(t,"x","selu")};return nv.runKernel(hx,e)}}),kS=dv({separableConv2d_:function(t,e,n,r,i,s=[1,1],a="NHWC"){const o=cv(t,"x","separableConv2d"),l=cv(e,"depthwiseFilter","separableConv2d"),u=cv(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=nw(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");sf(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),sf(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),sf(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),sf(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),sf(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];sf(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=kw(c,l,r,i,a,s),m=xw(f,u,1,"valid",a);return h?nw(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),IS=dv({sigmoid_:function(t){const e={x:cv(t,"x","sigmoid","float32")};return nv.runKernel(gx,e)}}),MS=dv({slice_:function(t,e,n){const r=cv(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},s={begin:e,size:n};return nv.runKernel(dx,i,s)}}),TS=dv({slice1d_:function(t,e,n){const r=cv(t,"x","slice1d");return sf(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),MS(r,[e],[n])}}),CS=dv({slice2d_:function(t,e,n){const r=cv(t,"x","slice2d");return sf(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),MS(r,e,n)}}),ES=dv({slice3d_:function(t,e,n){const r=cv(t,"x","slice3d");return sf(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),MS(r,e,n)}}),AS=dv({slice4d_:function(t,e,n){const r=cv(t,"x","slice4d");return sf(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),MS(r,e,n)}}),NS=dv({softmax_:function(t,e=-1){const n=cv(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},i={dim:e};return nv.runKernel(Sx,r,i)}}),RS=dv({softplus_:function(t){const e={x:cv(t,"x","softplus")};return nv.runKernel(xx,e)}}),DS=dv({split_:function(t,e,n=0){const r={x:cv(t,"x","split")},i={numOrSizeSplits:e,axis:n};return nv.runKernel(wx,r,i)}}),LS=dv({sqrt_:function(t){const e={x:cv(t,"x","sqrt","float32")};return nv.runKernel(yx,e)}}),FS=dv({squeeze_:function(t,e){const n=cv(t,"x","squeeze","string_or_numeric");return nw(n,xf(n.shape,e).newShape)}}),$S=dv({stack_:function(t,e=0){const n=hv(t,"tensors","stack","string_or_numeric");sf(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&sf(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,i={axis:e};return nv.runKernel(Wg,r,i)}}),PS=dv({tanh_:function(t){const e={x:cv(t,"x","tanh","float32")};return nv.runKernel($x,e)}});function OS(t,e){of(t);const n=ov(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return fv(t,null,n,e)}const zS=dv({truncatedNormal_:function(t,e=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new xS(e,n,r,!0,i),a=Xv(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=s.nextValue();return a.toTensor()}}),BS=dv({unstack_:function(t,e=0){const n=cv(t,"x","unstack","string_or_numeric");sf(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},i={axis:e};return nv.runKernel(Wx,r,i)}}),US=dv({where_:function(t,e,n){const r=cv(e,"a","where"),i=cv(n,"b","where"),s=cv(t,"condition","where","bool"),a=ab(ab(s.shape,r.shape),i.shape),o={condition:uw(s,a),t:uw(r,a),e:uw(i,a)};return nv.runKernel(cx,o)}}),WS=dv({zerosLike_:function(t){const e={x:cv(t,"x","zerosLike")};return nv.runKernel(Gx,e)}}),VS=dv({imag_:function(t){const e={input:cv(t,"input","imag")};return nv.runKernel(ag,e)}}),GS=dv({real_:function(t){const e={input:cv(t,"input","real")};return nv.runKernel(Yg,e)}}),HS=dv({transpose_:function(t,e,n){const r=cv(t,"x","transpose");if(null==e&&(e=r.shape.map(((t,e)=>e)).reverse()),sf(r.rank===e.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`)),e.forEach((t=>{sf(t>=0&&t<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${e}`))})),r.rank<=1)return r.clone();const i={x:r},s={perm:e};return"complex64"===r.dtype?Eb((()=>{let t=GS(r),e=VS(r);return t=nv.runKernel(Bx,{x:t},s),e=nv.runKernel(Bx,{x:e},s),n&&(e=lS(e)),pv(t,e)})):nv.runKernel(Bx,i,s)}}),jS=dv({dropout_:function(t,e,n,r){const i=cv(t,"x","dropout");if(sf("float32"===i.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`)),sf(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Py?i.clone():i;const s=function(t,e){if(null==e)return t.shape.slice();if(cf(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(i,n),a=1-e,o=Mw(Dw(Ob(bS(s,0,1,"float32",r),a)),a);return Uw(i,o)}}),qS=dv({fft_:function(t){sf("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return nv.runKernel(Xm,e)}}),XS=dv({rfft_:function(t,e){sf("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let i;if(null!=e&&e<n){const r=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,i=MS(t,r,s),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,i=dw([t,hS(r)],t.shape.length-1),n=e}else i=t;const s=WS(i),a=nw(pv(i,s),[r,n]),o=qS(a),l=Math.floor(n/2)+1,u=GS(o),c=VS(o),h=DS(u,[l,n-l],u.shape.length-1),d=DS(c,[l,n-l],c.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,nw(pv(h[0],d[0]),p)}}),KS=dv({ifft_:function(t){sf("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return nv.runKernel(sg,e)}}),YS=dv({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const i=nw(t,[n,e]);r=KS(i)}else{const i=[n,2*(e-1)],s=nw(GS(t),[n,e]),a=nw(VS(t),[n,e]),o=SS(MS(s,[0,1],[n,e-2]),1),l=Uw(SS(MS(a,[0,1],[n,e-2]),1),Fb(-1)),u=dw([s,o],1),c=dw([a,l],1),h=nw(pv(u,c),[i[0],i[1]]);r=KS(h)}if(r=GS(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=nw(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),ZS=dv({conv2DBackpropFilter_:function(t,e,n,r,i,s="NHWC",a){let o=t;3===t.rank&&(o=nw(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=nw(e,[1,e.shape[0],e.shape[1],e.shape[2]])),sf(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),sf(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),sf(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];sf(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),sf(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),ew("conv2dDerFilter",i,a);const h={x:o,dy:l},d={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,filterShape:n};return nv.runKernel(bm,h,d)}}),JS=dv({relu6_:function(t){const e={x:cv(t,"x","relu6")};return nv.runKernel(ix,e)}}),QS=dv({step_:function(t,e=0){const n={x:cv(t,"x","step")},r={alpha:e};return nv.runKernel(Hx,n,r)}});function t_(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Uw(t,QS(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function e_(t,e){let n=e;const r=sb(t.shape,e.shape);return r.length>0&&(n=Vw(n,r)),nw(n,t.shape)}function n_(t,e,n,r){if("linear"===e)return t;if("relu"===e)return wS(t);if("elu"===e)return Tw(t);if("relu6"===e)return JS(t);if("prelu"===e)return mS(t,n);if("leakyrelu"===e)return Pw(t,r);if("sigmoid"===e)return IS(t);throw new Error(`Unknown fused activation ${e}.`)}const r_=(t,e)=>!(t>0)||"linear"===e,i_=dv({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===r_(nv.state.gradientDepth,l)){sf("NHWC"===i,(()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=xw(t,e,n,r,i,s,a);return null!=o&&(h=Ob(h,o)),n_(h,l,u,c)}const h=cv(t,"x","conv2d","float32"),d=cv(e,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=nw(h,[1,h.shape[0],h.shape[1],h.shape[2]])),sf(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),sf(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),ew("fused conv2d",r,a);const m="NHWC"===i?p.shape[3]:p.shape[1];sf(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),sf(Qb(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const g=Hb(p.shape,d.shape,n,s,r,a);let x,y;if(null!=o&&(x=cv(o,"bias","fused conv2d"),[x]=Xy(x,h),"NHWC"===i?ab(g.outShape,x.shape):(sf(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),sf(0===x.shape.length||x.shape[0]===g.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const t=u.shape;if(sf(t.length<=1||3===t.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`)),1===t.length)sf(1===t[0]||t[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===t.length)try{ab(t,g.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=cv(u,"prelu weights","fused conv2d")}const v=(t,e)=>{sf("NHWC"===i,(()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`));const[a,o,u,c]=e,h=t_(t,u,l);sf(Jb(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[vw(o.shape,h,a,n,r),ZS(o,h,a.shape,n,r)];if(null!=c){const t=e_(c,h);d.push(t)}return d},b={x:p,filter:d,bias:x,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Lb(((t,e,n)=>{let r=nv.runKernel(Xx,b,w);return n([e,t,r]),f&&(r=nw(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return t(p,d)}{const t=Lb(((t,e,n,r)=>{let i=nv.runKernel(Xx,b,w);return r([e,t,i,n]),f&&(i=nw(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:v}}));return t(p,d,x)}}}),s_=dv({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,i,s=[1,1],a){let o=t;3===t.rank&&(o=nw(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=nw(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,filterShape:n};return nv.runKernel(Dm,u,c)}}),a_=dv({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,i,s=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=nw(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,inputShape:t},h=nv.runKernel(Lm,u,c);return l?nw(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});dv({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===r_(nv.state.gradientDepth,l)){let h=kw(t,e,n,r,i,s,a);return null!=o&&(h=Ob(h,o)),n_(h,l,u,c)}const h=cv(t,"x","depthwiseConv2d","float32"),d=cv(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=nw(h,[1,h.shape[0],h.shape[1],h.shape[2]])),sf(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),sf(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),sf(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),sf(Qb(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ew("fused depthwiseConv2d",r,a);const m=Hb(p.shape,d.shape,n,s,r,a,!0);let g,x;null!=o&&(g=cv(o,"bias","fused conv2d"),[g]=Xy(g,h),ab(m.outShape,g.shape)),null!=u&&(x=cv(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{sf(Jb(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[i,o,u,c]=e,h=t_(t,u,l),d=a_(o.shape,h,i,n,r,s,a),p=s_(o,h,i.shape,n,r,s,a);return null!=c?[d,p,e_(g,h)]:[d,p]},v={x:p,filter:d,bias:g,preluActivationWeights:x},b={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Lb(((t,e,n)=>{let r=nv.runKernel(Kx,v,b);return n([e,t,r]),f&&(r=nw(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(p,d)}{const t=Lb(((t,e,n,r)=>{let i=nv.runKernel(Kx,v,b);return r([e,t,i,n]),f&&(i=nw(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:y}}));return t(p,d,g)}}});const o_=dv({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===r_(nv.state.gradientDepth,s)){let l=jw(t,e,n,r);return null!=i&&(l=Ob(l,i)),n_(l,s,a,o)}let l=cv(t,"a","fused matMul"),u=cv(e,"b","fused matMul");[l,u]=Xy(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=uf(f),x=uf(m);sf(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=ab(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),v=nw(l,n?[g,c,d]:[g,d,c]),b=nw(u,r?[x,p,h]:[x,h,p]);let w,S;null!=i&&(w=cv(i,"bias","fused matMul"),[w]=Xy(w,l),ab(y,w.shape)),null!=a&&(S=cv(a,"prelu weights","fused matMul"));const _=(t,e)=>{const[a,o,l,u]=e,c=t_(nw(t,l.shape),l,s);let h,d;return n||r?!n&&r?(h=jw(c,o,!1,!1),d=jw(c,a,!0,!1)):n&&!r?(h=jw(o,c,!1,!0),d=jw(a,c,!1,!1)):(h=jw(o,c,!0,!0),d=jw(c,a,!0,!0)):(h=jw(c,o,!1,!0),d=jw(a,c,!0,!1)),null!=i?[h,d,e_(u,c)]:[h,d]},k={a:v,b,bias:w,preluActivationWeights:S},I={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==i){const t=Lb(((t,e,n)=>{const r=nv.runKernel(qx,k,I);return n([t,e,r]),{value:nw(r,y),gradFunc:_}}));return t(v,b)}{const t=Lb(((t,e,n,r)=>{const i=nv.runKernel(qx,k,I);return r([t,e,i,n]),{value:nw(i,y),gradFunc:_}}));return t(v,b,w)}}});function l_(t,e,n){const r=1-t%2,i=new Float32Array(t);for(let s=0;s<t;++s){const a=2*Math.PI*s/(t+r-1);i[s]=e-n*Math.cos(a)}return OS(i,"float32")}dv({hammingWindow_:function(t){return l_(t,.54,.46)}});const u_=dv({hannWindow_:function(t){return l_(t,.5,.5)}});function c_(t,e,n){if(of(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ov(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return fv(t,e,r,n)}const h_=dv({frame_:function(t,e,n,r=!1,i=0){let s=0;const a=[];for(;s+e<=t.size;)a.push(MS(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=dw([MS(t,s,e-r),cw([r],i)]);a.push(o),s+=n}return 0===a.length?c_([],[0,e]):nw(dw(a),[a.length,e])}});dv({stft_:function(t,e,n,r,i=u_){var s;null==r&&(s=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const a=h_(t,e,n),o=Uw(a,i(e));return XS(o,r)}});const d_=dv({cropAndResize_:function(t,e,n,r,i="bilinear",s=0){const a=cv(t,"image","cropAndResize"),o=cv(e,"boxes","cropAndResize","float32"),l=cv(n,"boxInd","cropAndResize","int32"),u=o.shape[0];sf(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),sf(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),sf(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),sf(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),sf(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),sf("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const c={image:a,boxes:o,boxInd:l},h={method:i,extrapolationValue:s,cropSize:r};return nv.runKernel(Em,c,h)}}),p_=dv({flipLeftRight_:function(t){const e=cv(t,"image","flipLeftRight","float32");sf(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return nv.runKernel(Ym,n,{})}}),f_=dv({grayscaleToRGB_:function(t){const e=cv(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];sf(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),sf(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const i=new Array(e.rank);return i.fill(1,0,n),i[n]=3,Nw(e,i)}}),m_=dv({rotateWithOffset_:function(t,e,n=0,r=.5){const i=cv(t,"image","rotateWithOffset","float32");sf(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const s={image:i},a={radians:e,fillValue:n,center:r};return nv.runKernel(jx,s,a)}});function g_(t,e,n,r,i,s){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=t.shape[0];return n=Math.min(n,a),sf(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),sf(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),sf(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),sf(1===e.rank,(()=>"scores must be a 1D tensor")),sf(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),sf(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:s}}const x_=dv({nonMaxSuppression_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=cv(t,"boxes","nonMaxSuppression","float32"),a=cv(e,"scores","nonMaxSuppression","float32"),o=g_(s,a,n,r,i),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return nv.runKernel(Pg,{boxes:s,scores:a},l)}});function y_(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,i=t.length,s=0,a=!1;for(;r<i;){s=r+(i-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(i=s,a=!o)}return a?r:-r-1}(t,e,n||v_)}(t,e,n),i=r<0?-(r+1):r;t.splice(i,0,e)}function v_(t,e){return t>e?1:t<e?-1:0}function b_(t,e,n,r,i){return __(t,e,n,r,i,0)}function w_(t,e,n,r,i,s){return __(t,e,n,r,i,0,!1,s,!0)}function S_(t,e,n,r,i,s){return __(t,e,n,r,i,s,!0)}function __(t,e,n,r,i,s,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>i&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(M_);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=e;if(n<i)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=k_(t,s,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*I_(r,c,a),e.score<=i)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(s),d.push(e.score)):e.score>i&&y_(u,e,M_))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function k_(t,e,n){const r=t.subarray(4*e,4*e+4),i=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(o-s)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(a,c),x=Math.min(o,h),y=Math.min(l,d),v=Math.max(x-m,0)*Math.max(y-g,0);return v/(p+f-v)}function I_(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function M_(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const T_=dv({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=cv(t,"boxes","nonMaxSuppression"),o=cv(e,"scores","nonMaxSuppression"),l=g_(a,o,n,r,i,s),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:i=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=nv.runKernel(zg,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),C_=dv({nonMaxSuppressionPadded_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=cv(t,"boxes","nonMaxSuppression"),o=cv(e,"scores","nonMaxSuppression"),l=g_(a,o,n,r,i,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=nv.runKernel(Og,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),E_=dv({resizeBilinear_:function(t,e,n=!1,r=!1){const i=cv(t,"images","resizeBilinear");sf(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),sf(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),sf(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=i,a=!1;3===i.rank&&(a=!0,s=nw(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=nv.runKernel(nx,o,l);return a?nw(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),A_=dv({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const i=cv(t,"images","resizeNearestNeighbor");sf(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),sf(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),sf("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),sf(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=i,a=!1;3===i.rank&&(a=!0,s=nw(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:e},u=nv.runKernel(tx,o,l);return a?nw(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),N_=dv({bincount_:function(t,e,n){const r=cv(t,"x","bincount"),i=cv(e,"weights","bincount");sf("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),sf(n>=0,(()=>`size must be non-negative, but got ${n}.`)),sf(i.size===r.size||0===i.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`));const s={x:r,weights:i},a={size:n};return nv.runKernel(hm,s,a)}}),R_=dv({lessEqual_:function(t,e){let n=cv(t,"a","lessEqual","string_or_numeric"),r=cv(e,"b","lessEqual","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(dg,i)}}),D_=dv({round_:function(t){const e={x:cv(t,"x","round")};return nv.runKernel(ax,e)}});function L_(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:r};return nv.runKernel(Kg,{},i)}const F_=dv({threshold_:function(t,e="binary",n=!1,r=.5){const i=cv(t,"image","threshold"),s=i.shape[0]*i.shape[1];let a,o,l,u,c=Uw(OS([r]),255);if(sf(3===i.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`)),sf(3===i.shape[2]||1===i.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`)),sf("int32"===i.dtype||"float32"===i.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`)),sf("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===i.shape[2]){[a,o,l]=DS(i,[1,1,1],-1);const t=Uw(a,.2989),e=Uw(o,.587),n=Uw(l,.114);u=Ob(Ob(t,e),n)}else u=t;"otsu"===e&&(c=function(t,e){let n,r,i,s,a,o,l=OS([-1]),u=OS([0]),c=OS([0]);for(let h=0;h<t.size-1;h++){n=MS(t,0,h+1),r=MS(t,h+1),a=Mw(Vw(n),e),o=Mw(Vw(r),e);const d=Vw(Uw(n,L_(0,n.size)));i=Mw(d,Vw(n));const p=cw(r.shape,n.size),f=Ob(L_(0,r.size),p),m=Uw(r,f);s=Mw(Vw(m),Vw(r));const g=Ww(i,s),x=Ww(i,s),y=Uw(a,o);c=Uw(Uw(y,g),x);const v=Fw(c,u);u=US(v,c,u),l=US(v,OS([h]),l)}return l}(N_(Kv(D_(u),"int32"),mv([]),256),s));const h=n?R_(u,c):Fw(u,c);return Kv(Uw(h,255),"int32")}}),$_=dv({transform_:function(t,e,n="nearest",r="constant",i=0,s){const a=cv(t,"image","transform","float32"),o=cv(e,"transforms","transform","float32");sf(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),sf(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),sf(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:i,outputShape:s};return nv.runKernel(zx,l,u)}}),P_=dv({bandPart_:function(t,e,n){sf(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),sf(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=cv(t,"a","bandPart");sf(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const i=r.shape,[s,a]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),n<0&&(n=a);const o=nw(L_(0,s,1,"int32"),[-1,1]),l=L_(0,a,1,"int32"),u=Ww(o,l),c=Hw(R_(u,Fb(+e,"int32")),$w(u,Fb(-n,"int32"))),h=hS([s,a],r.dtype);return nw($S(BS(nw(r,[-1,s,a])).map((t=>US(c,t,h)))),i)}}),O_=dv({min_:function(t,e=null,n=!1){const r={x:cv(t,"x","min")},i={axis:e,keepDims:n};return nv.runKernel(Eg,r,i)}}),z_=dv({pow_:function(t,e){let n=cv(t,"base","pow"),r=cv(e,"exp","pow");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Gg,i)}});function B_(t,e,n=null){if(0===t.rank)return Pb(t);if(1!==t.rank&&null===n)return B_(nw(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Vw(Pb(t),n);if(e===1/0)return Bw(Pb(t),n);if(e===-1/0)return O_(Pb(t),n);if("euclidean"===e||2===e)return LS(Vw(z_(Pb(t),Fb(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Bw(Vw(Pb(t),n[0]),n[1]-1);if(e===1/0)return Bw(Vw(Pb(t),n[1]),n[0]);if(e===-1/0)return O_(Vw(Pb(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return LS(Vw(aS(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const U_=dv({norm_:function(t,e="euclidean",n=null,r=!1){const i=B_(t=cv(t,"x","norm"),e,n);let s=i.shape;if(r){const e=gf(n,t.shape);s=eS(i.shape,e)}return nw(i,s)}}),W_=dv({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,sf(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)sf(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=DS(t,t.shape[0],0).map((t=>FS(t,[0])));sf(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(nv.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Uw(Vw(Uw(n[r],t)),n[r]);t=Ww(t,e)}return Mw(t,U_(t,"euclidean"))})));return e?$S(n,0):n}});function V_(t,e=!1){return nv.tidy((()=>{sf(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let i=Rw(n),s=Yv(t);const a=c_([[1]],[1,1]);let o=Yv(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=s,l=o,u=i;[o,s,i]=nv.tidy((()=>{const e=MS(s,[t,t],[n-t,1]),l=U_(e),u=MS(s,[t,t],[1,1]),c=US(Fw(u,0),c_([[-1]]),c_([[1]])),h=Ww(u,Uw(c,l)),d=Mw(e,h);o=1===d.shape[0]?Yv(a):dw([a,MS(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=lS(Mw(jw(c,h),l)),f=MS(s,[t,0],[n-t,r]),m=Uw(p,o),g=HS(o);if(0===t)s=Ww(f,jw(m,jw(g,f)));else{const e=Ww(f,jw(m,jw(g,f)));s=dw([MS(s,[0,0],[t,r]),e],0)}const x=HS(m),y=MS(i,[0,t],[n,i.shape[1]-t]);if(0===t)i=Ww(y,jw(jw(y,o),x));else{const e=Ww(y,jw(jw(y,o),x));i=dw([MS(i,[0,0],[n,t]),e],1)}return[o,s,i]})),Ab([e,l,u])}return!e&&n>r&&(i=MS(i,[0,0],[n,r]),s=MS(s,[0,0],[r,r])),[i,s]}))}const G_=dv({qr_:function(t,e=!1){if(sf(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return V_(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=BS(nw(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),i=[],s=[];return r.forEach((t=>{const[n,r]=V_(t,e);i.push(n),s.push(r)})),[nw($S(i,0),t.shape),nw($S(s,0),t.shape)]}}});var H_;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(H_||(H_={}));const j_=dv({computeWeightedLoss_:function(t,e,n=H_.SUM_BY_NONZERO_WEIGHTS){const r=cv(t,"losses","computeWeightedLoss");let i=null;null!=e&&(i=cv(e,"weights","computeWeightedLoss"));const s=null==i?r:Uw(r,i);if(n===H_.NONE)return s;if(n===H_.SUM)return Vw(s);if(n===H_.MEAN){if(null==i)return Yw(s);{const t=r.size/i.size,e=Mw(Vw(s),Vw(i));return t>1?Mw(e,Fb(t)):e}}if(n===H_.SUM_BY_NONZERO_WEIGHTS){if(null==i)return Mw(Vw(s),Fb(r.size));{const t=Uw(i,dS(r.shape)),e=Kv(Vw(uS(t,Fb(0))),"float32");return Mw(Vw(s),e)}}throw Error(`Unknown reduction: ${n}`)}});dv({absoluteDifference_:function(t,e,n,r=H_.SUM_BY_NONZERO_WEIGHTS){const i=cv(t,"labels","absoluteDifference"),s=cv(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=cv(n,"weights","absoluteDifference")),af(i.shape,s.shape,"Error in absoluteDifference: ");const o=Pb(Ww(i,s));return j_(o,a,r)}}),dv({cosineDistance_:function(t,e,n,r,i=H_.SUM_BY_NONZERO_WEIGHTS){const s=cv(t,"labels","cosineDistance"),a=cv(e,"predictions","cosineDistance");let o=null;null!=r&&(o=cv(r,"weights","cosineDistance")),af(s.shape,a.shape,"Error in cosineDistance: ");const l=Fb(1),u=Ww(l,Vw(Uw(s,a),n,!0));return j_(u,o,i)}}),dv({hingeLoss_:function(t,e,n,r=H_.SUM_BY_NONZERO_WEIGHTS){let i=cv(t,"labels","hingeLoss");const s=cv(e,"predictions","hingeLoss");let a=null;null!=n&&(a=cv(n,"weights","hingeLoss")),af(i.shape,s.shape,"Error in hingeLoss: ");const o=Fb(1);i=Ww(Uw(Fb(2),i),o);const l=wS(Ww(o,Uw(i,s)));return j_(l,a,r)}}),dv({huberLoss_:function(t,e,n,r=1,i=H_.SUM_BY_NONZERO_WEIGHTS){const s=cv(t,"labels","huberLoss"),a=cv(e,"predictions","huberLoss");let o=null;null!=n&&(o=cv(n,"weights","huberLoss")),af(s.shape,a.shape,"Error in huberLoss: ");const l=Fb(r),u=Pb(Ww(a,s)),c=Zw(u,l),h=Ww(u,c),d=Ob(Uw(Fb(.5),aS(c)),Uw(l,h));return j_(d,o,i)}}),dv({logLoss_:function(t,e,n,r=1e-7,i=H_.SUM_BY_NONZERO_WEIGHTS){const s=cv(t,"labels","logLoss"),a=cv(e,"predictions","logLoss");let o=null;null!=n&&(o=cv(n,"weights","logLoss")),af(s.shape,a.shape,"Error in logLoss: ");const l=Fb(1),u=Fb(r),c=lS(Uw(s,Ow(Ob(a,u)))),h=Uw(Ww(l,s),Ow(Ob(Ww(l,a),u))),d=Ww(c,h);return j_(d,o,i)}});const q_=dv({squaredDifference_:function(t,e){let n=cv(t,"a","squaredDifference"),r=cv(e,"b","squaredDifference");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(Cx,i,{})}});dv({meanSquaredError_:function(t,e,n,r=H_.SUM_BY_NONZERO_WEIGHTS){const i=cv(t,"labels","meanSquaredError"),s=cv(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=cv(n,"weights","meanSquaredError")),af(i.shape,s.shape,"Error in meanSquaredError: ");const o=q_(i,s);return j_(o,a,r)}}),dv({sigmoidCrossEntropy_:function(t,e,n,r=0,i=H_.SUM_BY_NONZERO_WEIGHTS){let s=cv(t,"multiClassLabels","sigmoidCrossEntropy");const a=cv(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=cv(n,"weights","sigmoidCrossEntropy")),af(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Fb(r),e=Fb(1),n=Fb(.5);s=Ob(Uw(s,Ww(e,t)),Uw(n,t))}const l=function(t,e){const n=cv(t,"labels","sigmoidCrossEntropyWithLogits"),r=cv(e,"logits","sigmoidCrossEntropyWithLogits");af(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=wS(r),s=Uw(r,n),a=zw(Ew(lS(Pb(r))));return Ob(Ww(i,s),a)}(s,a);return j_(l,o,i)}});const X_=dv({logSumExp_:function(t,e=null,n=!1){const r=cv(t,"x","logSumExp"),i=gf(e,r.shape),s=Bw(r,i,!0),a=Ww(r,s),o=Ew(a),l=Vw(o,i),u=Ow(l),c=Ob(nw(s,u.shape),u);if(n){const t=eS(c.shape,i);return nw(c,t)}return c}});dv({softmaxCrossEntropy_:function(t,e,n,r=0,i=H_.SUM_BY_NONZERO_WEIGHTS){let s=cv(t,"onehotLabels","softmaxCrossEntropy");const a=cv(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=cv(n,"weights","softmaxCrossEntropy")),af(s.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Fb(r),e=Fb(1),n=Fb(s.shape[1]);s=Ob(Uw(s,Ww(e,t)),Mw(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const r=Lb(((t,e,r)=>{const i=X_(e,[n],!0),s=Ww(Kv(e,"float32"),i);r([t,s]);const a=lS(Uw(s,t));return{value:Vw(a,[n]),gradFunc:(t,e)=>{const[r,i]=e,s=eS(t.shape,[n]);return[Uw(nw(t,s),Ww(Kv(r,"float32"),Ew(i))),Uw(nw(t,s),Ww(Ew(i),Kv(r,"float32")))]}}}));return r(t,e)}(s,a);return j_(l,o,i)}}),dv({sparseFillEmptyRows_:function(t,e,n,r){const i=cv(t,"indices","sparseFillEmptyRows","int32"),s=cv(e,"values","sparseFillEmptyRows"),a=cv(n,"denseShape","sparseFillEmptyRows","int32"),o=cv(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==i.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${i.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:i,values:s,denseShape:a,defaultValue:o},u=nv.runKernel(_x,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),dv({sparseReshape_:function(t,e,n){const r=cv(t,"inputIndices","sparseReshape","int32"),i=cv(e,"inputShape","sparseReshape","int32"),s=cv(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const a={inputIndices:r,inputShape:i,newShape:s},o=nv.runKernel(kx,a);return{outputIndices:o[0],outputShape:o[1]}}}),dv({sparseSegmentMean_:function(t,e,n){const r=cv(t,"data","sparseSegmentMean"),i=cv(e,"indices","sparseSegmentMean","int32"),s=cv(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${i.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const a={data:r,indices:i,segmentIds:s};return nv.runKernel(Ix,a)}}),dv({sparseSegmentSum_:function(t,e,n){const r=cv(t,"data","sparseSegmentSum"),i=cv(e,"indices","sparseSegmentSum","int32"),s=cv(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${i.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const a={data:r,indices:i,segmentIds:s};return nv.runKernel(Mx,a)}}),dv({stringNGrams_:function(t,e,n,r,i,s,a,o){const l=cv(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=cv(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:i,rightPad:s,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=nv.runKernel(Nx,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),dv({stringSplit_:function(t,e,n=!0){const r=cv(t,"input","stringSplit","string"),i=cv(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==i.rank)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const s={skipEmpty:n},a={input:r,delimiter:i},o=nv.runKernel(Rx,a,s);return{indices:o[0],values:o[1],shape:o[2]}}}),dv({stringToHashBucketFast_:function(t,e){const n=cv(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const i={input:n};return nv.runKernel(Dx,i,r)}});const K_={flipLeftRight:p_,grayscaleToRGB:f_,resizeNearestNeighbor:A_,resizeBilinear:E_,rotateWithOffset:m_,cropAndResize:d_,nonMaxSuppression:x_,nonMaxSuppressionAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=cv(t,"boxes","nonMaxSuppressionAsync"),a=cv(e,"scores","nonMaxSuppressionAsync"),o=g_(s,a,n,r,i);n=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=b_(u,c,n,r,i);return s!==t&&s.dispose(),a!==e&&a.dispose(),OS(h,"int32")},nonMaxSuppressionWithScore:T_,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=cv(t,"boxes","nonMaxSuppressionAsync"),o=cv(e,"scores","nonMaxSuppressionAsync"),l=g_(a,o,n,r,i,s);n=l.maxOutputSize,r=l.iouThreshold,i=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=S_(c,h,n,r,i,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:OS(d,"int32"),selectedScores:OS(p)}},nonMaxSuppressionPadded:C_,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=cv(t,"boxes","nonMaxSuppressionAsync"),o=cv(e,"scores","nonMaxSuppressionAsync"),l=g_(a,o,n,r,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=w_(d,p,u,c,h,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:OS(f,"int32"),validOutputs:Fb(m,"int32")}},threshold:F_,transform:$_},Y_={bandPart:P_,gramSchmidt:W_,qr:G_};class Z_ extends $b{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=nv.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=nv.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Eb((()=>WS(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Eb((()=>WS(r).variable(!1)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const s=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Eb((()=>{const t=Ob(Uw(s,this.rho),Uw(aS(i),1-this.rho)),e=Uw(Mw(LS(Ob(a,this.epsilon)),LS(Ob(s,this.epsilon))),i),n=Ob(Uw(a,this.rho),Uw(aS(e),1-this.rho));s.assign(t),a.assign(n);const o=Ob(Uw(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ab(this.accumulatedGrads.map((t=>t.variable))),Ab(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Z_.className="Adadelta",Mb(Z_);class J_ extends $b{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=nv.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Eb((()=>cw(r.shape,this.initialAccumulatorValue).variable(t)))}}const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const s=this.accumulatedGrads[n].variable;Eb((()=>{const t=Ob(s,aS(i));s.assign(t);const e=Ob(Uw(Mw(i,LS(Ob(t,nv.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ab(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}J_.className="Adagrad",Mb(J_);class Q_ extends $b{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Eb((()=>{this.accBeta1=Fb(e).variable(),this.accBeta2=Fb(n).variable()})),null==r&&(this.epsilon=nv.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Eb((()=>{const n=Ww(1,this.accBeta1),r=Ww(1,this.accBeta2);e.forEach(((e,i)=>{const s=nv.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${e}/m`,variable:Eb((()=>WS(s).variable(!1)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${e}/v`,variable:Eb((()=>WS(s).variable(!1)))});const a=Array.isArray(t)?t[i].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedSecondMoment[i].variable,u=Ob(Uw(o,this.beta1),Uw(a,1-this.beta1)),c=Ob(Uw(l,this.beta2),Uw(aS(a),1-this.beta2)),h=Mw(u,n),d=Mw(c,r);o.assign(u),l.assign(c);const p=Ob(Uw(Mw(h,Ob(LS(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(Uw(this.accBeta1,this.beta1)),this.accBeta2.assign(Uw(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ab(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ab(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Eb((()=>{this.accBeta1.assign(z_(this.beta1,this.iterations_+1)),this.accBeta2.assign(z_(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Q_.className="Adam",Mb(Q_);class tk extends $b{constructor(t,e,n,r=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Eb((()=>{this.iteration=Fb(0).variable(),this.accBeta1=Fb(e).variable()})),null==r&&(this.epsilon=nv.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Eb((()=>{const n=Ww(1,this.accBeta1),r=Mw(-this.learningRate,Ob(Uw(this.iteration,this.decay),1));e.forEach(((e,i)=>{const s=nv.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${e}/m`,variable:WS(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${e}/v`,variable:WS(s).variable(!1)});const a=Array.isArray(t)?t[i].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedWeightedInfNorm[i].variable,u=Ob(Uw(o,this.beta1),Uw(a,1-this.beta1)),c=Uw(l,this.beta2),h=Pb(a),d=Kw(c,h);o.assign(u),l.assign(d);const p=Ob(Uw(Mw(r,n),Mw(u,Ob(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(Ob(this.iteration,1)),this.accBeta1.assign(Uw(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ab(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ab(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}tk.className="Adamax",Mb(tk);class ek extends $b{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=nv.registeredVariables[e];Eb((()=>{const t=Ob(Uw(this.c,r),i);i.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Nb(Fb(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ek.className="SGD",Mb(ek);class nk extends ek{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Fb(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=nv.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Eb((()=>WS(r).variable(t)))}}const i=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Eb((()=>{let t;const e=Ob(Uw(this.m,i),s);t=this.useNesterov?Ob(Uw(this.c,Ob(s,Uw(e,this.m))),r):Ob(Uw(this.c,e),r),i.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ab(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}nk.className="Momentum",Mb(nk);class rk extends $b{constructor(t,e=.9,n=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,null==r&&(this.epsilon=nv.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=nv.registeredVariables[e],i=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Eb((()=>WS(r).variable(i)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Eb((()=>WS(r).variable(i)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Eb((()=>WS(r).variable(i)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Eb((()=>{const t=Ob(Uw(a,this.decay),Uw(aS(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Ob(Uw(e,this.decay),Uw(s,1-this.decay)),l=Mw(Uw(s,this.learningRate),LS(Ww(t,Ob(aS(i),this.epsilon)))),u=Ob(Uw(o,this.momentum),l);a.assign(t),e.assign(i),o.assign(u);const c=Ww(r,u);r.assign(c)}else{const t=Ob(Uw(a,this.decay),Uw(aS(s),1-this.decay)),e=Ob(Uw(o,this.momentum),Mw(Uw(s,this.learningRate),LS(Ob(t,this.epsilon))));a.assign(t),o.assign(e);const n=Ww(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ab(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ab(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ab(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}rk.className="RMSProp",Mb(rk);class ik{static sgd(t){return new ek(t)}static momentum(t,e,n=!1){return new nk(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,i=!1){return new rk(t,e,n,r,i)}static adam(t=.001,e=.9,n=.999,r=null){return new Q_(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Z_(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,i=0){return new tk(t,e,n,r,i)}static adagrad(t,e=.1){return new J_(t,e)}}const sk={sgd:ik.sgd,momentum:ik.momentum,adadelta:ik.adadelta,adagrad:ik.adagrad,rmsprop:ik.rmsprop,adamax:ik.adamax,adam:ik.adam},ak="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function ok(){return new Promise((t=>ak((()=>t()))))}function lk(t,e){const n=t[0].length;t.forEach(((t,e)=>{sf(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),sf(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,i)=>{for(let s=0;s<n;s++)sf(s===e||t[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function uk(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var ck;function hk(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let i=1;i<n.length;++i){const s=n[i],a=r[r.length-n.length+i],o=r[a];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+t}] = ${s} but shape[${i+t}] = ${o}`)}else r[a]=s}return r}function dk(t){const e={FIRST_DIM_SIZE:ck.FIRST_DIM_SIZE,VALUE_ROWIDS:ck.VALUE_ROWIDS,ROW_LENGTHS:ck.ROW_LENGTHS,ROW_SPLITS:ck.ROW_SPLITS,ROW_LIMITS:ck.ROW_LIMITS,ROW_STARTS:ck.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function pk(t){return 0===t.length?0:t[0]===ck.FIRST_DIM_SIZE?t.length-1:t.length}function fk(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let i=0;i<Math.min(n,r-1);++i){const n=t[i],r=e[i+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-t.length}] = ${n} but ragged tensor input.flatValues.shape[${i-t.length}] = ${r}`)}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(ck||(ck={}));const mk=30;function gk(t){return t<=mk?t:Tf(t,Math.floor(Math.sqrt(t)))}function xk(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function yk(t,e,n,r=!0){let i=[];if(r)i=i.concat(e.slice(0)),i.push(t[0]/n),i=i.concat(t.slice(1));else{i=i.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)i=i.concat([t[r+1]/e[r],e[r]]);i=i.concat(t.slice(n+1))}return i}function vk(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function bk(t,e,n,r=!0){const i=[];r?i.push(t[0]/n):i.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?i.push(e[n-1]*t[n]):i.push(t[n]/e[n-1]):i.push(t[n]);return i}function wk(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Sk(t,e,n){const r=t.slice(0,1);for(let i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}function _k(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===uf(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const i=e.shape,s=i[i.length-1];let a=1;for(let t=0;t<i.length-1;++t)a*=i[t];const o=t.shape,l=i.slice();l.pop();let u=1;for(let t=s;t<n;++t)u*=o[t],l.push(o[t]);const c=[...Cf(t.shape).map((t=>t/u)),1].slice(0,s);return[l,a,u,c]}function kk(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(s+` update.rank < ${i}. `);if(t.length<r+(n.rank-i))throw new Error(s+` Output shape length < ${r+(n.rank-i)}`);if(n.rank!==i+t.length-r)throw new Error(s+" update.rank != "+(i+t.length-r));for(let t=0;t<i;++t)if(n.shape[t]!==e.shape[t])throw new Error(s+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-i;++e)if(n.shape[e+i]!==t[e+r])throw new Error(s+` updates.shape[${e+i}] (${n.shape[e+i]}) != shape[${e+i}] (${t[e+i]})`)}function Ik(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}kk(n,e,t)}function Mk(t,e,n){const r=e.shape.length,i=r>1?e.shape[r-1]:1,s=n.length;let a=1;for(let t=i;t<s;++t)a*=n[t];const o=i<1?1:i;return{sliceRank:i,numUpdates:uf(e.shape)/o,sliceSize:a,strides:[...Cf(n.slice(0,i)),1],outputSize:uf(n)}}const Tk=1.7580993408473768,Ck=1.0507009873554805,Ek=.3275911,Ak=.254829592,Nk=-.284496736,Rk=1.421413741,Dk=-1.453152027,Lk=1.061405429;function Fk(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function $k(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Pk(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Ok(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function zk(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Bk(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Uk(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let i=0;i<Math.ceil(t/2);i++){const s=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(s),r[i]=Math.sin(s)}return{real:n,imag:r}}function Wk(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const Vk=/->/g;function Gk(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Vk,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,i]=t.split("->");sf(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<i.length;++t){const e=i[t];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(s.length);for(let t=0;t<a;++t){if(new Set(s[t].split("")).size!==s[t].length)throw new Error(`Found duplicate axes in input component ${s[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<s[t].length;++e)l[t].push(o.indexOf(s[t][e]))}const u=o.length,c=[];for(let t=i.length;t<u;++t)c.push(t);return{allDims:o,summedDims:c,idDims:l}}function Hk(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function jk(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const i=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=i[n]:sf(r[e[t][n]]===i[n],(()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(i)}, but got dimension ${i[n]}`))}}function qk(t,e){const n=t,r=[];let i=0;0===t.length&&n.push(-1),i=t.length+1;for(let t=0;t<i;++t)r.push([]);const s=[];for(let t=0;t<n.length;++t){const i=Kk(e,n[t]);for(const e of i)-1===s.indexOf(e)&&(r[t].push(e),s.push(e))}return{path:n,steps:r}}function Xk(t){return t.every(((t,e)=>t===e))}function Kk(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function Yk(t,e,n=0){let r=[];if("number"==typeof e)sf(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const i=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);sf(i<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}sf(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function Zk(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function Jk(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function Qk(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function tI(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function eI(t,e){return`size ${t} must be non-negative, not ${e}`}function nI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rI(t,e){return`Input to reshape is a SparseTensor with ${uf(t)}\n  dense values, but the requested shape requires a multiple of ${uf(e)}. inputShape=${t} outputShape= ${e}`}function iI(t,e){return`Input to reshape is a tensor with ${uf(t)} dense values, but the requested shape has ${uf(e)}. inputShape=${t} outputShape=${e}`}function sI(){return"segment ids must be >= 0"}function aI(){return"segment ids are not increasing"}function oI(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function lI(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function uI(t,e){let n,r=!1;for(t<=mk?(n=t,r=!0):n=Tf(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Tf(t,n+1);return n}function cI(t,e,n){const r=[],i=t.length;for(let s=0;s<i;s++)s!==e?r.push(t[s]):r.push(n);return r}function hI(t,e,n,r){const i=e.shape.length,s=t.shape.length;if(0!==r&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<i;t++)o.push(e.shape[t]);for(let e=n+1;e<s;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function dI(t){try{return t.map((t=>ky(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function pI(t){return t.map((t=>_y(t)))}function fI(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Xv(t,"int32"),i=Xv([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const s=r.indexToLoc(n[e]),a=e*t.length;i.values.set(s,a)}return i.toTensor()}const mI={kernelName:Hf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,QS(Kv(n,"float32"),-1))}}},gI={kernelName:jf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=aS(Kv(n,"float32")),r=LS(Ww(Fb(1),e));return lS(Mw(t,r))}}}},xI={kernelName:qf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=LS(Ww(aS(Kv(n,"float32")),1));return Mw(t,e)}}}},yI={kernelName:Xf,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{let e=t;const r=sb(n.shape,i);return r.length>0&&(e=Vw(e,r)),nw(e,n.shape)},b:()=>{let e=t;const n=sb(r.shape,i);return n.length>0&&(e=Vw(e,n)),nw(e,r.shape)}}}},vI={kernelName:Kf,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},bI={kernelName:Jf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>WS(n)}}},wI={kernelName:Qf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>WS(n)}}},SI={kernelName:tm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,LS(Ww(Fb(1),aS(Kv(n,"float32")))))}}},_I={kernelName:em,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=LS(Ob(Fb(1),aS(Kv(n,"float32"))));return Mw(t,e)}}}},kI={kernelName:im,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{const e=Ob(aS(n),aS(r));let s=Uw(t,Mw(r,e));const a=sb(n.shape,i);return a.length>0&&(s=Vw(s,a)),nw(s,n.shape)},b:()=>{const e=Ob(aS(n),aS(r));let s=lS(Uw(t,Mw(n,e)));const a=sb(r.shape,i);return a.length>0&&(s=Vw(s,a)),nw(s,r.shape)}}}},II={kernelName:nm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,Ob(aS(Kv(n,"float32")),1))}}},MI={kernelName:rm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,Ww(Fb(1),aS(Kv(n,"float32"))))}}},TI=dv({avgPool3dGrad_:function(t,e,n,r,i,s){const a=cv(t,"dy","avgPool3dGrad"),o=cv(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=nw(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=nw(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),sf(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),sf(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),ew("avgPool3dGrad",i,s);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:i,dimRoundingMode:s},p=nv.runKernel(lm,h,d);return c?nw(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),CI={kernelName:om,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a,dimRoundingMode:o}=n;return{x:()=>TI(t,r,i,s,a,o)}}},EI=dv({avgPoolGrad_:function(t,e,n,r,i){const s=cv(t,"dy","avgPoolGrad"),a=cv(e,"input","avgPoolGrad");sf(a.rank===s.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`));let o=a,l=s,u=!1;3===a.rank&&(u=!0,o=nw(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=nw(s,[1,s.shape[0],s.shape[1],s.shape[2]])),sf(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),sf(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:i},d=nv.runKernel(am,c,h);return u?nw(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),AI={kernelName:sm,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:s,pad:a}=n;return{x:()=>EI(t,r,i,s,a)}}},NI={kernelName:um,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,i]=e,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>jw(t,i,!1,!1),b:()=>jw(t,r,!0,!1)}:s&&!a?{a:()=>jw(i,t,!1,!0),b:()=>jw(r,t,!1,!1)}:{a:()=>jw(i,t,!0,!0),b:()=>jw(t,r,!0,!0)}:{a:()=>jw(t,i,!1,!0),b:()=>jw(r,t,!0,!1)}}},RI=dv({spaceToBatchND_:function(t,e,n){const r=cv(t,"x","spaceToBatchND");sf(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),sf(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),sf(r.shape.reduce(((t,r,i)=>i>0&&i<=e.length?t&&(r+n[i-1][0]+n[i-1][1])%e[i-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const i={x:r},s={blockShape:e,paddings:n};return nv.runKernel(bx,i,s)}}),DI={kernelName:cm,gradFunc:(t,e,n)=>{const{blockShape:r,crops:i}=n;return{x:()=>RI(t,r,i)}}},LI={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,i=r.inputShape,s=r.shape,a=Array.from(s);for(let t=i.length-1;t>=0;t--)if(i[t]===s[t])a[t]=1;else if(1!==i[t])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${s}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>Vw(t,o,!0)}}},FI={kernelName:pm,gradFunc:t=>({x:()=>t.clone()})},$I={kernelName:fm,gradFunc:t=>({x:()=>WS(t)})},PI={kernelName:mm,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:i,clipValueMax:s}=n;return{x:()=>US(Hw($w(r,i),R_(r,s)),t,WS(t))}}},OI={kernelName:xm,inputsToSave:["x"],gradFunc:mI.gradFunc},zI={kernelName:ym,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:i}=n,s=gf(i,e[0].shape)[0],a=r.map((t=>t[s]));return DS(t,a,s).map((t=>()=>t))}},BI={kernelName:vm,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{dilations:s,strides:a,pad:o,dataFormat:l}=n;return sf(Jb(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>vw(r.shape,t,i,a,o,l),filter:()=>ZS(r,t,i.shape,a,o,l)}}},UI={kernelName:wm,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{strides:s,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>xw(t,i,s,a,o,1,l),filter:()=>ZS(t,r,i.shape,s,a,o,l)}}},WI=dv({conv3DBackpropFilter_:function(t,e,n,r,i){let s=t;4===t.rank&&(s=nw(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=nw(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),sf(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),sf(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),sf(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),sf(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),sf(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:a},l={strides:r,pad:i,filterShape:n};return nv.runKernel(_m,o,l)}}),VI={kernelName:Sm,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s}=n;sf(Jb(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>Sw(a.shape,t,o,i,s),filter:()=>WI(a,t,o.shape,i,s)}}},GI=dv({sin_:function(t){const e={x:cv(t,"x","sin","float32")};return nv.runKernel(px,e)}}),HI={kernelName:Im,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(lS(GI(Kv(n,"float32"))),t)}}},jI=dv({sinh_:function(t){const e={x:cv(t,"x","sinh")};return nv.runKernel(fx,e)}}),qI={kernelName:Mm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(jI(Kv(n,"float32")),t)}}},XI=dv({cumsum_:function(t,e=0,n=!1,r=!1){const i={x:cv(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:r};return nv.runKernel(Cm,i,s)}}),KI={kernelName:Cm,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i,exclusive:s,reverse:a}=n;return{x:()=>{const e=rS([i],r.rank);let n=XI(t,i,s,!a);return null!=e&&(n=HS(n,e)),n}}}},YI={kernelName:Rm,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:s,dimRoundingMode:a}=n,o=null==r?[1,1]:r;sf(Jb(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return sf(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),sf(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),sf(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),sf(Qb(i,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${o}'.`)),ew("depthwiseConv2d",s,a),{x:()=>a_(l.shape,t,u,i,s,o,a),filter:()=>s_(l,t,u.shape,i,s,o,a)}}},ZI={kernelName:$m,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,s={x:r,filter:i,dy:t},a={x:r,filter:i,dy:t};return{x:()=>nv.runKernel(Pm,s,n),filter:()=>nv.runKernel(Om,a,n)}}},JI={kernelName:Um,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>nv.runKernel(Wm,r)}}},QI={kernelName:Vm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Uw(Ew(lS(aS(n))),2/Math.sqrt(Math.PI));return{x:()=>Uw(t,r)}}},tM={kernelName:Hm,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,n)}}},eM={kernelName:jm,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>nw(t,n.shape)}}},nM={kernelName:qm,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,Ew(n))}}},rM={kernelName:Zm,gradFunc:t=>({x:()=>WS(t)})},iM={kernelName:Jm,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{const e=Mw(t,Kv(r,"float32")),s=sb(n.shape,i);return s.length>0?nw(Vw(e,s),n.shape):e},b:()=>{let e=Uw(t,Kv(n,"float32"));const s=sb(r.shape,i);s.length>0&&(e=nw(Vw(e,s),r.shape));const a=aS(r);return lS(Mw(e,Kv(a,"float32")))}}}},sM=dv({rsqrt_:function(t){const e={x:cv(t,"x","rsqrt","float32")};return nv.runKernel(ox,e)}}),aM={kernelName:Qm,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[i,s,a,o]=e,l=null==o?Fb(1):o,u=sb(s.shape,i.shape),c=[];if(1===s.rank){for(let t=0;t<i.shape.length-1;++t)c.push(i.shape[t]);c.push(1)}const h=Ww(i,s),d=Uw(t,l),p=sM(Ob(a,Fb(r))),f=Uw(Uw(Uw(p,p),p),Fb(-.5));return{x:()=>1===s.rank?nw(Uw(Uw(t,Nw(nw(p,[1,1,1,s.shape[0]]),c)),l),i.shape):nw(Uw(Uw(t,p),l),i.shape),mean:()=>{let t=Uw(Uw(p,Fb(-1)),d);return 1===s.rank&&(t=Vw(t,u)),nw(t,s.shape)},variance:()=>{let t=Uw(Uw(f,h),d);return 1===s.rank&&(t=Vw(t,u)),nw(t,s.shape)},scale:()=>{const e=Uw(h,p);let n=Uw(t,e);return 1===s.rank&&(n=Vw(n,u)),nw(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Vw(e,u)),nw(e,s.shape)}}}},oM=dv({unsortedSegmentSum_:function(t,e,n){const r=cv(t,"x","unsortedSegmentSum"),i=cv(e,"segmentIds","unsortedSegmentSum","int32");sf(hf(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:i},a={numSegments:n};return nv.runKernel(Vx,s,a)}}),lM={kernelName:tg,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,i]=e,{axis:s}=n,a=gf(s,r.shape)[0];return{x:()=>{const e=r.shape,n=i.size,o=e.slice(0,a),l=o.length,u=e.slice(s,e.length).slice(1),c=u.length,h=uM(0,l),d=uM(l+1,l+1+c),p=cM([o,[n],u]),f=nw(t,p),m=nw(i,[n]),g=cM([[l],h,d]),x=HS(f,g);let y=oM(x,m,r.shape[a]);const v=iS(g);return y=HS(y,v),y},indices:()=>i}}};function uM(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function cM(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const hM={kernelName:rg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>WS(n),b:()=>WS(r)}}},dM={kernelName:ig,gradFunc:t=>({x:()=>Kv(t,"float32")})},pM={kernelName:og,gradFunc:t=>({x:()=>WS(t)})},fM={kernelName:lg,gradFunc:t=>({x:()=>WS(t)})},mM={kernelName:ug,gradFunc:t=>({x:()=>WS(t)})},gM={kernelName:cg,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:i}=n,s=Fw(r,0);return{x:()=>US(s,t,Uw(t,i))}}},xM={kernelName:mg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,Ob(n,1))}}},yM={kernelName:fg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,Kv(n,"float32"))}}},vM={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;return{logits:()=>{const e=Ew(r);return Ww(t,Uw(Vw(t,i,!0),e))}}}},bM=dv({localResponseNormalizationBackprop_:function(t,e,n,r=5,i=1,s=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:i,alpha:s,beta:a};return nv.runKernel(bg,o,l)}}),wM={kernelName:vg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{depthRadius:s,bias:a,alpha:o,beta:l}=n;return{x:()=>bM(r,i,t,s,a,o,l)}}};function SM(t,e,n,r){return e.rank<n.rank&&(e=nw(e,eS(e.shape,r))),t.rank<n.rank&&(t=nw(t,eS(t.shape,r))),{x:()=>Uw(t,Kv(Cw(n,e),t.dtype))}}const _M={kernelName:wg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:i}=r,s=e[0],a=SM(t,e[1],s,gf(i,s.shape));return{x:()=>a.x()}}},kM=dv({less_:function(t,e){let n=cv(t,"a","less","string_or_numeric"),r=cv(e,"b","less","string_or_numeric");[n,r]=Xy(n,r),ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(hg,i)}}),IM={kernelName:Sg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Uw(t,Kv($w(n,r),"float32")),b:()=>Uw(t,Kv(kM(n,r),"float32"))}}},MM=dv({maxPool3dGrad_:function(t,e,n,r,i,s,a){const o=cv(t,"dy","maxPool3dGrad"),l=cv(e,"input","maxPool3dGrad"),u=cv(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=nw(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=nw(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=nw(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),sf(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),sf(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),sf(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),ew("maxPool3dGrad",s,a);const f={dy:c,input:h,output:d},m={filterSize:r,strides:i,pad:s,dimRoundingMode:a},g=nv.runKernel(Mg,f,m);return p?nw(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),TM={kernelName:Ig,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>MM(t,r,i,s,a,o,l)}}},CM=dv({maxPoolGrad_:function(t,e,n,r,i,s,a){const o=cv(t,"dy","maxPoolGrad"),l=cv(e,"input","maxPoolGrad"),u=cv(n,"output","maxPoolGrad");sf(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),sf(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),sf(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),ew("maxPoolGrad",s,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:i,pad:s,dimRoundingMode:a};return nv.runKernel(kg,c,h)}}),EM={kernelName:_g,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:s,strides:a,pad:o}=n;return{x:()=>CM(t,r,i,s,a,o)}}},AM={kernelName:Cg,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n,s=gf(i,r.shape),a=uf(tS(r.shape,s)[1]);return{x:()=>{const e=r.shape.slice();s.forEach((t=>{e[t]=1}));const n=nw(t,e);return Mw(Uw(n,dS(r.shape,"float32")),a)}}}},NM={kernelName:Eg,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:i}=r,[s,a]=e,o=SM(t,a,s,gf(i,s.shape));return{x:()=>o.x()}}},RM={kernelName:Ag,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Uw(t,Kv(R_(n,r),"float32")),b:()=>Uw(t,Kv(Fw(n,r),"float32"))}}},DM={kernelName:Ng,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map((t=>t[0]));return{x:()=>MS(t,s,r.shape)}}},LM={kernelName:Rg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{const e=sb(n.shape,i);return e.length>0?nw(Vw(t,e),n.shape):t},b:()=>{const e=Uw(t,lS(Dw(Mw(n,r)))),s=sb(r.shape,i);return s.length>0?nw(Vw(e,s),r.shape):e}}}},FM={kernelName:Lg,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{const e=Uw(t,Kv(r,"float32")),s=sb(n.shape,i);return s.length>0?nw(Vw(e,s),n.shape):e},b:()=>{const e=Uw(t,Kv(n,"float32")),s=sb(r.shape,i);return s.length>0?nw(Vw(e,s),r.shape):e}}}},$M={kernelName:Fg,gradFunc:t=>({x:()=>lS(t)})},PM={kernelName:Ug,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>hS(n.shape,"float32")}}},OM={kernelName:Bg,gradFunc:t=>({x:()=>WS(t)})},zM={kernelName:Wg,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return BS(t,r).map((t=>()=>t))}},BM={kernelName:Vg,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,s=i.map((t=>t[0]));return{x:()=>MS(t,s,r.shape)}}},UM={kernelName:Gg,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,i]=e,s=n,a=r,o=ab(s.shape,a.shape);return{a:()=>{const e=Kv(a,"float32");let n=Uw(t,Uw(e,z_(s,Ww(e,Fb(1)))));const r=sb(s.shape,o);return r.length>0&&(n=Vw(n,r)),nw(n,s.shape)},b:()=>{const e=Fw(s,0),n=US(e,Ow(s),WS(s));let r=Uw(t,Uw(i,n));const l=sb(a.shape,o);return l.length>0&&(r=Vw(r,l)),nw(r,a.shape)}}}},WM={kernelName:Hg,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,i=Fw(n,0);return{x:()=>US(i,t,Uw(t,r)),alpha:()=>{let e=US(i,WS(t),Uw(t,n));const s=sb(r.shape,t.shape);return s.length>0&&(e=Vw(e,s)),nw(e,r.shape)}}}},VM=dv({cumprod_:function(t,e=0,n=!1,r=!1){const i={x:cv(t,"x","cumprod")},s={axis:e,exclusive:n,reverse:r};return nv.runKernel(Tm,i,s)}});const GM={kernelName:jg,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;let s=[];return s=null==i?r.shape.map(((t,e)=>e)):"number"==typeof i?[i]:i,{x:()=>function(t,e,n){const r=t.shape.length,i=r-n.length,s=rS(n,r);let a=t;null!=s&&(a=HS(t,s));const o=a.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((t,e)=>t*e),1);o.push(l);let u=function(t,e,n){const r=t.shape.slice();r[n]=1;const i=nw(e,r),s=VM(t,n,!0,!1),a=VM(t,n,!0,!0),o=Uw(s,a);return Uw(i,o)}(a.reshape(o),e,i);if(u=u.reshape(a.shape),null!=s){const t=iS(s);u=HS(u,t)}return u}(r,t,s)}}},HM={kernelName:zm,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{const e=Mw(t,Kv(r,"float32")),s=sb(n.shape,i);return s.length>0?nw(Vw(e,s),n.shape):e},b:()=>{let e=Uw(t,Kv(n,"float32"));const s=sb(r.shape,i);s.length>0&&(e=nw(Vw(e,s),r.shape));const a=aS(r);return lS(Mw(e,Kv(a,"float32")))}}}},jM={kernelName:Zg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,lS(aS(n)))}}},qM={kernelName:ix,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Uw(R_(n,6),QS(n));return{x:()=>Uw(t,Kv(r,"float32"))}}},XM={kernelName:Jg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,Kv(QS(n),"float32"))}}},KM={kernelName:Qg,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>nw(t,n.shape)}}},YM={kernelName:nx,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>nv.runKernel(rx,i,n)}}},ZM={kernelName:tx,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i={dy:t,images:r};return{images:()=>nv.runKernel(ex,i,n)}}},JM={kernelName:sx,gradFunc:(t,e,n)=>{const{dims:r}=n,i=gf(r,t.shape);return{x:()=>SS(t,i)}}},QM={kernelName:ax,gradFunc:t=>({x:()=>WS(t)})},tT={kernelName:ox,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>lS(Mw(t,Uw(z_(n,1.5),2)))}}},eT=dv({logicalNot_:function(t){const e={x:cv(t,"x","logicalNot","bool")};return nv.runKernel(xg,e)}}),nT={kernelName:cx,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Kv(WS(n),"float32"),t:()=>Uw(t,Kv(n,t.dtype)),e:()=>Uw(t,Kv(eT(n),t.dtype))}}},rT={kernelName:hx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Fw(n,Fb(0)),r=Fb(Tk),i=Fb(Ck),s=Uw(t,i),a=Uw(Uw(t,r),Ew(Kv(n,"float32")));return US(e,s,a)}}}},iT={kernelName:gx,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,Uw(n,Ww(Fb(1),n)))}}},sT={kernelName:mx,gradFunc:t=>({x:()=>WS(t)})},aT=dv({cos_:function(t){const e={x:cv(t,"x","cos","float32")};return nv.runKernel(Im,e)}}),oT={kernelName:px,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(aT(Kv(n,"float32")),t)}}},lT=dv({cosh_:function(t){const e={x:cv(t,"x","cosh","float32")};return nv.runKernel(Mm,e)}}),uT={kernelName:fx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(lT(Kv(n,"float32")),t)}}},cT={kernelName:dx,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:i,size:s}=n,a=r.shape,[o,l]=wb(r,i,s),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>fS(t,u)}}},hT={kernelName:Sx,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:i}=n,s=Uw(t,r);return{logits:()=>Ww(s,Uw(Vw(s,[i],!0),r))}}},dT={kernelName:xx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,IS(n))}}},pT=dv({batchToSpaceND_:function(t,e,n){const r=cv(t,"x","batchToSpaceND"),i=e.reduce(((t,e)=>t*e));sf(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),sf(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),sf(r.shape[0]%i==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`));const s={x:r},a={blockShape:e,crops:n};return nv.runKernel(cm,s,a)}}),fT={kernelName:bx,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:i}=n;return{x:()=>pT(t,r,i)}}},mT={kernelName:wx,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>dw(t,r)}}},gT=[mI,gI,xI,yI,vI,bI,wI,SI,_I,kI,II,MI,CI,AI,NI,DI,LI,FI,$I,PI,OI,zI,UI,BI,VI,HI,qI,KI,YI,ZI,HM,JI,QI,tM,eM,nM,iM,rM,aM,lM,hM,dM,pM,fM,mM,gM,xM,yM,vM,wM,_M,_M,IM,TM,EM,AM,NM,RM,DM,LM,FM,$M,PM,OM,zM,BM,BM,UM,WM,GM,jM,qM,XM,KM,YM,ZM,JM,QM,tT,nT,rT,iT,sT,oT,uT,cT,hT,dT,fT,fT,mT,mT,{kernelName:yx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,Uw(LS(Kv(n,"float32")),2))}}},{kernelName:Cx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Fb(2);return{a:()=>Uw(t,Uw(i,Ww(n,r))),b:()=>Uw(t,Uw(i,Ww(r,n)))}}},{kernelName:Ex,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(t,Uw(Kv(n,"float32"),2))}}},{kernelName:Hx,gradFunc:t=>({x:()=>WS(t)})},{kernelName:Lx,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=ab(n.shape,r.shape);return{a:()=>{let e=t;const r=sb(n.shape,i);return r.length>0&&(e=Vw(e,r)),nw(e,n.shape)},b:()=>{let e=t;const n=sb(r.shape,i);return n.length>0&&(e=Vw(e,n)),nw(lS(e),r.shape)}}}},{kernelName:vx,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,i=r.shape.slice(),{axis:s}=n;gf(s,r.shape).forEach((t=>{i[t]=1}));const a=nw(t,i),o=Uw(a,dS(r.shape,"float32"));return{x:()=>o}}},{kernelName:Fx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mw(t,aS(aT(n)))}}},{kernelName:$x,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uw(Ww(Fb(1),aS(n)),t)}}},{kernelName:Px,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:i}=n;return{x:()=>{let e=WS(r);if(1===r.rank)for(let n=0;n<i[0];++n)e=Ob(e,MS(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)e=Ob(e,MS(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)e=Ob(e,MS(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)for(let o=0;o<i[3];++o)e=Ob(e,MS(t,[n*r.shape[0],s*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:Bx,gradFunc:(t,e,n)=>{const r=n,{perm:i}=r,s=iS(i);return{x:()=>HS(t,s)}}},{kernelName:Wx,gradFunc:(t,e,n)=>{const r=n,{axis:i}=r;return{value:()=>$S(t,i)}}},{kernelName:Vx,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Kw(e,WS(e)),r=Lw(t,n);let i=$w(e,Fb(0,"int32"));const s=r.rank-i.rank;for(let t=0;t<s;++t)i=Aw(i,t+1);i=Hw(i,dS(r.shape,"bool"));const a=WS(r);return US(i,r,a)}(t,n)}}},{kernelName:Gx,gradFunc:t=>({x:()=>WS(t)})}];for(const t of gT)iy(t);Oy().prototype.abs=function(){return this.throwIfDisposed(),Pb(this)};const xT=dv({acos_:function(t){const e={x:cv(t,"x","acos")};return nv.runKernel(jf,e)}});Oy().prototype.acos=function(){return this.throwIfDisposed(),xT(this)};const yT=dv({acosh_:function(t){const e={x:cv(t,"x","acosh")};return nv.runKernel(qf,e)}});Oy().prototype.acosh=function(){return this.throwIfDisposed(),yT(this)},Oy().prototype.add=function(t){return this.throwIfDisposed(),Ob(this,t)},Oy().prototype.all=function(t,e){return this.throwIfDisposed(),zb(this,t,e)},Oy().prototype.any=function(t,e){return this.throwIfDisposed(),Bb(this,t,e)},Oy().prototype.argMax=function(t){return this.throwIfDisposed(),Ub(this,t)};const vT=dv({argMin_:function(t,e=0){const n={x:cv(t,"x","argMin")},r={axis:e};return nv.runKernel(Qf,n,r)}});Oy().prototype.argMin=function(t){return this.throwIfDisposed(),vT(this,t)},Oy().prototype.asScalar=function(){return this.throwIfDisposed(),sf(1===this.size,(()=>"The array must have only 1 element.")),nw(this,[])},Oy().prototype.asType=function(t){return this.throwIfDisposed(),Kv(this,t)},Oy().prototype.as1D=function(){return this.throwIfDisposed(),nw(this,[this.size])},Oy().prototype.as2D=function(t,e){return this.throwIfDisposed(),nw(this,[t,e])},Oy().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),nw(this,[t,e,n])},Oy().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),nw(this,[t,e,n,r])},Oy().prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),nw(this,[t,e,n,r,i])};const bT=dv({asin_:function(t){const e={x:cv(t,"x","asin")};return nv.runKernel(tm,e)}});Oy().prototype.asin=function(){return this.throwIfDisposed(),bT(this)};const wT=dv({asinh_:function(t){const e={x:cv(t,"x","asinh")};return nv.runKernel(em,e)}});Oy().prototype.asinh=function(){return this.throwIfDisposed(),wT(this)};const ST=dv({atan_:function(t){const e={x:cv(t,"x","atan")};return nv.runKernel(nm,e)}});Oy().prototype.atan=function(){return this.throwIfDisposed(),ST(this)};const _T=dv({atan2_:function(t,e){let n=cv(t,"a","atan2"),r=cv(e,"b","atan2");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(im,i)}});Oy().prototype.atan2=function(t){return this.throwIfDisposed(),_T(this,t)};const kT=dv({atanh_:function(t){const e={x:cv(t,"x","atanh")};return nv.runKernel(rm,e)}});Oy().prototype.atanh=function(){return this.throwIfDisposed(),kT(this)},Oy().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),rw(this,t,e,n,r)},Oy().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),pT(this,t,e)},Oy().prototype.batchNorm=function(t,e,n,r,i){return this.throwIfDisposed(),sw(this,t,e,n,r,i)},Oy().prototype.broadcastTo=function(t){return this.throwIfDisposed(),uw(this,t)},Oy().prototype.cast=function(t){return this.throwIfDisposed(),Kv(this,t)};const IT=dv({ceil_:function(t){const e={x:cv(t,"x","ceil","float32")};return nv.runKernel(fm,e)}});Oy().prototype.ceil=function(){return this.throwIfDisposed(),IT(this)},Oy().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),hw(this,t,e)},Oy().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Py&&(t=[t]),dw([this,...t],e)},Oy().prototype.conv1d=function(t,e,n,r,i,s){return this.throwIfDisposed(),yw(this,t,e,n,r,i,s)},Oy().prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),bw(this,t,e,n,r,i)},Oy().prototype.conv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),xw(this,t,e,n,r,i,s)},Oy().prototype.cos=function(){return this.throwIfDisposed(),aT(this)},Oy().prototype.cosh=function(){return this.throwIfDisposed(),lT(this)},Oy().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),VM(this,t,e,n)},Oy().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),XI(this,t,e,n)};const MT=dv({depthToSpace_:function(t,e,n="NHWC"){const r=cv(t,"x","depthToSpace","float32"),i="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];sf(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),sf(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),sf(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),sf(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return nv.runKernel(Nm,o,l)}});Oy().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),MT(this,t,e)},Oy().prototype.depthwiseConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),kw(this,t,e,n,r,i,s)};const TT=dv({dilation2d_:function(t,e,n,r,i=[1,1],s="NHWC"){const a=cv(t,"x","dilation2d"),o=cv(e,"filter","dilation2d");sf(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),sf(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),sf("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=a,u=!1;3===a.rank&&(l=nw(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:i},d=nv.runKernel($m,c,h);return u?nw(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Oy().prototype.dilation2d=function(t,e,n,r,i){return this.throwIfDisposed(),TT(this,t,e,n,r,i)};const CT=dv({divNoNan_:function(t,e){let n=cv(t,"a","div"),r=cv(e,"b","div");[n,r]=Xy(n,r);const i=Mw(n,r),s=WS(i),a=Cw(r,s);return US(a,s,i)}});Oy().prototype.divNoNan=function(t){return this.throwIfDisposed(),CT(this,t)},Oy().prototype.div=function(t){return this.throwIfDisposed(),Mw(this,t)};const ET=dv({dot_:function(t,e){const n=cv(t,"t1","dot"),r=cv(e,"t2","dot");sf(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const i=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(sf(i===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${s}.`)),1===n.rank&&1===r.rank){const t=nw(n,[1,-1]),e=nw(r,[-1,1]),i=jw(t,e);return nw(i,[])}if(1===n.rank&&2===r.rank){const t=nw(n,[1,-1]),e=nw(r,[r.shape[0],r.shape[1]]),i=jw(t,e);return nw(i,[i.size])}if(2===n.rank&&1===r.rank){const t=nw(r,[-1,1]),e=jw(n,t);return nw(e,[e.size])}{const t=nw(r,[r.shape[0],r.shape[1]]);return jw(n,t)}}});Oy().prototype.dot=function(t){return this.throwIfDisposed(),ET(this,t)},Oy().prototype.elu=function(){return this.throwIfDisposed(),Tw(this)},Oy().prototype.equal=function(t){return this.throwIfDisposed(),Cw(this,t)};const AT=dv({erf_:function(t){let e=cv(t,"x","erf");sf("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Kv(e,"float32"));const n={x:e};return nv.runKernel(Vm,n)}});Oy().prototype.erf=function(){return this.throwIfDisposed(),AT(this)};const NT=dv({euclideanNorm_:function(t,e=null,n=!1){return U_(t,"euclidean",e,n)}});Oy().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),NT(this,t,e)},Oy().prototype.exp=function(){return this.throwIfDisposed(),Ew(this)},Oy().prototype.expandDims=function(t){return this.throwIfDisposed(),Aw(this,t)};const RT=dv({expm1_:function(t){const e={x:cv(t,"x","expm1")};return nv.runKernel(qm,e)}});Oy().prototype.expm1=function(){return this.throwIfDisposed(),RT(this)},Oy().prototype.fft=function(){return this.throwIfDisposed(),qS(this)},Oy().prototype.flatten=function(){return this.throwIfDisposed(),nw(this,[this.size])},Oy().prototype.floor=function(){return this.throwIfDisposed(),Dw(this)},Oy().prototype.floorDiv=function(t){return this.throwIfDisposed(),Iw(this,t)},Oy().prototype.gather=function(t,e){return this.throwIfDisposed(),Lw(this,t,e)},Oy().prototype.greaterEqual=function(t){return this.throwIfDisposed(),$w(this,t)},Oy().prototype.greater=function(t){return this.throwIfDisposed(),Fw(this,t)},Oy().prototype.ifft=function(){return this.throwIfDisposed(),KS(this)},Oy().prototype.irfft=function(){return this.throwIfDisposed(),YS(this)};const DT=dv({isFinite_:function(t){const e={x:cv(t,"x","isFinite")};return nv.runKernel(og,e)}});Oy().prototype.isFinite=function(){return this.throwIfDisposed(),DT(this)};const LT=dv({isInf_:function(t){const e={x:cv(t,"x","isInf")};return nv.runKernel(lg,e)}});Oy().prototype.isInf=function(){return this.throwIfDisposed(),LT(this)};const FT=dv({isNaN_:function(t){const e={x:cv(t,"x","isNaN")};return nv.runKernel(ug,e)}});Oy().prototype.isNaN=function(){return this.throwIfDisposed(),FT(this)},Oy().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Pw(this,t)},Oy().prototype.lessEqual=function(t){return this.throwIfDisposed(),R_(this,t)},Oy().prototype.less=function(t){return this.throwIfDisposed(),kM(this,t)};const $T=dv({localResponseNormalization_:function(t,e=5,n=1,r=1,i=.5){const s=cv(t,"x","localResponseNormalization");sf(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),sf(hf(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=s,o=!1;3===s.rank&&(o=!0,a=nw(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:i},c=nv.runKernel(vg,l,u);return o?nw(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Oy().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),$T(this,t,e,n,r)};const PT=dv({logSigmoid_:function(t){const e=cv(t,"x","logSigmoid"),n=Lb((t=>({value:lS(RS(lS(t))),gradFunc:e=>Uw(e,IS(lS(t)))})));return n(e)}});Oy().prototype.logSigmoid=function(){return this.throwIfDisposed(),PT(this)},Oy().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Gw(this,t)},Oy().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),X_(this,t,e)},Oy().prototype.log=function(){return this.throwIfDisposed(),Ow(this)},Oy().prototype.log1p=function(){return this.throwIfDisposed(),zw(this)},Oy().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Hw(this,t)},Oy().prototype.logicalNot=function(){return this.throwIfDisposed(),eT(this)};const OT=dv({logicalOr_:function(t,e){const n=cv(t,"a","logicalOr","bool"),r=cv(e,"b","logicalOr","bool");ab(n.shape,r.shape);const i={a:n,b:r};return nv.runKernel(yg,i)}});Oy().prototype.logicalOr=function(t){return this.throwIfDisposed(),OT(this,t)};const zT=dv({logicalXor_:function(t,e){const n=cv(t,"a","logicalXor","bool"),r=cv(e,"b","logicalXor","bool");return ab(n.shape,r.shape),Hw(OT(t,e),eT(Hw(t,e)))}});Oy().prototype.logicalXor=function(t){return this.throwIfDisposed(),zT(this,t)},Oy().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),jw(this,t,e,n)},Oy().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),qw(this,t,e,n,r)},Oy().prototype.max=function(t,e){return this.throwIfDisposed(),Bw(this,t,e)},Oy().prototype.maximum=function(t){return this.throwIfDisposed(),Kw(this,t)},Oy().prototype.mean=function(t,e){return this.throwIfDisposed(),Yw(this,t,e)},Oy().prototype.min=function(t,e){return this.throwIfDisposed(),O_(this,t,e)},Oy().prototype.minimum=function(t){return this.throwIfDisposed(),Zw(this,t)};const BT=dv({mirrorPad_:function(t,e,n){sf("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=cv(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");sf(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const i="reflect"===n?1:0;for(let t=0;t<r.rank;t++)sf(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),sf(e[t][0]>=0&&e[t][0]<=r.shape[t]-i&&e[t][1]>=0&&e[t][1]<=r.shape[t]-i,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-i} or less than 0 for input of shape ${r.shape}`));const s={paddings:e,mode:n},a={x:r};return nv.runKernel(Ng,a,s)}});Oy().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),BT(this,t,e)};const UT=dv({mod_:function(t,e){let n=cv(t,"a","mod"),r=cv(e,"b","mod");[n,r]=Xy(n,r);const i={a:n,b:r};return nv.runKernel(Rg,i)}});Oy().prototype.mod=function(t){return this.throwIfDisposed(),UT(this,t)},Oy().prototype.mul=function(t){return this.throwIfDisposed(),Uw(this,t)},Oy().prototype.neg=function(){return this.throwIfDisposed(),lS(this)},Oy().prototype.norm=function(t,e,n){return this.throwIfDisposed(),U_(this,t,e,n)},Oy().prototype.notEqual=function(t){return this.throwIfDisposed(),uS(this,t)},Oy().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),cS(this,t,e,n)},Oy().prototype.onesLike=function(){return this.throwIfDisposed(),pS(this)},Oy().prototype.pad=function(t,e){return this.throwIfDisposed(),fS(this,t,e)};const WT=dv({pool_:function(t,e,n,r,i,s,a){null==i&&(i=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=cv(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=nw(o,[1,o.shape[0],o.shape[1],o.shape[2]])),sf(Qb(s,i),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`));const c=Vb(l.shape,e,s,i,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),i=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],i[e]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),i=n.map((t=>t[1])),s=t.concat(r,i),a=e.map(((t,e)=>(t-s[e]%t)%t)),o=i.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",x=p?l:RI(l,h,f),y=("avg"===n?()=>rw(x,e,s,g,a):()=>qw(x,e,s,g,a))(),v=p?y:pT(y,h,m);return u?nw(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});Oy().prototype.pool=function(t,e,n,r,i,s){return this.throwIfDisposed(),WT(this,t,e,n,r,i,s)},Oy().prototype.pow=function(t){return this.throwIfDisposed(),z_(this,t)},Oy().prototype.prelu=function(t){return this.throwIfDisposed(),mS(this,t)};const VT=dv({prod_:function(t,e=null,n=!1){let r=cv(t,"x","prod");"bool"===r.dtype&&(r=Kv(r,"int32"));const i={x:r},s={axis:e,keepDims:n};return nv.runKernel(jg,i,s)}});Oy().prototype.prod=function(t,e){return this.throwIfDisposed(),VT(this,t,e)};const GT=dv({reciprocal_:function(t){const e={x:cv(t,"x","reciprocal")};return nv.runKernel(Zg,e)}});Oy().prototype.reciprocal=function(){return this.throwIfDisposed(),GT(this)},Oy().prototype.relu=function(){return this.throwIfDisposed(),wS(this)},Oy().prototype.relu6=function(){return this.throwIfDisposed(),JS(this)},Oy().prototype.reshapeAs=function(t){return this.throwIfDisposed(),nw(this,t.shape)},Oy().prototype.reshape=function(t){return this.throwIfDisposed(),nw(this,t)},Oy().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),E_(this,t,e,n)},Oy().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),A_(this,t,e,n)},Oy().prototype.reverse=function(t){return this.throwIfDisposed(),SS(this,t)},Oy().prototype.rfft=function(){return this.throwIfDisposed(),XS(this)},Oy().prototype.round=function(){return this.throwIfDisposed(),D_(this)},Oy().prototype.rsqrt=function(){return this.throwIfDisposed(),sM(this)},Oy().prototype.selu=function(){return this.throwIfDisposed(),_S(this)},Oy().prototype.separableConv2d=function(t,e,n,r,i,s){return this.throwIfDisposed(),kS(this,t,e,n,r,i,s)},Oy().prototype.sigmoid=function(){return this.throwIfDisposed(),IS(this)};const HT=dv({sign_:function(t){const e={x:cv(t,"x","sign")};return nv.runKernel(mx,e)}});Oy().prototype.sign=function(){return this.throwIfDisposed(),HT(this)},Oy().prototype.sin=function(){return this.throwIfDisposed(),GI(this)},Oy().prototype.sinh=function(){return this.throwIfDisposed(),jI(this)},Oy().prototype.slice=function(t,e){return this.throwIfDisposed(),MS(this,t,e)},Oy().prototype.softmax=function(t){return this.throwIfDisposed(),NS(this,t)},Oy().prototype.softplus=function(){return this.throwIfDisposed(),RS(this)},Oy().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),RI(this,t,e)},Oy().prototype.split=function(t,e){return this.throwIfDisposed(),DS(this,t,e)},Oy().prototype.sqrt=function(){return this.throwIfDisposed(),LS(this)},Oy().prototype.square=function(){return this.throwIfDisposed(),aS(this)},Oy().prototype.squaredDifference=function(t){return this.throwIfDisposed(),q_(this,t)},Oy().prototype.squeeze=function(t){return this.throwIfDisposed(),FS(this,t)},Oy().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Py?[this,t]:[this,...t];return $S(n,e)},Oy().prototype.step=function(t){return this.throwIfDisposed(),QS(this,t)};const jT=dv({stridedSlice_:function(t,e,n,r,i=0,s=0,a=0,o=0,l=0){const u={x:cv(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return nv.runKernel(Ax,u,c)}});Oy().prototype.stridedSlice=function(t,e,n,r,i,s,a,o){return this.throwIfDisposed(),jT(this,t,e,n,r,i,s,a,o)},Oy().prototype.sub=function(t){return this.throwIfDisposed(),Ww(this,t)},Oy().prototype.sum=function(t,e){return this.throwIfDisposed(),Vw(this,t,e)};const qT=dv({tan_:function(t){const e={x:cv(t,"x","tan","float32")};return nv.runKernel(Fx,e)}});Oy().prototype.tan=function(){return this.throwIfDisposed(),qT(this)},Oy().prototype.tanh=function(){return this.throwIfDisposed(),PS(this)},Oy().prototype.tile=function(t){return this.throwIfDisposed(),Nw(this,t)},Oy().prototype.toBool=function(){return this.throwIfDisposed(),Kv(this,"bool")},Oy().prototype.toFloat=function(){return this.throwIfDisposed(),Kv(this,"float32")},Oy().prototype.toInt=function(){return this.throwIfDisposed(),Kv(this,"int32")};const XT=dv({topk_:function(t,e=1,n=!0){const r=cv(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const s={x:r},a={k:e,sorted:n},[o,l]=nv.runKernel(Ox,s,a);return{values:o,indices:l}}});Oy().prototype.topk=function(t,e){return this.throwIfDisposed(),XT(this,t,e)},Oy().prototype.transpose=function(t){return this.throwIfDisposed(),HS(this,t)};const KT=dv({unique_:function(t,e=0){const n=cv(t,"x","unique","string_or_numeric");sf(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},i={axis:e},[s,a]=nv.runKernel(Ux,r,i);return{values:s,indices:a}}});Oy().prototype.unique=function(t){return this.throwIfDisposed(),KT(this,t)},Oy().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),oM(this,t,e)},Oy().prototype.unstack=function(t){return this.throwIfDisposed(),BS(this,t)},Oy().prototype.where=function(t,e){return this.throwIfDisposed(),US(t,this,e)},Oy().prototype.zerosLike=function(){return this.throwIfDisposed(),WS(this)};class YT extends Error{constructor(t){super(t),Object.setPrototypeOf(this,YT.prototype)}}class ZT extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ZT.prototype)}}class JT extends Error{constructor(t){super(t),Object.setPrototypeOf(this,JT.prototype)}}class QT extends Error{constructor(t){super(t),Object.setPrototypeOf(this,QT.prototype)}}class tC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tC.prototype)}}class eC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,eC.prototype)}}class nC{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function rC(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function iC(t,e){if(!t)throw new tC(e)}function sC(t,e){let n=0;for(const r of t)r===e&&n++;return n}function aC(t){return 1===t.length?t[0]:t}function oC(t){return Array.isArray(t)?t:[t]}function lC(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function uC(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let cC={};function hC(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function dC(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>dC(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?dC(e):t[n]=e.value)}}}function pC(t,e={},n={},r="object",i=!1){if("string"==typeof t){const i=t;let s;if(i in n)s=n[i];else if(i in cC)s=cC[i];else if(s=e[i],null==s)throw new JT(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new JT(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const a=s.className;let o,l;if(a in n?[o,l]=n[a]:a in cC?[o,l]=cC.className:a in e&&([o,l]=e[a]),null==o)throw new JT(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(cC))t[e]=cC[e];for(const e of Object.keys(n))t[e]=n[e];s.config.customObjects=t;const e=Object.assign({},cC);for(const t of Object.keys(n))cC[t]=n[t];dC(s.config);const r=l(o,s.config,n,i);return cC=Object.assign({},e),r}{const t=Object.assign({},cC);for(const t of Object.keys(n))cC[t]=n[t];const e=new o(s.config);return cC=Object.assign({},t),e}}}function fC(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function mC(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function gC(t){if(null==t)throw new JT(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function xC(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new JT(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function yC(t,e,n=0,r=1/0){return iC(n>=0),iC(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function vC(t,e){Array.isArray(t)?(sf(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>vC(t,`element ${n+1} of ${e}`)))):sf(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${bC(t)}.`))}function bC(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>bC(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function wC(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let SC=0;function _C(){return SC++}const kC={};function IC(t=""){return t in kC||(kC[t]=0),kC[t]+=1,t+kC[t].toString()}const MC=["channelsFirst","channelsLast"],TC=["nearest","bilinear"],CC=["valid","same","causal"],EC=["max","avg"],AC=["sum","mul","concat","ave"],NC=new Map;function RC(t){xC(MC,"DataFormat",t)}function DC(t){xC(CC,"PaddingMode",t)}function LC(t){xC(EC,"PoolMode",t)}const FC=[];function $C(t,e){FC.push(t);try{const t=e();return FC.pop(),t}catch(t){throw FC.pop(),t}}function PC(t){if(!BC(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===FC.length?"":FC.join("/")+"/")+t}function OC(t){if(!BC(t))throw new Error("Not a valid tensor name: '"+t+"'");NC.has(t)||NC.set(t,0);const e=NC.get(t);if(NC.set(t,NC.get(t)+1),e>0){const n=`${t}_${e}`;return NC.set(n,1),n}return t}const zC=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function BC(t){return!!t.match(zC)}function UC(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let i=e;i<n;++i)r*=t[i];return r}function WC(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function VC(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function GC(t,e){if(e<t)throw new JT(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}let HC;function jC(){return null==HC&&(HC=Db().epsilon()),HC}function qC(t,e){return Kv(t,e)}function XC(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),nw(t,n)}function KC(t,e,n){return Eb((()=>{switch(t.rank){case 1:return TS(t,e,n);case 2:return CS(t,[e,0],[n,t.shape[1]]);case 3:return ES(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return AS(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return MS(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return MS(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new JT(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function YC(t,e,n){return Eb((()=>{switch(t.rank){case 1:return TS(t,e,n);case 2:return CS(t,[0,e],[t.shape[0],n]);case 3:return ES(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return AS(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new JT(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ZC(t,e,n,r){return Eb((()=>{switch(t.rank){case 1:return TS(t,e,n);case 2:switch(r){case 1:return KC(t,e,n);case 2:return YC(t,e,n);default:throw new JT(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return KC(t,e,n);case 2:return ES(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return YC(t,e,n);default:throw new JT(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return KC(t,e,n);case 2:return AS(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return AS(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return YC(t,e,n);default:throw new JT(`The axis is not within the rank of the tensor ${r}`)}default:throw new JT(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function JC(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),dw(t,e)}function QC(t,e){switch(t.rank){case 1:return pw([t,e]);case 2:return fw([t,e],0);case 3:return mw([t,e],0);case 4:return gw([t,e],0);default:throw new JT(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function tE(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new JT(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Nw(t,e)}function eE(t,e=0,n=1,r,i){return vS(t,e,n,r,i)}function nE(t,e,n,r){if(t.rank<2||e.rank<2)throw new QT(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new QT(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return o_({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?sE(t.rank,r,"channelsLast"):null,activation:n});{const i=t.shape.slice(),s=i.pop();t=nw(t,[-1,s]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=nw(HS(e,c),[l,-1]);const h=[...i,...u];return nw(o_({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?sE(t.rank,r,"channelsLast"):null,activation:n}),h)}}function rE(t,e,n){return Eb((()=>(e=Array.isArray(e)?OS(e,"int32"):Kv(e,"int32"),Lw(t,e,n))))}function iE(t){return Uw(t,t)}function sE(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new JT(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?nw(e,[1,r[0],1,1,1]):nw(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?nw(e,[1,1,1,1,r[0]]):nw(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?nw(e,[1,r[0],1,1]):nw(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?nw(e,[1,1,1,r[0]]):nw(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?nw(e,[1,r[0],1]):nw(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?nw(e,[1,1,r[0]]):nw(e,[1].concat(r))}else if(t<3)return e;throw new JT(`Unsupported input rank by biasAdd: ${e.rank}`)}function aE(t,e,n){return Eb((()=>(null==n&&(n="channelsLast"),RC(n),Ob(t,sE(t.rank,e,n)))))}function oE(t,e,n,r){return Eb((()=>jS(t,e,n,r)))}function lE(t,e,n=!1){return n?t():e()}const uE=["fanIn","fanOut","fanAvg"],cE=["normal","uniform","truncatedNormal"];class hE extends kb{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dE extends hE{apply(t,e){return hS(t,e)}}dE.className="Zeros",Mb(dE);class pE extends hE{apply(t,e){return dS(t,e)}}pE.className="Ones",Mb(pE);class fE extends hE{constructor(t){if(super(),"object"!=typeof t)throw new JT(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new JT(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Eb((()=>Uw(Fb(this.value),dS(t,e))))}getConfig(){return{value:this.value}}}fE.className="Constant",Mb(fE);class mE extends hE{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return bS(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}mE.className="RandomUniform",Mb(mE);class gE extends hE{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new QT(`randomNormal does not support dType ${e}.`);return eE(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gE.className="RandomNormal",Mb(gE);class xE extends hE{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new QT(`truncatedNormal does not support dType ${e}.`);return zS(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xE.className="TruncatedNormal",Mb(xE);class yE extends hE{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Eb((()=>{if(2!==t.length||t[0]!==t[1])throw new JT("Identity matrix initializer can only be used for 2D square matrices.");return Uw(this.gain,Rw(t[0]))}))}getConfig(){return{gain:this.gain}}}yE.className="Identity",Mb(yE);class vE extends hE{constructor(t){if(super(),t.scale<0)throw new JT(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,xC(uE,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){xC(cE,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(RC(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=UC(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=UC(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=UC(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],i=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,i):s/=Math.max(1,(r+i)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new QT(`${this.getClassName()} does not support dType ${e}.`);return zS(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return bS(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}vE.className="VarianceScaling",Mb(vE);class bE extends vE{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vE.className}}bE.className="GlorotUniform",Mb(bE);class wE extends vE{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vE.className}}wE.className="GlorotNormal",Mb(wE);class SE extends vE{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vE.className}}SE.className="HeNormal",Mb(SE);class _E extends vE{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vE.className}}_E.className="HeUniform",Mb(_E);class kE extends vE{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vE.className}}kE.className="LeCunNormal",Mb(kE);class IE extends vE{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vE.className}}IE.className="LeCunNormal",Mb(IE);class ME extends hE{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new QT("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Eb((()=>{if(t.length<2)throw new QT("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=eE(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Y_.gramSchmidt(e);return t[0]>t[1]&&(n=HS(n)),Uw(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ME.className="Orthogonal",Mb(ME);const TE={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function CE(t,e={}){return pC(t,Ib.getMap().classNameMap,e,"initializer")}function EE(t){return hC(t)}function AE(t){if("string"==typeof t){const e=t in TE?TE[t]:t;if("GlorotNormal"===e)return new wE;if("GlorotUniform"===e)return new bE;if("HeNormal"===e)return new SE;if("HeUniform"===e)return new _E;if("LeCunNormal"===e)return new kE;if("LeCunUniform"===e)return new IE;{const t={};return t.className=e,t.config={},CE(t)}}return t instanceof hE?t:CE(t)}function NE(t){return Array.isArray(t)&&Array.isArray(t[0])}function RE(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function DE(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new JT(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function LE(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new JT(`Expected exactly 1 Shape; got ${t.length}`)}return t}function FE(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class $E{constructor(t,e="float32",n="Variable",r=!0,i=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=_C(),n=null==n?"Variable":n,this.originalName=PC(n),this.name=OC(this.originalName),this.trainable_=r,this.constraint=i,this.val=function(t,e=!0,n,r){return nv.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function PE(t){return t.map((t=>t.read()))}function OE(t){t.forEach((t=>{t[0].write(t[1])}))}class zE{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class BE{constructor(t,e,n,r,i,s,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=_C(),null!=s&&(this.originalName=PC(s),this.name=OC(this.originalName)),this.rank=e.length}}let UE=0;class WE{constructor(t,e){this.callArgs=e,this.id=UE++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let VE=0;class GE extends kb{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=VE++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=lC(t)+"_"+IC(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new ZT(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new JT(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return aC(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return aC(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new YT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new YT(`Layer ${this.name} is not connected, no input to return.`);return aC(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new YT(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new YT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return aC(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=oC(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=oC(this.inputSpec);if(t.length!==e.length)throw new JT(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],i=e[n];if(null==i)continue;const s=r.rank;if(null!=i.ndim&&s!==i.ndim)throw new JT(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${s}`);if(null!=i.maxNDim&&s>i.maxNDim)throw new JT(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${s}`);if(null!=i.minNDim&&s<i.minNDim)throw new JT(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${s}.`);if(null!=i.dtype&&r.dtype!==i.dtype)throw new JT(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const t=r.shape;for(const e in i.axes){const r=Number(e),s=i.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(a))throw new JT(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=i.shape)for(let t=0;t<i.shape.length;++t){const e=i.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new JT(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=oC(t);let r=!0;for(const t of n)if(!(t instanceof BE)){r=!1;break}let i=!0;for(const t of n)if(t instanceof BE){i=!1;break}if(r===i)throw new JT("Arguments to apply() must be all SymbolicTensors or all Tensors");return $C(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of oC(t))e.push(n.shape);this.build(aC(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let r=this.call(t,e);const i=oC(r),s=[];for(let t of i)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=aC(s),null!=this.activityRegularizer)throw new QT("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=oC(t);const e=[];for(const n of t)e.push(n.shape);return aC(e)}(t),r=this.computeOutputShape(n);let i;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),i=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new BE(s,n,this,oC(t),e,this.name,r))):new BE(s,r,this,oC(t),e,this.name),this.addInboundNode(t,i,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new QT("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new YT(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new YT(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ZT(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return FE(this.weights)}build(t){this.built=!0}getWeights(t=!1){return PE(t?this.trainableWeights:this.weights)}setWeights(t){Eb((()=>{const e=this.weights;if(e.length!==t.length)throw new JT(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=PE(e);for(let i=0;i<r.length;++i){const s=r[i],a=e[i],o=t[i];if(!cf(s.shape,o.shape))throw new JT(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}OE(n)}))}addWeight(t,e,n,r,i,s,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new JT(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():AE("zeros"));const l=r.apply(e,n),u=new $E(l,n,t,s,a);return l.dispose(),null!=i&&this.addLoss((()=>i.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=oC(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,i,s,a=null){const o=oC(t);e=oC(e),n=oC(n),r=oC(r),i=RE(i),s=RE(s);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new WE({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:i,outputShapes:s},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function HE(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=HE(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class jE extends GE{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:IC("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new JT("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new JT("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new JT("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new BE(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new WE({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new JT(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}jE.className="InputLayer",Mb(jE);class qE{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof qE)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new JT(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Kv(e,t.dtype)}catch(n){throw new JT(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof BE){if(null==this.id2Value[t.id])throw new JT(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new JT(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof BE){if(null==this.id2Value[t.id])throw new JT(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new JT(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ab(this.id2Mask)}}const XE=new nC,KE=new nC;function YE(t,e,n,r){const i=null!=n&&n.training,s=Array.isArray(t),a=s?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().sort().join(",");let h,d=XE.get(c);if(null==d){const t=function(t,e){sf(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const i=JE(t[0],e);n=i.sorted,r=i.recipientMap}else{const i=new Set;for(const s of t){const{sorted:t,recipientMap:a}=JE(s,e);for(const e of t)i.has(e.name)||(n.push(e),i.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ZE(r)}}(a,e);d=t.sorted,h=t.recipientCounts,XE.put(c,d),KE.put(c,h)}h={},i||Object.assign(h,KE.get(c));const p=new qE(e);for(let t=0;t<d.length;++t){if(null!=r){const t=Cb().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const s=d[t],a=s.sourceLayer;if(a instanceof jE)continue;const u=[],c=[],f=[];let m=!1;for(const t of s.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),i||(h[t.name]--,0!==h[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=oC(a.apply(u,n));let x=null;a.supportsMasking&&(x=a.computeMask(u,c));const y=QE(s),v=Array.isArray(y)?y:[y];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(x)?x[0]:x);const e=o.indexOf(v[t].name);-1!==e&&(l[e]=g[t])}i||Ab(f)}return p.disposeMasks(),s?l:l[0]}function ZE(t){const e={};for(const n in t)e[n]=t[n].size;return e}function JE(t,e){const n=new Set,r=[],i={};for(const t of e.names())n.add(t);const s=[],a=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=a[a.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(s.length-1);for(const e of t.inputs)null==i[e.name]&&(i[e.name]=new Set),i[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:i}}function QE(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function tA(t,e){return Eb((()=>LS(Vw(Uw(t,t),e,!0))))}Bf().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=XE&&XE.setMaxEntries(t),null!=KE&&KE.setMaxEntries(t)}));class eA extends kb{getConfig(){return{}}}class nA extends eA{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eb((()=>{const e=tA(t,this.axis),n=hw(e,0,this.maxValue);return Uw(t,Mw(n,Ob(jC(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}nA.className="MaxNorm",Mb(nA);class rA extends eA{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eb((()=>Mw(t,Ob(jC(),tA(t,this.axis)))))}getConfig(){return{axis:this.axis}}}rA.className="UnitNorm",Mb(rA);class iA extends eA{apply(t){return wS(t)}}iA.className="NonNeg",Mb(iA);class sA extends eA{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Eb((()=>{const e=tA(t,this.axis),n=Ob(Uw(this.rate,hw(e,this.minValue,this.maxValue)),Uw(1-this.rate,e));return Uw(t,Mw(n,Ob(jC(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}sA.className="MinMaxNorm",Mb(sA);const aA={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function oA(t){return hC(t)}function lA(t,e={}){return pC(t,Ib.getMap().classNameMap,e,"constraint")}function uA(t){return null==t?null:"string"==typeof t?lA({className:t in aA?aA[t]:t,config:{}}):t instanceof eA?t:lA(t)}async function cA(t){if(null==t)return;const e=[],n=[],r=[];for(const i in t){const s=t[i];if("number"!=typeof s){const t=s;e.push(t.data()),n.push(i),r.push(t)}}if(e.length>0){const i=await Promise.all(e);for(let e=0;e<i.length;++e)t[n[e]]=i[e][0];Ab(r)}}function hA(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var dA;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(dA||(dA={}));class pA{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class fA{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class mA extends pA{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const i=Eb((()=>Ob(this.totals[t],Uw(r,n))));this.totals[t]=i,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Eb((()=>{const n=Uw(Mw(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Nb(e[t])})))}}class gA extends pA{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const i=this.history[r];for(let s=0;s<i.length;++s)if("number"!=typeof i[s]){const a=i[s];t.push(a.data()),e.push(r),n.push(s)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class xA extends pA{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||ok,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");kf(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,i=null!=n?n():Sy();return(...s)=>{const a=null!=n?n():Sy();return a-i<e||(i=a,r=t(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await cA(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await cA(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await cA(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await cA(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await cA(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):kf(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await cA(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await cA(t),await this.trainEnd(t))}}function yA(t,e){return null==t&&(t={}),t instanceof pA?[t]:Array.isArray(t)&&t[0]instanceof pA?t:oC(t).map((t=>new xA(t,e)))}class vA{constructor(){}static registerCallbackConstructor(t,e){sf(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),vA.checkForDuplicate(e),null==vA.constructors[t]&&(vA.constructors[t]=[]),vA.constructors[t].push(e)}static checkForDuplicate(t){for(const e in vA.constructors)vA.constructors[+e].forEach((e=>{if(e===t)throw new JT("Duplicate callback constructor.")}))}static clear(){vA.constructors={}}static createCallbacks(t){const e=[];for(const n in vA.constructors){const r=+n;t>=r&&e.push(...vA.constructors[r])}return e.map((t=>new t))}}function bA(t,e,n,r,i,s,a,o,l){const u=new gA,c=[new mA,...vA.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new fA(c);return h.setParams({epochs:n,initialEpoch:r,samples:i,steps:s,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function wA(t,e={},n=!1){return pC(t,Ib.getMap().classNameMap,e,"layer",n)}function SA(t,e){return Eb((()=>{"float32"!==t.dtype&&(t=Kv(t,"float32"));const n=Vw(iE(t),e,!0),r=cw(n.shape,jC()),i=LS(Kw(n,r));return Mw(t,i)}))}function _A(t,e){return Eb((()=>Yw(iE(Ww(e,t)),-1)))}function kA(t,e){return Eb((()=>Yw(Pb(Ww(e,t)),-1)))}function IA(t,e){return Eb((()=>{const n=Ww(t,e),r=hw(Pb(t),jC(),Number.MAX_VALUE),i=Pb(Mw(n,r));return Uw(100,Yw(i,-1))}))}function MA(t,e,n=!1){return Eb((()=>{if(n)e=NS(e);else{const t=Vw(e,e.shape.length-1,!0);e=Mw(e,t)}return e=hw(e,jC(),1-jC()),lS(Vw(Uw(Kv(t,"float32"),Ow(e)),e.shape.length-1))}))}function TA(t,e,n=!1){return Eb((()=>{const r=Kv(Dw(function(t){const e=[UC(t.shape)];return nw(t,e)}(t)),"int32"),i=(e=hw(e,jC(),1-jC())).shape;return MA(nw(cS(r,i[i.length-1]),i),e,n)}))}function CA(t,e){return Eb((()=>{let n;return n=hw(e,jC(),1-jC()),n=Ow(Mw(n,Ww(1,n))),Yw(function(t,e){if(!cf(t.shape,e.shape))throw new JT(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Eb((()=>{const n=wS(e),r=lS(Pb(e));return Ob(Ww(n,Uw(e,t)),zw(Ew(r)))}))}(t,n),-1)}))}function EA(t,e){return Eb((()=>{const n=SA(t,-1),r=SA(e,-1),i=Uw(n,r);return lS(Vw(i,-1))}))}vA.constructors={};const AA={meanSquaredError:_A,meanAbsoluteError:kA,meanAbsolutePercentageError:IA,meanSquaredLogarithmicError:function(t,e){return Eb((()=>{const n=hw(e,jC(),Number.MAX_VALUE),r=Ow(Ob(1,n)),i=hw(t,jC(),Number.MAX_VALUE),s=Ow(Ob(1,i));return Yw(iE(Ww(r,s)),-1)}))},squaredHinge:function(t,e){return Eb((()=>{const n=Kw(0,Ww(1,Uw(t,e)));return Yw(iE(n),-1)}))},hinge:function(t,e){return Eb((()=>{const n=Kw(0,Ww(1,Uw(t,e)));return Yw(n,-1)}))},categoricalHinge:function(t,e){return Eb((()=>{const n=Vw(Uw(t,e),-1),r=Bw(Uw(Ww(1,t),e),-1);return Kw(0,Ob(1,Ww(r,n)))}))},logcosh:function(t,e){return Eb((()=>{const n=Math.log(2),r=Ww(e,t),i=Ww(Ob(r,RS(Uw(-2,r))),n);return Yw(i,-1)}))},categoricalCrossentropy:MA,sparseCategoricalCrossentropy:TA,binaryCrossentropy:CA,kullbackLeiblerDivergence:function(t,e){return Eb((()=>{const n=hw(t,jC(),1),r=hw(e,jC(),1);return Vw(Uw(t,Ow(Mw(n,r))),-1)}))},poisson:function(t,e){return Eb((()=>{const n=Ow(Ob(jC(),e));return Yw(Ww(e,Uw(t,n)),-1)}))},cosineProximity:EA};function NA(t){if("string"==typeof t){if(t in AA)return AA[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new JT(e)}return t}function RA(t,e){return Eb((()=>{const n=Uw(.5,pS(e)),r=qC(Fw(e,n),t.dtype);return Yw(Cw(t,r),-1)}))}function DA(t,e){return Eb((()=>qC(Cw(Ub(t,-1),Ub(e,-1)),"float32")))}function LA(t,e){return CA(t,e)}function FA(t,e){return t.rank===e.rank&&(t=FS(t,[t.rank-1])),(e=Ub(e,-1)).dtype!==t.dtype&&(e=Kv(e,t.dtype)),Kv(Cw(t,e),"float32")}const $A=MA,PA=TA,OA={binaryAccuracy:RA,categoricalAccuracy:DA,precision:function(t,e){return Eb((()=>{const n=function(t,e){return Eb((()=>Kv(Vw(Hw(Cw(t,1),Cw(e,1))),"float32")))}(t,e),r=function(t,e){return Eb((()=>Kv(Vw(Hw(Cw(t,0),Cw(e,1))),"float32")))}(t,e),i=Ob(n,r);return Kv(US(Fw(i,0),Mw(n,i),0),"float32")}))},categoricalCrossentropy:$A,sparseCategoricalCrossentropy:PA,mse:_A,MSE:_A,mae:kA,MAE:kA,mape:IA,MAPE:IA,cosine:EA};function zA(t){if("string"==typeof t&&t in OA)return OA[t];if("string"!=typeof t&&null!=t)return t;throw new JT(`Unknown metric ${t}`)}function BA(t){if(iC(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(AA))if(AA[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(OA))if(OA[n]===t){e=n;break}return void 0!==e?e:t.name}}function UA(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!WA(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function WA(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!WA(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!WA(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function VA(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function GA(t,e,n){let r,i;try{i=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){i="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}VA([`${t.name} (${t.getClassName()})`,i,r,t.countParams().toString()],e,n)}function HA(t,e,n,r){let i,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){s="multiple"}try{i=JSON.stringify(t.outputShape)}catch(t){i="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],i=e.tensorIndices[t];a.push(`${n}[${r}][${i}]`)}const o=t.name,l=t.getClassName(),u=0===a.length?"":a[0];VA([`${o} (${l})`,s,i,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)VA(["","","","",a[t]],e,r)}function jA(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function qA(t,e){if(null===t)return null;if("string"==typeof t)return uC(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];jA(e,i,r)?n.push(r):n.push(qA(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=uC(n);e[t]=qA(r,t)}}return e}}function XA(t,e){if(null==t)return null;if("string"==typeof t)return lC(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];jA(e,i,r)?n.push(r):n.push(XA(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[lC(n)]="name"!==n&&"className"!==n||"string"!=typeof r?XA(r,n):r}return e}}class KA extends GE{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=IC(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],mC(this.inputs).length!==this.inputs.length)throw new JT(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);mC(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;iC(0===n,"input layer has >1 nodes"),iC(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof jE))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},i={},s={},a=[],o=(t,e,n,r,i,l)=>{null!=r&&null!=i&&null!=l||(r=t.sourceLayer,i=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[i];if(-1!==n.indexOf(u))throw new ZT(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(KA.nodeKey(r,i)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],i=u.inboundLayers[t],s=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,i,s,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let s=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];s=Math.max(s,a),r[t.outboundLayer.id]=s,i[t.outboundLayer.id]=t.outboundLayer,e[t.id]=s;for(let r=0;r<t.inboundLayers.length;r++){const i=t.inboundLayers[r],a=t.nodeIndices[r],o=i.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(s+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(i[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(fC);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof KA&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(fC);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ZT(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new ZT(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new WE({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new JT("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new JT(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const i=[];for(const r in t){let s=r;if(null==n[r]){const t=r.split("/");s=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[s])i.push([n[s],t[r]]);else if(e)throw new JT(`Provided weight data has no target variable: ${r}`);delete n[s]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new JT(`${t.length} of ${r} weights are not set: ${t}`)}OE(i)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.21.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=XA(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Eb((()=>{t=oC(t);const n=new qE;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return YE(this.outputs,n,e)}))}computeMask(t,e){return Eb((()=>{let n;return t=oC(t),n=null==e?rC(null,t.length):oC(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=RE(t);if(e.length!==this.inputLayers.length)throw new JT(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],i=e[t];n[r.name+"_0_0"]=i}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(fC);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const i=t.inboundLayers[e],s=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${i.name}_${s}_${a}`];r.push(o)}const i=RE(e.computeOutputShape(aC(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++)n[`${e.name}_${s}_${t}`]=i[t]}}const i=[],s=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],i=`${e.name}_${n}_${r}`;s.push(i)}for(let t=0;t<s.length;t++){const e=s[t];iC(e in n),i.push(n[e])}return aC(i)}runInternalGraph(t,e){null==e&&(e=rC(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const i=this.inputs[r],s=t[r],a=e[r];n[i.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(fC);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,i=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),o=oC(e.call(t,u)),l=oC(e.computeMask(t,n)),r=[t],a=[n]}else r=s.map((t=>t[0])),a=s.map((t=>t[1])),null==u.mask&&(u.mask=a),o=oC(e.call(r,u)),l=oC(e.computeMask(r,a));if(e.activityRegularizer)throw new QT("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<i.length;++t){const e=i[t],r=o[t],s=l[t];n[e.id]=[r,s]}}}}const i=[],s=[],a=[];for(const t of this.outputs){iC(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),i.push(e),s.push(r)}return[i,s,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof KA?1:0;for(let r=0;r<t.inboundNodes.length;r++){const i=KA.nodeKey(t,r);this.containerNodes.has(i)&&(e[i]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new JT(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new JT("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new JT(`No such layer: ${t}`)}calculateLosses(){return Eb((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=KA.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),i=t.getConfig(),s=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],i=KA.nodeKey(t,n);let a={};if(this.containerNodes.has(i)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const i=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[KA.nodeKey(i,s)];null==l&&(l=0),t.push([i.name,l,o,a])}s.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=i,a.inboundNodes=s,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],i=this.inputLayersNodeIndices[t],s=KA.nodeKey(n,i);if(!this.containerNodes.has(s))continue;let a=e[s];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const i=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],s=KA.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let a=e[s];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];i.push([n.name,a,o])}return t.outputLayers=i,t}static fromConfig(t,e,n={},r=!1){const i={},s={};function a(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in i))return void a(t,e);const c=i[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(aC(n),r)}function l(t){const n=t.name,s=wA(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),i[n]=s,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new JT(`Corrupted configuration, expected array for nodeData: ${t}`);a(s,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!gC(s);)for(const t of c){const e=i[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];iC(e in i);const s=i[e].inboundNodes[n].outputTensors;h.push(s[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];iC(e in i);const s=i[e].inboundNodes[n].outputTensors;d.push(s[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new JT("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Eb((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function YA(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function ZA(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Eb((()=>{if(1===t.shape.length)return Yv(t);if(2===t.shape.length){if(t.shape[1]>1)return Ub(t,1);if(1===t.shape[1])return nw(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Ab(e);const i=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);i.push(n[t])})),OS(i,"float32")}return null}function JA(t,e){return Uw(t,e)}function QA(t,e){let n,r;const i=e;n=i.xs,r=i.ys,sf(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const s=tN("input",t.inputNames,n),a=tN("output",t.outputNames,r),o=s[0].shape[0];sf(s.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),sf(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<s.length;e++)sf(s[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${s[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)sf(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:s,ys:a}}function tN(t,e,n){if(n instanceof Py)return[n];if(Array.isArray(n))return sf(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const i of e){if(null==n[i])throw new JT(`The feature data generated by the dataset lacks the required ${t} key '${i}'.`);r.push(n[i])}return r}}function eN(t){return"function"==typeof t.iterator}function nN(t){sf(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function rN(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>KC(t,e,n-e))):KC(t,e,n-e)}function iN(t,e){return Eb((()=>null==t?null:Array.isArray(t)?t.map((t=>iN(t,e))):rE(t,"int32"===e.dtype?e:Kv(e,"int32"))))}function sN(t,e){const n=[];let r=0,i=null;for(;r<t;)i=r+e,i>=t&&(i=t),n.push([r,i]),r=i;return n}function aN(t){const e=[];t instanceof Py&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(XC(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function oN(t,e){if(null==t)return;const n=[];if(e instanceof Py)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Py)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const i=t[e];-1===n.indexOf(i.id)&&r.push(i)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function lN(t){return Array.isArray(t)}function uN(t){return!function(t){return t instanceof Py}(t)&&!lN(t)}function cN(t,e,n,r=!0,i=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(lN(t)&&t.length>0)e=!0;else if(uN(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new JT(`Error when checking model ${i} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let s;if(uN(t)){s=[];for(const n of e){if(null==t[n])throw new JT(`No data provided for "${n}". Need data for each key in: ${e}`);s.push(t[n])}}else if(lN(t)){if(t.length!==e.length)throw new JT(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);s=t}else{if(e.length>1)throw new JT(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);s=[t]}if(s=aN(s),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=s[t];if(a.shape.length!==n[t].length)throw new JT(`Error when checking ${i}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!r)continue;const s=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&s!==o)throw new JT(`${i} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function hN(t,e,n,r=!0,i=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new JT(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new JT(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);s=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=s[t];if(a.shape.length!==n[t].length)throw new JT(`Error when checking ${i}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let s=0;s<n[t].length;++s){if(0===s&&!r)continue;const o=a.shape[s],l=n[t][s];if(null!=l&&l!==o)throw new JT(`Error when checking ${i}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class dN extends KA{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new JT("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const i=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const i of n.inboundNodes)if(-1!==r.indexOf(i)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(i?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!i){s.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),VA(s,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)i?GA(o[t],n,r):HA(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?FE(t.collectedTrainableWeights):FE(t.trainableWeights),e}(t),u=FE(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>sk.adagrad(.01),Adadelta:()=>sk.adadelta(1,.95,jC()),Adam:()=>sk.adam(.001,.9,.999,jC()),Adamax:()=>sk.adamax(.002,.9,.999,jC(),0),RMSProp:()=>sk.rmsprop(.001,.9,0,jC()),SGD:()=>sk.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new JT(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof $b))throw new JT("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new JT(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>NA(t)))}else{const n=NA(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new JT(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(NA(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],$C("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),i=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};$C("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,s;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let i;1===e[e.length-1]||this.lossFunctions[t]===CA?-1!==["accuracy","acc"].indexOf(a)?r=RA:-1!==["crossentropy","ce"].indexOf(a)&&(r=LA):this.lossFunctions[t]===TA?-1!==["accuracy","acc"].indexOf(a)?r=FA:-1!==["crossentropy","ce"].indexOf(a)&&(r=PA):-1!==["accuracy","acc"].indexOf(a)?r=DA:-1!==["crossentropy","ce"].indexOf(a)&&(r=$A),-1!==["accuracy","acc"].indexOf(a)?i="acc":-1!==["crossentropy","ce"].indexOf(a)&&(i="ce"),s=r,n=""+i}else{const t=zA(a);s=t,n=""+BA(a)}let e;$C(n,(()=>{e=s})),i(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;nN(r);const i=this.standardizeUserDataXY(t,e,!0,r);try{const s=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction;return aC(this.testLoop(a,s,r,n.verbose,n.steps))}finally{oN(i[0],t),oN(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,i=t.testFunction;let s=[];if(n.verbose>0)throw new QT("Verbose mode is not implemented yet.");sf(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(s=Eb((()=>{if(e.value){const{xs:n,ys:r}=QA(t,e.value),a=n.concat(r),u=Eb((()=>i(a)));if(Ab(a),0===l)for(let t=0;t<u.length;++t)s.push(Fb(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=s[t];s[t]=Eb((()=>Ob(s[t],Uw(c,e)))),l>0&&Ab(n)}Ab(u),o+=c,++l}return s})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<s.length;++t){const e=s[t];s[t]=Mw(s[t],o),Ab(e)}return aC(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let i;if(null!=n){if(i=null,null!=e)throw new JT(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new JT(`Either the input data should have a defined shape, or ${r} shoud be specified.`);i=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return i}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new JT("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],i=this.retrieveSymbolicTensors(r),s=new qE;if(t instanceof Py&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new JT(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new JT(`No value is provided for the model's input ${e.name}`);s.add(e,n)}const a=YE(i,s);return n?a:a[0]}retrieveSymbolicTensors(t){const e=rC(null,t.length);let n=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],s=i.map((t=>t.name));for(let r=0;r<t.length;++r){const a=s.indexOf(t[r]);if(-1!==a&&(e[r]=i[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new JT(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Eb((()=>{const r=this.checkNumSamples(t);if(n)throw new QT("Verbose predictLoop() is not implemented yet.");const i=sN(r,e),s=this.outputs.map((t=>[]));for(let e=0;e<i.length;++e)Eb((()=>{const n=i[e][0],r=i[e][1],s=rN(t,n,r),a=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)a.push({key:this.inputs[t],value:s[t]});else a.push({key:this.inputs[0],value:s});const o=new qE(a);return YE(this.outputs,o)})).forEach(((t,e)=>s[e].push(t)));return aC(s.map((t=>dw(t,0))))}))}predict(t,e={}){const n=aN(t);hN(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return nN(r),this.predictLoop(n,r)}finally{oN(n,t)}}predictOnBatch(t){hN(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new ZT("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===TA?i.push(e.slice(0,e.length-1).concat([1])):i.push(e)}if(function(t,e,n){const r=mC(t.map((t=>t.shape[0])));r.sort();const i=mC(e.map((t=>t.shape[0])));if(i.sort(),r.length>1)throw new JT(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(i.length>1)throw new JT(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&i.length>0&&!cf(r,i))throw new JT(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${i[0]} target sample(s).`)}(t=cN(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=cN(e,this.feedOutputNames,i,!1,"target")),function(t,e,n){const r=[_A,CA,MA];for(let i=0;i<t.length;++i){const s=t[i],a=e[i],o=n[i];if(null!=a){if(a===MA&&1===s.shape[s.shape.length-1])throw new JT(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],i=e[n];if(null!=i&&r!==i)throw new JT(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new JT(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,i=!0,s){const[a,o]=this.standardizeUserDataXY(t,e,i,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=YA(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await ZA(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,i){return Eb((()=>{const s=this.checkNumSamples(e,n,i,"steps"),a=[];if(r>0)throw new QT("Verbose mode is not implemented yet.");if(null!=i)throw new QT("steps mode in testLoop() is not implemented yet");{const r=sN(s,n),i=OS(GC(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=KC(i,s,o-s),u=iN(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Fb(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Ob(a[t],Uw(o-s,e))}}for(let t=0;t<a.length;++t)a[t]=Mw(a[t],s)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let i=r;sC(t,r)>1&&(i+=`_${sC(t.slice(0,n),r)}`),e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new qE(t),o=YE(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=i[t]&&(n=JA(n,i[t]));const s=Yw(n);e.push(s),l=0===t?n:Ob(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],i=this.metricsTensors[t][1];n=Yw(e(r[i],o[i]))}Nb(n),s.push(n)}return l=Yw(l),this.calculateLosses().forEach((t=>{l=Ob(l,t)})),l}),!0,a)].concat(s)}}makeTestFunction(){this.testFunction=t=>Eb((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const a=new qE(s),o=YE(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=Yw(r(i[t],o[t]));n=0===t?s:Ob(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=Yw(n(i[r],o[r]));e.push(s)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,s,a,o,l,u,c,h,d;t.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;nN(p);const f=!1,m=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,f,p);i=m[0],s=m[1],d=m[2];let g,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new QT("validationData including sample weights is not supported yet."):new JT(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(l,u,null,null,e,p);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const t=Math.floor(i[0].shape[0]*(1-r.validationSplit)),e=i[0].shape[0];c=rN(i,t,e),a=i,i=rN(i,0,t),h=rN(s,t,e),o=s,s=rN(s,0,t),g=c.concat(h)}else null!=r.validationSteps&&(x=!0);const y=i.concat(s).concat(d);t.checkTrainableWeightsConsistency();const v=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let w,S;x?(t.makeTestFunction(),w=t.testFunction,S=b.slice().concat(b.map((t=>"val_"+t)))):(w=null,g=[],S=b.slice());const _=yA(r.callbacks,r.yieldEvery),k=await async function(t,e,n,r,i,s,a,o,l,u,c,h,d,p,f){null==i&&(i=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,i,p,"steps_per_epoch");let x;null!=g&&(x=GC(0,g)),null==a&&(a=1);const{callbackList:y,history:v}=bA(o,a,s,d,g,p,i,m,h);y.setModel(t),t.history=v,await y.onTrainBegin(),t.stopTraining_=!1;for(let a=d;a<s;++a){await y.onEpochBegin(a);const s={};{if("batch"===c)throw new QT("batch shuffling is not implemneted yet");c&&tf(x);const a=OS(x),o=sN(g,i);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Eb((()=>{const d=o[c][0],p=o[c][1],f=KC(a,d,p-d);h.batch=c,h.size=p-d;const g=iN(n,f),x=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=x[t];h[e]=n,Nb(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,i);for(let t=0;t<r.length;++t){const n=r[t],i=e[t];Nb(i),s["val_"+n]=i}}})),await y.onBatchEnd(c,h),hA(h),t.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,v,y,b,p,r.epochs,r.verbose,_,w,g,r.shuffle,S,r.initialEpoch,null);return k}finally{t.isTraining=!1,oN(i,e),oN(s,n),oN(a,e),oN(o,n),oN(c,l),oN(h,u),null!=d&&Ab(d)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(sf(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),sf(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),sf(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),sf(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),sf(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const i=null!=n.validationData;let s,a;if(i)if(eN(n.validationData))sf(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new QT("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=i?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=yA(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=bA(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,i,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:i}=QA(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const a=[];if(null!=n.classWeight){const e=YA(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await ZA(i[t],null,e[t]))}const u=r.concat(i).concat(a),p=o(u);Ab(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];s[e]=n,Nb(n)}await d.onBatchEnd(h,s),hA(s),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(i){let e;e=eN(n.validationData)?oC(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):oC(t.evaluate(s,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],i=n[1],s=this.makeTrainFunction()(r.concat(i)),a=[];for(const t of s){const e=await t.data();a.push(e[0])}return Ab(s),oN(n[0],t),oN(n[1],e),aC(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,i=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:i[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Cb().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Cb().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=lC(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>lC(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=lC(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[lC(BA(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>lC(BA(t))));{const t={};for(const e in this.metrics)t[e]=lC(BA(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=wA(qA(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=uC(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>uC(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=uC(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>uC(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=uC(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,_v.getSaveHandlers(n));if(0===e.length)throw new JT(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new JT(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new JT("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await gv(this.getNamedWeights(e)),i={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.21.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await gv(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=bv([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;UA(this.userDefinedMetadata,this.name,t),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=r.data,i.weightSpecs=r.specs,t.save(i)}setUserDefinedMetadata(t){UA(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}dN.className="Model",Mb(dN);class pN extends dN{}pN.className="Functional",Mb(pN);class fN extends dN{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:IC("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new JT(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof fN||t instanceof dN;let n;if(e){if(n=t,1!==n.outputs.length)throw new JT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new JT("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new JT("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new JT("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new jE({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new JT(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new JT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=HE(this.outputs[0])}this.inboundNodes=[],new WE({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:rC(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(LE(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new dN({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new ZT("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new ZT("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new ZT("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new ZT("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let i,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new JT("Legacy serialization format not supported yet.");i=e}else sf(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),i=e.layers,delete e.layers,s=e;const a=new t(s);if(!(a instanceof fN))throw new QT(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of i){const e=wA(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new JT("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new JT("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}fN.className="Sequential",Mb(fN);class mN extends kb{getConfig(){return{}}}class gN extends mN{apply(t,e=1){return function(t,e=1){if(1!==e)throw new QT(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Tw(t)}(t,e)}}gN.className="elu",Mb(gN);class xN extends mN{apply(t){return _S(t)}}xN.className="selu",Mb(xN);class yN extends mN{apply(t){return wS(t)}}yN.className="relu",Mb(yN);class vN extends mN{apply(t){return Eb((()=>Zw(6,wS(t))))}}vN.className="relu6",Mb(vN);class bN extends mN{apply(t){return t}}bN.className="linear",Mb(bN);class wN extends mN{apply(t){return IS(t)}}wN.className="sigmoid",Mb(wN);class SN extends mN{apply(t){return function(t){return Eb((()=>{const e=Ob(.5,Uw(.2,t));return hw(e,0,1)}))}(t)}}SN.className="hardSigmoid",Mb(SN);class _N extends mN{apply(t){return RS(t)}}_N.className="softplus",Mb(_N);class kN extends mN{apply(t){return function(t){return Eb((()=>Mw(t,Ob(Pb(t),1))))}(t)}}kN.className="softsign",Mb(kN);class IN extends mN{apply(t){return PS(t)}}IN.className="tanh",Mb(IN);class MN extends mN{apply(t,e=-1){return NS(t,e)}}MN.className="softmax",Mb(MN);class TN extends mN{apply(t,e=-1){return Gw(t,e)}}TN.className="logSoftmax",Mb(TN);class CN extends mN{apply(t,e=1){return Eb((()=>Uw(IS(Uw(t,e)),t)))}}CN.className="swish",Mb(CN);class EN extends mN{apply(t){return Eb((()=>Uw(t,PS(RS(t)))))}}function AN(t){return t.getClassName()}function NN(t,e={}){return pC(t,Ib.getMap().classNameMap,e,"activation")}function RN(t){if(null==t){return NN({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},NN(e)}return t instanceof mN?t:NN(t)}EN.className="mish",Mb(EN);class DN extends kb{}class LN extends DN{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Eb((()=>{let e=hS([1]);return this.hasL1&&(e=Ob(e,Vw(Uw(this.l1,Pb(t))))),this.hasL2&&(e=Ob(e,Vw(Uw(this.l2,iE(t))))),nw(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}LN.className="L1L2",Mb(LN);const FN={l1l2:"L1L2"};function $N(t){return hC(t)}function PN(t,e={}){return pC(t,Ib.getMap().classNameMap,e,"regularizer")}function ON(t){return null==t?null:"string"==typeof t?PN({className:t in FN?FN[t]:t,config:{}}):t instanceof DN?t:PN(t)}class zN extends GE{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=DE(t);let n=wS(t);return null!=this.maxValue&&(n=hw(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}zN.className="ReLU",Mb(zN);class BN extends GE{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=DE(t);return Pw(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}BN.className="LeakyReLU",Mb(BN);class UN extends GE{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=AE(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ON(t.alphaRegularizer),this.alphaConstraint=uA(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new JT(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=LE(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new zE({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=DE(t),mS(t,this.alpha.read())}getConfig(){const t={alphaInitializer:EE(this.alphaInitializer),alphaRegularizer:$N(this.alphaRegularizer),alphaConstraint:oA(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}UN.className="PReLU",Mb(UN);class WN extends GE{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new QT(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=DE(t);return Tw(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}WN.className="ELU",Mb(WN);class VN extends GE{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=DE(t);return Uw(n,Kv(Fw(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}VN.className="ThresholdedReLU",Mb(VN);class GN extends GE{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new MN).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=DE(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function HN(t,e,n){if("number"==typeof t)return rC(t,e);if(t.length!==e)throw new JT(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let i=0;i<e;++i){const s=t[i];if((r=s)!==parseInt(r.toString(),10))throw new JT(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t;var r}function jN(t,e,n,r,i=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(i-1))+1,Math.floor((s+r-1)/r)}function qN(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+VC([n-e,0]);else{if("same"!==r)throw new JT(`Unsupport padding mode: ${r}.`);t*=e}return t}function XN(t,e){return Eb((()=>(RC(e),"channelsFirst"===e?HS(t,[0,2,3,1]):t)))}function KN(t,e){return Eb((()=>(RC(e),"channelsFirst"===e?HS(t,[0,2,3,4,1]):t)))}function YN(t,e,n,r=[1,1],i="valid",s,a,o=null){return Eb((()=>{if(null==s&&(s="channelsLast"),RC(s),3!==t.rank&&4!==t.rank)throw new JT(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new JT(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=XN(t,s);if("causal"===i)throw new QT("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=i_({x:l,filter:e,strides:r,pad:"same"===i?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=HS(l,[0,3,1,2])),l}))}GN.className="Softmax",Mb(GN);class ZN extends GE{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ZN.verifyArgs(e),this.rank=t,vC(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new QT(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=HN(e.kernelSize,t,"kernelSize"),this.strides=HN(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,DC(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,RC(this.dataFormat),this.activation=RN(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=AE(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=uA(e.biasConstraint),this.biasRegularizer=ON(e.biasRegularizer),this.activityRegularizer=ON(e.activityRegularizer),this.dilationRate=HN(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new JT(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new JT(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new JT(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(iC("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!yC(t.kernelSize,"number",1,3))throw new JT(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:AN(this.activation),useBias:this.useBias,biasInitializer:EE(this.biasInitializer),biasRegularizer:$N(this.biasRegularizer),activityRegularizer:$N(this.activityRegularizer),biasConstraint:oA(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class JN extends ZN{constructor(t,e){super(t,e),this.kernel=null,JN.verifyArgs(e),this.filters=e.filters,vC(this.filters,"filters"),this.kernelInitializer=AE(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=uA(e.kernelConstraint),this.kernelRegularizer=ON(e.kernelRegularizer)}build(t){t=LE(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new JT(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Eb((()=>{let e;t=DE(t);const n=null==this.bias?null:this.bias.read(),r=wC(this.activation.getClassName());if(null!=r&&2===this.rank)e=YN(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,i="valid",s,a=1){return Eb((()=>{if(null==s&&(s="channelsLast"),RC(s),3!==t.shape.length)throw new JT(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new JT(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new JT(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===s&&(t=HS(t,[0,2,1])),"causal"===i)throw new QT("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=yw(t,e,r,"same"===i?"same":"valid","NWC",a);return null!=n&&(o=aE(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=YN(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new QT("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],i="valid",s,a){return Eb((()=>{if(null==s&&(s="channelsLast"),RC(s),4!==t.rank&&5!==t.rank)throw new JT(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new JT(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=KN(t,s);if("causal"===i)throw new QT("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ww(o,e,r,"same"===i?"same":"valid","NDHWC",a),null!=n&&(o=aE(o,n)),"channelsFirst"===s&&(o=HS(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=LE(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=jN(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:EE(this.kernelInitializer),kernelRegularizer:$N(this.kernelRegularizer),kernelConstraint:oA(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new JT(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class QN extends JN{constructor(t){super(2,t),QN.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!yC(t.kernelSize,"number",1,2))throw new JT(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}QN.className="Conv2D",Mb(QN);class tR extends JN{constructor(t){super(3,t),tR.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new JT(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}tR.className="Conv3D",Mb(tR);class eR extends QN{constructor(t){if(super(t),this.inputSpec=[new zE({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new JT(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=LE(t)).length)throw new JT("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new JT("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zE({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Eb((()=>{let e=DE(t);if(4!==e.shape.length)throw new JT(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let i,s;"channelsFirst"===this.dataFormat?(i=2,s=3):(i=1,s=2);const a=n[i],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,qN(a,c,l,this.padding),qN(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=HS(e,[0,2,3,1]));let p=bw(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=HS(p,[0,3,1,2])),null!=this.bias&&(p=aE(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=LE(t)).slice();let n,r,i;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3):(n=3,r=1,i=2);const s=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=qN(e[r],o,s,this.padding),e[i]=qN(e[i],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}eR.className="Conv2DTranspose",Mb(eR);class nR extends tR{constructor(t){if(super(t),this.inputSpec=[new zE({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new JT(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=LE(t)).length)throw new JT("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new JT("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zE({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Eb((()=>{let e=DE(t);if(5!==e.shape.length)throw new JT(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let i,s,a;"channelsFirst"===this.dataFormat?(a=2,i=3,s=4):(a=1,i=2,s=3);const o=n[a],l=n[i],u=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,qN(o,p,c,this.padding),qN(l,f,h,this.padding),qN(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=HS(e,[0,2,3,4,1]));let x=_w(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=HS(x,[0,4,1,2,3])),null!==this.bias&&(x=aE(x,this.bias.read(),this.dataFormat)),null!==this.activation&&(x=this.activation.apply(x)),x}))}computeOutputShape(t){const e=(t=LE(t)).slice();let n,r,i,s;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3,s=4):(n=4,r=1,i=2,s=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=qN(e[r],u,a,this.padding),e[i]=qN(e[i],c,o,this.padding),e[s]=qN(e[s],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}nR.className="Conv3DTranspose",Mb(nR);class rR extends JN{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new JT("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new JT("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new JT(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=AE(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ON(e.depthwiseRegularizer),this.depthwiseConstraint=uA(e.depthwiseConstraint),this.pointwiseInitializer=AE(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ON(e.pointwiseRegularizer),this.pointwiseConstraint=uA(e.pointwiseConstraint)}build(t){if((t=LE(t)).length<this.rank+2)throw new JT(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new JT(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),i=[];for(let t=0;t<this.rank;++t)i.push(1);i.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new zE({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Eb((()=>{let e;if(t=DE(t),1===this.rank)throw new QT("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=HS(t,[0,2,3,1])),e=kS(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=aE(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=HS(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=EE(this.depthwiseInitializer),t.pointwiseInitializer=EE(this.pointwiseInitializer),t.depthwiseRegularizer=$N(this.depthwiseRegularizer),t.pointwiseRegularizer=$N(this.pointwiseRegularizer),t.depthwiseConstraint=oA(this.depthwiseConstraint),t.pointwiseConstraint=oA(this.pointwiseConstraint),t}}rR.className="SeparableConv";class iR extends rR{constructor(t){super(2,t)}}iR.className="SeparableConv2D",Mb(iR);class sR extends JN{constructor(t){super(1,t),sR.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!yC(t.kernelSize,"number",1,1))throw new JT(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}sR.className="Conv1D",Mb(sR);class aR extends GE{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Eb((()=>{if(t=DE(t),"channelsLast"===this.dataFormat){const e=ZC(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ZC(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ZC(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ZC(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}aR.className="Cropping2D",Mb(aR);class oR extends GE{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,RC(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,xC(TC,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Eb((()=>{let e=DE(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=HS(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],i="nearest"===this.interpolation?K_.resizeNearestNeighbor(e,[t,r]):K_.resizeBilinear(e,[t,r]);return HS(i,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?K_.resizeNearestNeighbor(e,[t,r]):K_.resizeBilinear(e,[t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}oR.className="UpSampling2D",Mb(oR);class lR extends ZN{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=AE(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=uA(t.depthwiseConstraint),this.depthwiseRegularizer=ON(t.depthwiseRegularizer)}build(t){if((t=LE(t)).length<4)throw new JT(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new JT(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eb((()=>{let e=function(t,e,n=[1,1],r="valid",i,s){return Eb((()=>{null==i&&(i="channelsLast"),RC(i);let a=XN(t,i);if(4!==t.rank)throw new JT(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new JT(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=kw(a,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===i&&(a=HS(a,[0,3,1,2])),a}))}(t=DE(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=aE(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=LE(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=jN(e,this.kernelSize[0],this.padding,this.strides[0]),s=jN(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,i,s]:[t[0],i,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=EE(this.depthwiseInitializer),t.depthwiseRegularizer=$N(this.depthwiseRegularizer),t.depthwiseConstraint=oA(this.depthwiseRegularizer),t}}function uR(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new JT("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function i(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=i(e),constants:n=i(n)}}function cR(t,e,n,r=!1,i,s,a=!1,o=!1){return Eb((()=>{const l=e.shape.length;if(l<3)throw new JT(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(GC(2,l));if(e=HS(e,u),null!=s)throw new QT("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=Kv(Kv(i,"bool"),"float32")).rank===l-1&&(i=Aw(i,-1)),i=HS(i,u)),r&&(e=SS(e,0),null!=i&&(i=SS(i,0)));const c=[];let h,d=n;const p=e.shape[0],f=BS(e);let m,g;null!=i&&(m=BS(i));for(let e=0;e<p;++e){const n=f[e],r=Eb((()=>t(n,d)));if(null==i)h=r[0],d=r[1];else{const t=Eb((()=>{const t=m[e],n=Ww(pS(t),t);return{output:Ob(Uw(r[0],t),Uw(d[0],n)),newStates:d.map(((e,i)=>Ob(Uw(r[1][i],t),Uw(e,n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=$S(c,1)),[h,g,d]}))}lR.className="DepthwiseConv2D",Mb(lR);class hR extends GE{constructor(t){let e;if(super(t),null==t.cell)throw new JT("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new vR({cells:t.cell}):t.cell,null==e.stateSize)throw new JT("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new zE({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?GC(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){NE(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Eb((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new QT("Constants support is not implemented in RNN yet.");NE(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new zE({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!cf(this.stateSpec.map((t=>t.shape[t.shape.length-1])),i))throw new JT(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((t=>new zE({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Eb((()=>{if(!this.stateful)throw new YT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new JT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>hS([n,t]))):this.states_=[hS([n,this.cell.stateSize])];else if(null==t)Ab(this.states_),null!=this.keptStates&&(Ab(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>hS([n,t]))):this.states_[0]=hS([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new JT(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ab(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,i];if(!cf(r.shape,s))throw new JT(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Nb(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=uR(t,n,r,this.numConstants);t=i.inputs,n=i.initialState,r=i.constants;let s=[],a=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new zE({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof BE){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Eb((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let i=null==e?null:e.initialState;t=DE(t),null==i&&(i=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==s)throw new JT(`RNN Layer has ${s} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=cR(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,i,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Eb((()=>{let e=hS(t.shape);return e=Vw(e,[1,2]),e=XC(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?tE(e,[1,t]):e)):this.cell.stateSize>1?[tE(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===hR.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=wA(e.cell,n);return new t(Object.assign(e,{cell:r}))}}hR.className="RNN",Mb(hR);class dR extends GE{}class pR extends dR{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vC(this.units,"units"),this.activation=RN(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=AE(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=AE(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=AE(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ON(t.kernelRegularizer),this.recurrentRegularizer=ON(t.recurrentRegularizer),this.biasRegularizer=ON(t.biasRegularizer),this.kernelConstraint=uA(t.kernelConstraint),this.recurrentConstraint=uA(t.recurrentConstraint),this.biasConstraint=uA(t.biasConstraint),this.dropout=WC([1,VC([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=WC([1,VC([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=LE(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eb((()=>{if(2!==t.length)throw new JT(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bR({ones:()=>pS(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bR({ones:()=>pS(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;i=nE(null!=s?Uw(t,s):t,this.kernel.read()),null!=this.bias&&(i=aE(i,this.bias.read())),null!=a&&(n=Uw(n,a));let o=Ob(i,nE(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:AN(this.activation),useBias:this.useBias,kernelInitializer:EE(this.kernelInitializer),recurrentInitializer:EE(this.recurrentInitializer),biasInitializer:EE(this.biasInitializer),kernelRegularizer:$N(this.kernelRegularizer),recurrentRegularizer:$N(this.recurrentRegularizer),biasRegularizer:$N(this.biasRegularizer),activityRegularizer:$N(this.activityRegularizer),kernelConstraint:oA(this.kernelConstraint),recurrentConstraint:oA(this.recurrentConstraint),biasConstraint:oA(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}pR.className="SimpleRNNCell",Mb(pR);class fR extends hR{constructor(t){t.cell=new pR(t),super(t)}call(t,e){return Eb((()=>{null!=this.cell.dropoutMask&&(Ab(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ab(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})}))}static fromConfig(t,e){return new t(e)}}fR.className="SimpleRNN",Mb(fR);class mR extends dR{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new JT("GRUCell does not support reset_after parameter set to true.");this.units=t.units,vC(this.units,"units"),this.activation=RN(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=RN(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=AE(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=AE(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=AE(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ON(t.kernelRegularizer),this.recurrentRegularizer=ON(t.recurrentRegularizer),this.biasRegularizer=ON(t.biasRegularizer),this.kernelConstraint=uA(t.kernelConstraint),this.recurrentConstraint=uA(t.recurrentConstraint),this.biasConstraint=uA(t.biasConstraint),this.dropout=WC([1,VC([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=WC([1,VC([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=LE(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Eb((()=>{if(2!==t.length)throw new JT(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bR({ones:()=>pS(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bR({ones:()=>pS(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Uw(t,i[0]));let u=nE(t,this.kernel.read());this.useBias&&(u=aE(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Uw(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=DS(c,[2*this.units,this.units],c.rank-1),p=nE(r,h),[f,m,g]=DS(u,3,u.rank-1),[x,y]=DS(p,2,p.rank-1);a=this.recurrentActivation.apply(Ob(f,x)),o=this.recurrentActivation.apply(Ob(m,y));const v=nE(Uw(o,r),d);l=this.activation.apply(Ob(g,v));const b=Ob(Uw(a,r),Uw(Ob(1,lS(a)),l));return[b,b]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:AN(this.activation),recurrentActivation:AN(this.recurrentActivation),useBias:this.useBias,kernelInitializer:EE(this.kernelInitializer),recurrentInitializer:EE(this.recurrentInitializer),biasInitializer:EE(this.biasInitializer),kernelRegularizer:$N(this.kernelRegularizer),recurrentRegularizer:$N(this.recurrentRegularizer),biasRegularizer:$N(this.biasRegularizer),activityRegularizer:$N(this.activityRegularizer),kernelConstraint:oA(this.kernelConstraint),recurrentConstraint:oA(this.recurrentConstraint),biasConstraint:oA(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}mR.className="GRUCell",Mb(mR);class gR extends hR{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new mR(t),super(t)}call(t,e){return Eb((()=>{null!=this.cell.dropoutMask&&(Ab(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ab(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}gR.className="GRU",Mb(gR);class xR extends dR{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vC(this.units,"units"),this.activation=RN(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=RN(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=AE(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=AE(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=AE(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ON(t.kernelRegularizer),this.recurrentRegularizer=ON(t.recurrentRegularizer),this.biasRegularizer=ON(t.biasRegularizer),this.kernelConstraint=uA(t.kernelConstraint),this.recurrentConstraint=uA(t.recurrentConstraint),this.biasConstraint=uA(t.biasConstraint),this.dropout=WC([1,VC([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=WC([1,VC([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=LE(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends hE{apply(e,r){const i=t.apply([n]),s=(new pE).apply([n]),a=t.apply([2*n]);return QC(QC(i,s),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Eb((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new JT(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bR({ones:()=>pS(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bR({ones:()=>pS(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Uw(t,s[0]));let h=nE(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Uw(r,a[0])),h=Ob(h,nE(r,this.recurrentKernel.read())),this.useBias&&(h=aE(h,this.bias.read()));const[d,p,f,m]=DS(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ob(Uw(l,i),Uw(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Uw(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:AN(this.activation),recurrentActivation:AN(this.recurrentActivation),useBias:this.useBias,kernelInitializer:EE(this.kernelInitializer),recurrentInitializer:EE(this.recurrentInitializer),biasInitializer:EE(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$N(this.kernelRegularizer),recurrentRegularizer:$N(this.recurrentRegularizer),biasRegularizer:$N(this.biasRegularizer),activityRegularizer:$N(this.activityRegularizer),kernelConstraint:oA(this.kernelConstraint),recurrentConstraint:oA(this.recurrentConstraint),biasConstraint:oA(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}xR.className="LSTMCell",Mb(xR);class yR extends hR{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xR(t),super(t)}call(t,e){return Eb((()=>{null!=this.cell.dropoutMask&&(Ab(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ab(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}yR.className="LSTM",Mb(yR);class vR extends dR{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Eb((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const i=[];let s;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],s=0===a?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),i.push(s.slice(1))}n=[];for(const t of i.slice().reverse())n.push(...t);return[s[0]].concat(n)}))}build(t){let e;NE(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{$C(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(wA(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return PE(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,i=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],i[t]])}OE(e)}}function bR(t){const{ones:e,rate:n,training:r=!1,count:i=1,dropoutFunc:s}=t,a=()=>null!=s?s(e(),n):oE(e(),n),o=()=>lE(a,e,r);return!i||i<=1?Nb(o().clone()):Array(i).fill(void 0).map(o).map((t=>Nb(t.clone())))}vR.className="StackedRNNCells",Mb(vR);var wR,SR,_R,kR;class IR extends hR{constructor(t){if(t.unroll)throw new QT("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new QT("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new zE({ndim:5})]}call(t,e){return Eb((()=>{if(null!=this.cell.dropoutMask&&(Ab(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ab(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new JT("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:i})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Eb((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),i=hS([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(i):[i]}))}resetStates(t,e=!1){Eb((()=>{if(!this.stateful)throw new YT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),i=[r[0],...r.slice(2)];if(null==n[0])throw new JT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>hS(i))):this.states_=[hS(i)];else if(null==t)Ab(this.states_),null!=this.keptStates&&(Ab(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>hS(i))):this.states_[0]=hS(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new JT(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ab(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=i;if(!cf(n.shape,r))throw new JT(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Nb(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:i,strides:s,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=jN(l,r[0],i,s[0],a[0]),h=jN(u,r[1],i,s[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}IR.className="ConvRNN2D";class MR extends xR{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:i,dataFormat:s,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,vC(this.filters,"filters"),this.kernelSize=HN(n,2,"kernelSize"),this.kernelSize.forEach((t=>vC(t,"kernelSize"))),this.strides=HN(r||1,2,"strides"),this.strides.forEach((t=>vC(t,"strides"))),this.padding=i||"valid",DC(this.padding),this.dataFormat=s||"channelsLast",RC(this.dataFormat),this.dilationRate=HN(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>vC(t,"dilationRate")))}build(t){var e;t=LE(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new JT(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],i=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends hE{apply(t,e){return JC([n.apply([r]),dS([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Eb((()=>{if(3!==t.length)throw new JT(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],i=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bR({ones:()=>pS(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Uw(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bR({ones:()=>pS(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(i,d,0),f=o(i,d,1),m=o(i,d,2),g=o(i,d,3);const[x,y,v,b]=DS(this.kernel.read(),4,3),[w,S,_,k]=this.useBias?DS(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,x,w,this.padding),u=this.inputConv(u,y,S,this.padding),c=this.inputConv(c,v,_,this.padding),h=this.inputConv(h,b,k,this.padding);const[I,M,T,C]=DS(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,M),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);const E=this.recurrentActivation.apply(Ob(l,p)),A=this.recurrentActivation.apply(Ob(u,f)),N=Ob(Uw(A,s),Uw(E,this.activation.apply(Ob(c,m)))),R=Uw(this.recurrentActivation.apply(Ob(h,g)),this.activation.apply(N));return[R,R,N]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const i=xw(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?aE(i,n,this.dataFormat):i}recurrentConv(t,e){return xw(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}MR.className="ConvLSTM2DCell",Mb(MR);class TR extends IR{constructor(t){const e=new MR(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}TR.className="ConvLSTM2D",Mb(TR);class CR extends GE{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return lE((()=>oE(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}CR.className="Dropout",Mb(CR);class ER extends CR{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}ER.className="SpatialDropout1D",Mb(ER);class AR extends GE{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,vC(this.units,"units"),this.activation=RN(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=AE(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=AE(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=uA(t.kernelConstraint),this.biasConstraint=uA(t.biasConstraint),this.kernelRegularizer=ON(t.kernelRegularizer),this.biasRegularizer=ON(t.biasRegularizer),this.activityRegularizer=ON(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=LE(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=LE(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t),r=wC(this.activation.getClassName());let i;return null!=r?i=nE(n,this.kernel.read(),r,this.bias?this.bias.read():null):(i=nE(n,this.kernel.read()),null!=this.bias&&(i=aE(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i}))}getConfig(){const t={units:this.units,activation:AN(this.activation),useBias:this.useBias,kernelInitializer:EE(this.kernelInitializer),biasInitializer:EE(this.biasInitializer),kernelRegularizer:$N(this.kernelRegularizer),biasRegularizer:$N(this.biasRegularizer),activityRegularizer:$N(this.activityRegularizer),kernelConstraint:oA(this.kernelConstraint),biasConstraint:oA(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}AR.className="Dense",Mb(AR);class NR extends GE{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=LE(t);for(const e of t.slice(1))if(null==e)throw new JT(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],UC(t,1)]}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);let n=DE(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=HS(n,t)}return function(t){if(t.rank<=1)throw new JT(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],UC(t.shape,1)];return nw(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}NR.className="Flatten",Mb(NR);class RR extends GE{constructor(t){super(t),this.supportsMasking=!0,this.activation=RN(t.activation)}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t);return this.activation.apply(n)}))}getConfig(){const t={activation:AN(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}RR.className="Activation",Mb(RR);class DR extends GE{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Eb((()=>{return t=DE(t),e=t,n=this.n,Eb((()=>{if(2!==e.shape.length)throw new JT(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return tE(XC(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}DR.className="RepeatVector",Mb(DR);class LR extends GE{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let i=1,s=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==s)throw new JT("Can only specifiy one unknown dimension.");s=t}else i*=e}const a=UC(t);if(null!==s){if(0===i||a%i!=0)throw new JT(n);r[s]=a/i}else if(a!==i)throw new JT(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t),r=n.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return nw(n,i)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}LR.className="Reshape",Mb(LR);class FR extends GE{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=GC(1,t.dims.length+1);if(!cf(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zE({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=LE(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return HS(DE(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}FR.className="Permute",Mb(FR);class $R extends GE{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=DE(t);return Bb(uS(n,this.maskValue),-1)}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t),r=Bb(uS(n,this.maskValue),-1,!0);return Uw(n,Kv(r,n.dtype))}))}}$R.className="Masking",Mb($R);class PR extends GE{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(oC(t.inputLength))}this.inputDim=t.inputDim,vC(this.inputDim,"inputDim"),this.outputDim=t.outputDim,vC(this.outputDim,"outputDim"),this.embeddingsInitializer=AE(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ON(t.embeddingsRegularizer),this.activityRegularizer=ON(t.activityRegularizer),this.embeddingsConstraint=uA(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Eb((()=>this.maskZero?(t=DE(t),uS(t,WS(t))):null))}computeOutputShape(t){if(t=LE(t),null==this.inputLength)return[...t,this.outputDim];const e=oC(this.inputLength);if(e.length!==t.length-1)throw new JT(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const i=e[r],s=t[r+1];if(null!=i&&null!=s&&i!==s)throw new JT(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==i&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);let n=DE(t);"int32"!==n.dtype&&(n=qC(n,"int32"));const r=rE(this.embeddings.read(),nw(n,[n.size]));return nw(r,LE(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:EE(this.embeddingsInitializer),embeddingsRegularizer:$N(this.embeddingsRegularizer),activityRegularizer:$N(this.activityRegularizer),embeddingsConstraint:oA(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}PR.className="Embedding",Mb(PR);class OR extends GE{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new QT}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],s=e[r];if(null==i||null==s||i<0||s<0)n.push(null);else if(1===i)n.push(s);else if(1===s)n.push(i);else{if(i!==s)throw new JT("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(i)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[LE(t)]),t.length<2)throw new JT(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=mC(e),e.length>1)throw new JT(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===mC(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Eb((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=VC(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=XC(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,i=t[0],s=t.slice(1).concat([i]);let a=nw(r,[i].concat(UC(t.slice(1))));a=HS(a,[1,0]),a=nw(a,s),e.push(a),n=!0}else if(t>1){const i=GC(1,t).concat([0]);e.push(HS(r,i)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const i=r.rank;if(n)if(null==i){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=nw(HS(nw(r,[-1,e]),[1,0]),n)}else if(i>1){const t=[i-1].concat(GC(0,i-1));r=HS(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=mC(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Eb((()=>{if(null==e)return null;if(!Array.isArray(e))throw new JT("`mask` should be an Array");if(!Array.isArray(t))throw new JT("`inputs` should be an Array");if(e.length!==t.length)throw new JT(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Aw(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Hw(n,e[t]);return n}))}}class zR extends OR{constructor(t){super(t)}mergeFunction(t){return Eb((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ob(e,t[n]);return e}))}}zR.className="Add",Mb(zR);class BR extends OR{constructor(t){super(t)}mergeFunction(t){return Eb((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Uw(e,t[n]);return e}))}}BR.className="Multiply",Mb(BR);class UR extends OR{constructor(t){super(t)}mergeFunction(t){return Eb((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ob(e,t[n]);return Uw(1/t.length,e)}))}}UR.className="Average",Mb(UR);class WR extends OR{constructor(t){super(t)}mergeFunction(t){return Eb((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Kw(e,t[n]);return e}))}}WR.className="Maximum",Mb(WR);class VR extends OR{constructor(t){super(t)}mergeFunction(t){return Eb((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Zw(e,t[n]);return e}))}}VR.className="Minimum",Mb(VR);class GR extends OR{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new JT("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let i=!1;for(const t of n)if(cf(t,r)){i=!0;break}i||n.push(r)}if(n.length>1)throw new JT("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Eb((()=>JC(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new JT("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new JT("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new JT("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new JT(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Eb((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(Kv(pS(t[n]),"bool")):e[n].rank<t[n].rank?r.push(Aw(e[n],-1)):r.push(e[n]);const i=dw(r,this.axis);return zb(i,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function HR(t,e){for(;t<0;)t+=e;return t}GR.className="Concatenate",Mb(GR);class jR extends OR{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){sf(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new QT("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new JT(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new JT(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>HR(e,t[n].shape.length))):[HR(this.axes,n.shape.length),HR(this.axes,r.shape.length)],this.normalize&&(n=SA(n,e[0]),r=SA(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new QT("batchDot is not implemented for tensors of 4D or higher rank yet");if(sf(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),sf(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new QT("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,i=e.shape.length;null==n&&(n=[r-1,i-2]);const s=n;return Eb((()=>{let n,a;if(r>i){n=r-i;const t=[];for(let e=0;e<n;++e)t.push(1);e=nw(e,e.shape.concat(t))}else if(i>r){n=i-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=nw(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=s[0]===s[1]?Vw(Uw(t,e),s[0]):Vw(Uw(HS(t,[1,0]),e),s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;a=jw(t,e,n,r)}if(n>0){let t;t=r>i?r+i-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=FS(a,e)}return 1===a.shape.length&&(a=Aw(a,1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[HR(this.axes,t.length),HR(this.axes,e.length)],n}computeOutputShape(t){sf(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new QT("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const i=e.concat(n);return 1===i.length&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}jR.className="Dot",Mb(jR);class qR extends GE{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t);return lE((()=>Ob(eE(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}qR.className="GaussianNoise",Mb(qR);class XR extends GE{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Eb((()=>{this.invokeCallHook(t,e);const n=DE(t);return this.rate>0&&this.rate<1?lE((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return Uw(n,eE(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}XR.className="GaussianDropout",Mb(XR);class KR extends GE{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||DE(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Eb((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return lE((()=>{const e=DE(t),r=-1.7580993408473766;let i=$w(bS(n),this.rate);i=qC(i,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-s*r*this.rate,o=Ob(Uw(e,i),Uw(Ob(i,-1),r));return Ob(Uw(o,s),a)}),(()=>DE(t)),e.training||!1)}return t}))}}function YR(t,e,n,r,i,s=.001){let a;if(2===t.rank)a=aw(t,e,n,r,i,s);else if(3===t.rank)a=ow(t,e,n,r,i,s);else{if(4!==t.rank)throw new QT(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=lw(t,e,n,r,i,s)}return a}KR.className="AlphaDropout",Mb(KR);class ZR extends GE{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=AE(t.betaInitializer||"zeros"),this.gammaInitializer=AE(t.gammaInitializer||"ones"),this.movingMeanInitializer=AE(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=AE(t.movingVarianceInitializer||"ones"),this.betaConstraint=uA(t.betaConstraint),this.gammaConstraint=uA(t.gammaConstraint),this.betaRegularizer=ON(t.betaRegularizer),this.gammaRegularizer=ON(t.gammaRegularizer)}build(t){t=LE(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new JT(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new zE({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Eb((()=>{const n=null!=e.training&&e.training,r=DE(t),i=r.shape,s=i.length,a=GC(0,s),o=this.axis>=0?this.axis:this.axis+s;a.splice(o,1);const l=rC(1,s);l[o]=i[o];const u=a.slice();u.sort();const c=!cf(u,GC(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const t=nw(this.movingMean.read(),l),e=nw(this.movingVariance.read(),l),n=this.center?nw(this.beta.read(),l):null,i=this.scale?nw(this.gamma.read(),l):null;return YR(r,t,e,n,i,this.epsilon)}return YR(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,i=.001){return cf(r.slice().sort(),GC(0,t.rank-1))?function(t,e,n,r,i=.001){return Eb((()=>{const s=oS(t,r),a=s.mean,o=s.variance;return[YR(t,a,o,n,e,i),a,o]}))}(t,e,n,r,i):function(t,e,n,r,i=.001){return Eb((()=>{const s=oS(t,r),a=s.mean,o=s.variance,l=[];for(const e of GC(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=nw(a,l),c=nw(o,l),h=null==e?null:nw(e,l),d=null==n?null:nw(n,l);return[YR(t,u,c,d,h,i),a,o]}))}(t,e,n,r,i)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Eb((()=>{const r=1-n,i=t.read(),s=Uw(Ww(i,e),r);t.write(Ww(i,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:EE(this.betaInitializer),gammaInitializer:EE(this.gammaInitializer),movingMeanInitializer:EE(this.movingMeanInitializer),movingVarianceInitializer:EE(this.movingVarianceInitializer),betaRegularizer:$N(this.betaRegularizer),gammaRegularizer:$N(this.gammaRegularizer),betaConstraint:oA(this.betaConstraint),gammaConstraint:oA(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ZR.className="BatchNormalization",Mb(ZR);class JR extends GE{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=AE(t.betaInitializer||"zeros"),this.gammaInitializer=AE(t.gammaInitializer||"ones"),this.betaRegularizer=ON(t.betaRegularizer),this.gammaRegularizer=ON(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=LE(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==mC(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=DE(t),r=n.shape,i=r.length;return Eb((()=>{let{mean:t,variance:e}=oS(n,this.axis,!0);const s=rC(1,i);for(const t of this.axis)s[t]=r[t];const a=t=>null!=t&&t.shape.length!==i?nw(t,s):t;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let t=0;t<i;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=Nw(t,u),e=Nw(e,u),null!=o&&(o=Nw(o,c)),null!=l&&(l=Nw(l,c)),YR(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:EE(this.betaInitializer),gammaInitializer:EE(this.gammaInitializer),betaRegularizer:$N(this.betaRegularizer),gammaRegularizer:$N(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}JR.className="LayerNormalization",Mb(JR);class QR extends GE{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new JT(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new JT(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new JT(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new zE({ndim:4})]}computeOutputShape(t){let e,n;return t=LE(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Eb((()=>{return e=DE(t),n=this.padding,r=this.dataFormat,Eb((()=>{if(4!==e.rank)throw new JT(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new JT("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new JT(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],fS(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function tD(t,e,n,r,i,s){return Eb((()=>{let a;RC(i),LC(s),DC(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=XN(t,i);const o="same"===r?"same":"valid";return a="max"===s?qw(t,e,n,o):rw(t,e,n,o),"channelsFirst"===i&&(a=HS(a,[0,3,1,2])),a}))}function eD(t,e,n,r,i,s){return Eb((()=>{let a;RC(i),LC(s),DC(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),t=KN(t,i);const o="same"===r?"same":"valid";return a="max"===s?Xw(t,e,n,o):iw(t,e,n,o),"channelsFirst"===i&&(a=HS(a,[0,4,1,2,3])),a}))}QR.className="ZeroPadding2D",Mb(QR);class nD extends GE{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new JT(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(vC(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new JT(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}vC(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,DC(this.padding),this.inputSpec=[new zE({ndim:3})]}computeOutputShape(t){const e=jN((t=LE(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Eb((()=>{this.invokeCallHook(t,e),t=XC(DE(t),2);const n=this.poolingFunction(DE(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return FS(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class rD extends nD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),tD(t,e,n,r,i,"max")}}rD.className="MaxPooling1D",Mb(rD);class iD extends nD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),tD(t,e,n,r,i,"avg")}}iD.className="AveragePooling1D",Mb(iD);class sD extends GE{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new JT(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];vC(this.poolSize,"poolSize"),vC(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,RC(this.dataFormat),DC(this.padding),this.inputSpec=[new zE({ndim:4})]}computeOutputShape(t){t=LE(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=jN(e,this.poolSize[0],this.padding,this.strides[0]),n=jN(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Eb((()=>(this.invokeCallHook(t,e),this.poolingFunction(DE(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class aD extends sD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),tD(t,e,n,r,i,"max")}}aD.className="MaxPooling2D",Mb(aD);class oD extends sD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),tD(t,e,n,r,i,"avg")}}oD.className="AveragePooling2D",Mb(oD);class lD extends GE{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new JT(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];vC(this.poolSize,"poolSize"),vC(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,RC(this.dataFormat),DC(this.padding),this.inputSpec=[new zE({ndim:5})]}computeOutputShape(t){t=LE(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=jN(e,this.poolSize[0],this.padding,this.strides[0]),n=jN(n,this.poolSize[1],this.padding,this.strides[1]),r=jN(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Eb((()=>(this.invokeCallHook(t,e),this.poolingFunction(DE(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class uD extends lD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),eD(t,e,n,r,i,"max")}}uD.className="MaxPooling3D",Mb(uD);class cD extends lD{constructor(t){super(t)}poolingFunction(t,e,n,r,i){return RC(i),DC(r),eD(t,e,n,r,i,"avg")}}cD.className="AveragePooling3D",Mb(cD);class hD extends GE{constructor(t){super(t),this.inputSpec=[new zE({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new QT}}class dD extends hD{constructor(t){super(t||{})}call(t,e){return Eb((()=>{const e=DE(t);return Yw(e,1)}))}}dD.className="GlobalAveragePooling1D",Mb(dD);class pD extends hD{constructor(t){super(t||{})}call(t,e){return Eb((()=>{const e=DE(t);return Bw(e,1)}))}}pD.className="GlobalMaxPooling1D",Mb(pD);class fD extends GE{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,RC(this.dataFormat),this.inputSpec=[new zE({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new QT}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class mD extends fD{call(t,e){return Eb((()=>{const e=DE(t);return"channelsLast"===this.dataFormat?Yw(e,[1,2]):Yw(e,[2,3])}))}}mD.className="GlobalAveragePooling2D",Mb(mD);class gD extends fD{call(t,e){return Eb((()=>{const e=DE(t);return"channelsLast"===this.dataFormat?Bw(e,[1,2]):Bw(e,[2,3])}))}}gD.className="GlobalMaxPooling2D",Mb(gD);class xD extends GE{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=wA(e.layer,n);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class yD extends xD{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=LE(t)).length<3)throw new JT(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=LE(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Eb((()=>cR(((t,n)=>[DE(this.layer.call(t,e)),[]]),t=DE(t),[],!1,null,null,!1,!0)[1]))}}yD.className="TimeDistributed",Mb(yD);class vD extends xD{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=wA(n),e.goBackwards=!0!==e.goBackwards;const r={};var i;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=wA(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,i=this.mergeMode,xC(AC,"BidirectionalMergeMode",i),t.weights)throw new QT("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,i=this.forwardLayer.computeOutputShape(t);return Array.isArray(i)&&Array.isArray(i[0])||(i=[i]),this.returnState?(r=i.slice(1),e=i[0]):e=i[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):aC(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const i=uR(t,n,r,this.numConstants);if(t=i.inputs,n=i.initialState,r=i.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new JT("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map((t=>new zE({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new QT("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof BE;for(const t of s)if(t instanceof BE!==o)throw new JT("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=i,o}return super.apply(t,e)}call(t,e){return Eb((()=>{const n=e.initialState;let r,i,s,a;if(null==n)r=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=SS(i,1)),"concat"===this.mergeMode?a=JC([r,i]):"sum"===this.mergeMode?a=Ob(r,i):"ave"===this.mergeMode?a=Uw(.5,Ob(r,i)):"mul"===this.mergeMode?a=Uw(r,i):null==this.mergeMode&&(a=[r,i]),this.returnState?null==this.mergeMode?a.concat(s):[a].concat(s):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){$C(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),$C(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=wA(e.layer);if(delete e.layer,null!=e.numConstants)throw new QT("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}vD.className="Bidirectional",Mb(vD);class bD extends GE{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Eb((()=>("float32"!==(t=DE(t)).dtype&&(t=qC(t,"float32")),Ob(Uw(t,this.scale),this.offset))))}}function wD(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(ID(t)){const i=Array.isArray(t)?[]:{};r.add(t);for(const s in t){const a=wD(t[s],e,n,r);i[s]=a}return r.delete(t),t.__proto__&&(i.__proto__=t.__proto__),i}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,i.value),i.value}function SD(t,e=kD){return _D(t,e)}function _D(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse){if(ID(r)){const i=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=_D(t.map((t=>t[s])),e,n);i[s]=r}return n.delete(r),i}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return i.value}function kD(t){return null===t?null:ID(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function ID(t){let e=!1;if(Bf().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:r}=n(977);e=t instanceof r}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Py)&&!(t instanceof Promise)&&!e)}function MD(t){return wD(t,TD)}function TD(t){return t instanceof Py?{value:t.clone(),recurse:!1}:ID(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}bD.className="Rescaling",Mb(bD),Bf().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(wR||(wR={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(SR||(SR={}));class CD{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class ED extends CD{constructor(){super(ED.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}ED.INITIAL_CAPACITY=32;class AD{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new zD(this,t)}filter(t){return new PD(this,t)}map(t){return new OD(this,t)}mapAsync(t){return new BD(this,t)}serialMapAsync(t){return new BD(this,t).serial()}flatmap(t){return new WD(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new $D(this,t,e)}columnMajorBatch(t,e=!0,n=kD){return this.rowMajorBatch(t,e).map((t=>SD(t,n)))}concatenate(t,e){return new VD(new ND([this,t]),e)}take(t){return t<0||null==t?this:new FD(this,t)}skip(t){return t<0||null==t?this:new LD(this,t)}prefetch(t){return new GD(this,t)}shuffle(t,e){return new HD(this,t,e)}serial(){return new DD(this)}}class ND extends AD{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:MD(t),done:!1}}}class RD extends AD{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class DD extends AD{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class LD extends AD{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ab(t.value)}return this.upstream.next()}}class FD extends AD{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class $D extends AD{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class PD extends AD{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ab(t.value)}}}class OD extends AD{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Yy(t.value),n=this.transform(t.value),r=Yy(n);for(const t of e)Ky(t,r)||t.dispose();return{value:n,done:!1}}}class zD extends AD{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class BD extends AD{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Yy(t.value),n=await this.transform(t.value),r=Yy(n);for(const t of e)Ky(t,r)||t.dispose();return{value:n,done:!1}}}class UD extends AD{constructor(){super(),this.outputQueue=new ED,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class WD extends UD{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Yy(t.value),n=this.transform(t.value),r=Yy(n);this.outputQueue.pushAll(n);for(const t of e)Ky(t,r)||t.dispose();return!0}}class VD extends AD{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(kR=_R||(_R={}))[kR.FAIL=0]="FAIL",kR[kR.SHORTEST=1]="SHORTEST",kR[kR.LONGEST=2]="LONGEST";class GD extends AD{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new CD(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class HD extends GD{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=gS.alea(n||Sy().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class jD{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return sf(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),qD((async()=>(await n.iterator()).columnMajorBatch(t,e,XD)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,qD((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,qD((async()=>(await e.iterator()).filter((e=>Eb((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return qD((async()=>(await e.iterator()).map((e=>Eb((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return qD((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return qD((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,qD((async()=>{return n=(i=async()=>({value:await e.iterator(),done:!1}),new RD(i)).take(t),new VD(n,r);var n,r,i}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,qD((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,i=gS.alea(e||Sy().toString());return qD((async()=>{let e=i.int32();return n&&(e+=i.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,qD((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function qD(t,e=null){return new class extends jD{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function XD(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Py||wf(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Py?$S(t):mv(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function KD(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&sf("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}jD.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const YD=fI;class ZD extends Jp{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Zp(this,Tb())}nextDataId(){return ZD.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,Bf().get("IS_NODE")&&Yx("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&_f(n[0])){const i=n.map((t=>_y(t)));r=this.write(i,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,i){this.data.set(t,{values:e,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Fk(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>ky(t)));return Xv(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Xv(t.shape,t.dtype,e)}makeOutput(t,e,n){return Tb().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Sy();return t(),{kernelMs:Sy()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){KD([t],"where");const e=this.readSync(t.dataId);return YD(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function JD(t,e,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(KD(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=uf(a.shape),c=n||a.dtype,h=vf(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],i);return o.makeTensorInfo(a.shape,c,h)}}function QD(t,e,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(KD(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,i);return o.makeTensorInfo(a.shape,u,c)}}ZD.nextDataId=0,Rb("cpu",(()=>new ZD),1);const tL=JD(Um,(t=>t>=0?t:Math.exp(t)-1)),eL={kernelName:Um,backendName:"cpu",kernelFunc:tL};function nL(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rL={kernelName:ig,backendName:"cpu",kernelFunc:nL};function iL(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r;KD([i],"leakyRelu");const a=uf(i.shape),o=n.data.get(i.dataId).values,l=yf("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?s*o[t]:o[t];return n.makeTensorInfo(i.shape,"float32",l)}const sL={kernelName:cg,backendName:"cpu",kernelFunc:iL};function aL(t){return(e,n,r,i,s)=>{const a=ab(e,n),o=a.length,l=Cf(a),u=yf(s,uf(a)),c=e.length,h=n.length,d=Cf(e),p=Cf(n),f=ib(e,a),m=ib(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],i[e%i.length]);else for(let e=0;e<u.length;++e){const n=$f(e,o,l),s=n.slice(-c);f.forEach((t=>s[t]=0));const a=Ff(s,c,d),g=n.slice(-h);m.forEach((t=>g[t]=0));const x=Ff(g,h,p);u[e]=t(r[a],i[x])}return[u,a]}}const oL=aL(((t,e)=>t<0?e*t:t));function lL(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e;KD([r,i],"prelu");const s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,[o,l]=oL(r.shape,i.shape,s,a,"float32");return n.makeTensorInfo(l,"float32",o)}const uL={kernelName:Hg,backendName:"cpu",kernelFunc:lL},cL=JD(Jg,(t=>Math.max(0,t))),hL={kernelName:Jg,backendName:"cpu",kernelFunc:cL},dL=JD(ix,(t=>Math.min(Math.max(0,t),6))),pL={kernelName:ix,backendName:"cpu",kernelFunc:dL};function fL(t){return(e,n,r)=>{const i=yf(n,e.length);for(let n=0;n<e.length;++n)i[n]=t(e[n],r);return i}}const mL=fL((t=>1/(1+Math.exp(-t)))),gL=JD(gx,(t=>1/(1+Math.exp(-t)))),xL={kernelName:gx,backendName:"cpu",kernelFunc:gL};function yL(t,e,n,r,i){if("linear"===n)return nL({inputs:{x:e},backend:t});if("relu"===n)return cL({inputs:{x:e},backend:t});if("elu"===n)return tL({inputs:{x:e},backend:t});if("relu6"===n)return dL({inputs:{x:e},backend:t});if("prelu"===n)return lL({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return iL({inputs:{x:e},backend:t,attrs:{alpha:i}});if("sigmoid"===n)return gL({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function vL(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(i.shape,"float32",a)},o}const bL={kernelName:gm,backendName:"cpu",kernelFunc:vL};function wL(t,e,n="float32"){if("complex64"===n)return vL({inputs:{real:wL(t,e,"float32"),imag:wL(t,e,"float32")},backend:t});const r=Rf(uf(e),n);return t.makeTensorInfo(e,n,r)}function SL(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const _L={kernelName:Yg,backendName:"cpu",kernelFunc:SL};function kL(t,e,n,r){if("int32"===r)return[e,"int32",Int32Array.from(t)];if("bool"===r){const r=wy([0],n),[i,s]=aL(((t,e)=>t!==e?1:0))(e,[],t,r,"bool");return[s,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function IL(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return nL({inputs:{x:i},backend:n});const t=wL(n,i.shape,i.dtype),e=IL({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=vL({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===i.dtype){const t=SL({inputs:{input:i},backend:n}),e=IL({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!bf(i.dtype,s)){const t=nL({inputs:{x:i},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}const a=n.data.get(i.dataId).values,[o,l,u]=kL(a,i.shape,i.dtype,s);return n.makeTensorInfo(o,l,u)}const ML={kernelName:pm,backendName:"cpu",kernelFunc:IL};function TL(t,e,n,r){return null==n?({inputs:n,backend:i})=>{const{a:s,b:a}=n,o=i;KD([s,a],t);const l=o.data.get(s.dataId).values,u=o.data.get(a.dataId).values,c="string"===s.dtype?dI(l):l,h="string"===s.dtype?dI(u):u,d=r||s.dtype,[p,f]=e(s.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:i})=>{const{a:s,b:a}=t,o=i;if("complex64"===s.dtype||"complex64"===a.dtype){const t=IL({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,i=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c=IL({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,x,y]=n(s.shape,a.shape,l,u,f,m),v=o.makeTensorInfo(y,"float32",g),b=o.makeTensorInfo(y,"float32",x),w=vL({inputs:{real:v,imag:b},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(b),w}{const t=o.data.get(s.dataId).values,n=o.data.get(a.dataId).values,i=r||s.dtype,[l,u]=e(s.shape,a.shape,t,n,i);return o.makeTensorInfo(u,i,l)}}}function CL(t){return(e,n,r,i,s,a)=>{const o=ab(e,n),l=uf(o),u=o.length,c=Cf(o),h=yf("float32",l),d=yf("float32",l),p=ib(e,o),f=ib(n,o),m=Fk(r,i),g=Fk(s,a),x=e.length,y=Cf(e),v=n.length,b=Cf(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%g.length,i=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[e]=i.real,d[e]=i.imag}else for(let e=0;e<h.length;e++){const n=$f(e,u,c),r=n.slice(-x);p.forEach((t=>r[t]=0));const i=Ff(r,x,y),s=n.slice(-v);f.forEach((t=>s[t]=0));const a=Ff(s,v,b),o=t(m[2*i],m[2*i+1],g[2*a],g[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const EL=aL(((t,e)=>t+e)),AL=CL(((t,e,n,r)=>({real:t+n,imag:e+r}))),NL=TL(Xf,EL,AL),RL={kernelName:Xf,backendName:"cpu",kernelFunc:NL};function DL(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=uf(i.shape),o=mf(s,a),l=uf(o);sf(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(i.dataId);const u=n.data.get(i.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:i.dataId,shape:o,dtype:i.dtype}}const LL={kernelName:Qg,backendName:"cpu",kernelFunc:DL};function FL(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;KD([i,s],"matMul");const l=i.shape.length,u=s.shape.length,c=a?i.shape[l-2]:i.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=a?i.shape[l-1]:i.shape[l-2],p=o?s.shape[u-2]:s.shape[u-1],f=i.shape.slice(0,-2),m=s.shape.slice(0,-2),g=uf(f),x=uf(m),y=ab(i.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);sf(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[x,p,h]:[x,h,p],b=DL({inputs:{x:i},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=DL({inputs:{x:s},backend:n,attrs:{shape:v}}),S=a?b.shape[1]:b.shape[2],_=a?b.shape[2]:b.shape[1],k=o?w.shape[1]:w.shape[2],I=Math.max(g,x),M=n.data.get(b.dataId).values,T=n.data.get(w.dataId).values,C=Cf(b.shape),E=Cf(w.shape),[A,N,R]=a?[C[0],1,C[1]]:[C[0],C[1],1],[D,L,F]=o?[1,E[1],E[0]]:[E[1],1,E[0]],$=_*k,P=Xv([I,_,k],b.dtype),O=P.values,z=n.blockSize;for(let t=0;t<I;t++)for(let e=0;e<_;e+=z)for(let n=0;n<k;n+=z)for(let r=0;r<S;r+=z){const i=Math.min(e+z,_),s=Math.min(n+z,k),a=Math.min(r+z,S);for(let o=e;o<i;o++)for(let e=n;e<s;e++){let n=0;for(let i=r;i<a;i++){const r=Math.min(t,g-1)*A,s=Math.min(t,x-1)*F;n+=M[r+o*N+i*R]*T[i*D+e*L+s]}O[t*$+(o*k+e)]+=n}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,P.dtype,P.values)}const $L={kernelName:um,backendName:"cpu",kernelFunc:FL},PL={kernelName:qx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=FL({inputs:{a:i,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=NL({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=yL(n,d,c,o,h),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function OL(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const zL={kernelName:Hf,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;KD(e,"abs");let r=new Float32Array(uf(e.shape));return r=OL(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},BL=JD(jf,(t=>Math.acos(t))),UL={kernelName:jf,backendName:"cpu",kernelFunc:BL},WL=JD(qf,(t=>Math.acosh(t))),VL={kernelName:qf,backendName:"cpu",kernelFunc:WL},GL={kernelName:Kf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;KD(e,"addN");const i=r.map((t=>n.data.get(t.dataId).values)),s=Xv(r[0].shape,r[0].dtype),a=s.values;for(let t=0;t<r.length;t++){const e=i[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function HL(t,e,n,r,i){const s=e.length,a=uf(e),o=Cf(e),l=Cf(i),u=yf(n,uf(i));for(let e=0;e<a;++e){const n=$f(e,s,o),i=new Array(n.length);for(let t=0;t<i.length;t++)i[t]=n[r[t]];u[Ff(i,s,l)]=t[e]}return u}function jL(t){const{inputs:e,attrs:n,backend:r}=t,{x:i}=e,{perm:s}=n;KD(i,"transpose");const a=i.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=i.shape[s[t]];const l=HL(r.data.get(i.dataId).values,i.shape,i.dtype,s,o);return{dataId:r.write(l,o,i.dtype),shape:o,dtype:i.dtype}}const qL={kernelName:Bx,backendName:"cpu",kernelFunc:jL},XL={kernelName:Yf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;KD(i,"all");const o=gf(s,i.shape);let l=o;const u=rS(l,i.shape.length);let c=i;null!=u&&(c=jL({inputs:{x:i},backend:n,attrs:{perm:u}}),l=sS(l.length,i.shape.length)),nS("all",l,c.shape.length);const[h,d]=tS(c.shape,l),p=uf(d),f=Rf(uf(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=DL({inputs:{x:g},backend:n,attrs:{shape:eS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},KL={kernelName:Zf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;KD(i,"any");const o=gf(s,i.shape);let l=o;const u=rS(l,i.shape.length);let c=i;null!=u&&(c=jL({inputs:{x:i},backend:n,attrs:{perm:u}}),l=sS(l.length,i.shape.length)),nS("any",l,c.shape.length);const[h,d]=tS(c.shape,l),p=uf(d),f=Rf(uf(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=DL({inputs:{x:g},backend:n,attrs:{shape:eS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},YL={kernelName:Jf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;KD(i,"argMax");let a=gf(s,i.shape);const o=rS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=jL({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=sS(a.length,l.shape.length)),a=[a[0]],nS("argMax",a,l.shape.length);const[c,h]=tS(l.shape,a),d=Rf(uf(c),"int32"),p=uf(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const i=f[e+t];i>n&&(n=i,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},ZL={kernelName:Qf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;KD(i,"argMin");let a=gf(s,i.shape);const o=rS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=jL({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=sS(a.length,l.shape.length)),a=[a[0]],nS("argMin",a,l.shape.length);const[c,h]=tS(l.shape,a),d=Rf(uf(c),"int32"),p=uf(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const i=f[e+t];i<n&&(n=i,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},JL=JD(tm,(t=>Math.asin(t))),QL={kernelName:tm,backendName:"cpu",kernelFunc:JL},tF=JD(em,(t=>Math.asinh(t))),eF={kernelName:em,backendName:"cpu",kernelFunc:tF},nF=JD(nm,(t=>Math.atan(t))),rF={kernelName:nm,backendName:"cpu",kernelFunc:nF},iF=aL(((t,e)=>Math.atan2(t,e))),sF=TL(im,iF),aF={kernelName:im,backendName:"cpu",kernelFunc:sF},oF=JD(rm,(t=>Math.atanh(t))),lF={kernelName:rm,backendName:"cpu",kernelFunc:oF};function uF(t,e,n,r,i,s){const a=i.strideHeight,o=i.strideWidth,l=i.dilationHeight,u=i.dilationWidth,c=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Xv(i.outShape,n),g=m.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],y=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let e=0;e<i.batchSize;++e){const n=e*x,m=e*r[0];for(let e=0;e<i.inChannels;++e)for(let x=0;x<i.outHeight;++x){const b=x*a-d,w=Math.max(0,b),S=Math.min(i.inHeight,c+b),_=n+x*y;for(let n=0;n<i.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(i.inWidth,h+a);let x=f,y=0,b=0;for(let n=w;n<S;n+=l){const i=m+n*r[1];for(let n=c;n<d;n+=u){const a=t[i+n*r[2]+e];"max"===s&&a>x?x=a:"avg"===s&&(y+=a,b++)}if(isNaN(x))break}g[_+n*v+e]="avg"===s?y/b:x}}}return m}function cF(t,e,n,r,i=!1,s=!1){const a=Xv(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Xv(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let x=g;for(;x<0;)x+=u;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let b=Number.NEGATIVE_INFINITY,w=-1;for(let n=x;n<y;n+=u){const a=n-g;for(let o=p;o<v;o+=c){const l=o-h,u=m.get(t,n,o,e);u>b&&(b=u,w=i?s?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(w,t,n,o,e)}}return a}function hF(t,e,n,r,i,s){const a=i.strideDepth,o=i.strideHeight,l=i.strideWidth,u=i.dilationDepth,c=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,f=i.effectiveFilterWidth,m=i.padInfo.front,g=i.padInfo.top,x=i.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Xv(i.outShape,n),b=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[3]*i.outShape[4],k=i.outShape[4];for(let e=0;e<i.batchSize;++e){const n=e*w,v=e*r[0];for(let e=0;e<i.inChannels;++e)for(let w=0;w<i.outDepth;++w){const I=w*a-m;let M=I;for(;M<0;)M+=u;const T=Math.min(i.inDepth,d+I),C=n+w*S;for(let n=0;n<i.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(i.inHeight,p+a),w=C+n*_;for(let n=0;n<i.outWidth;++n){const a=n*l-x;let o=a;for(;o<0;)o+=h;const p=Math.min(i.inWidth,f+a),g=w+n*k;let S=y,_=0,I=0;for(let n=M;n<T;n+=u){const i=v+n*r[1];for(let n=d;n<m;n+=c){const a=i+n*r[2];for(let n=o;n<p;n+=h){const i=t[a+n*r[3]+e];if("max"===s&&i>S?S=i:"avg"===s&&(_+=i,I++),isNaN(S))break}if(isNaN(S))break}if(isNaN(S))break}b[g+e]="avg"===s?_/I:S}}}}return v}const dF={kernelName:sm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;KD(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;sf(Qb(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Vb(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&cf(u.inShape,u.outShape))c=nL({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Cf(i.shape),r=uF(t,i.shape,i.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},pF={kernelName:om,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;KD(i,"avgPool3d");const c=Gb(i.shape,s,a,1,o,l,u),h=hF(n.data.get(i.dataId).values,i.shape,i.dtype,Cf(i.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},fF={kernelName:lm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;KD([i,s],"avgPool3DGrad");const c=Gb(s.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,S=c.effectiveFilterWidth,_=b-1-c.padInfo.front,k=S-1-c.padInfo.left,I=w-1-c.padInfo.top,M=Xv(s.shape,"float32"),T=1/(f*m*g),C=n.bufferSync(i);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let i=0;i<c.inWidth;++i){const s=n-_,a=r-I,o=i-k;let l=0;for(let n=0;n<b;n+=x){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const i=(a+n)/d;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let n=0;n<S;n+=v){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(l+=C.get(t,r,i,s,e))}}}M.set(l*T,t,n,r,i,e)}return n.makeTensorInfo(M.shape,M.dtype,M.values)}},mF={kernelName:am,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;KD([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Vb(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,b=x-1-c.padInfo.top,w=Xv(a.shape,"float32"),S=1/(p*f),_=n.data.get(i.dataId).values,k=Xv(i.shape,"float32",_);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const i=n-b,s=r-v;let a=0;for(let n=0;n<x;n+=m){const r=(i+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const i=(s+n)/d;i<0||i>=c.outWidth||Math.floor(i)!==i||(a+=k.get(t,r,i,e))}}w.set(a*S,t,n,r,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},gF={kernelName:Qm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,scale:s,offset:a,mean:o,variance:l}=e;sf(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),sf(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),sf(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),KD([i,o,l,s,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,y=d.length,v=h.length;let b=0,w=0,S=0,_=0;for(let t=0;t<c.length;++t)m[t]=f[b++]+(c[t]-h[w++])*p[S++]/Math.sqrt(d[_++]+u),b>=g&&(b=0),w>=v&&(w=0),S>=x&&(S=0),_>=y&&(_=0);return n.makeTensorInfo(i.shape,i.dtype,m)}};function xF(t,e,n,r,i){const s=vb(r,e,n),a=uf(n),o=Cf(r);if(s){const n=bb(e,o);return"string"===i?t.slice(n,n+a):t.subarray(n,n+a)}const l=Xv(r,i,"string"===i?dI(t):t),u=Xv(n,i);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===i?pI(u.values):u.values}function yF(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r;KD(i,"slice");const[o,l]=wb(i,s,a);ob(i,o,l);const u=xF(n.data.get(i.dataId).values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,u)}const vF={kernelName:dx,backendName:"cpu",kernelFunc:yF},bF={kernelName:cm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;KD([i],"batchToSpaceND");const o=s.reduce(((t,e)=>t*e)),l=yk(i.shape,s,o),u=vk(l.length,s.length),c=bk(i.shape,s,o),h=wk(a,s.length),d=Sk(c,a,s.length),p=DL({inputs:{x:i},backend:n,attrs:{shape:l}}),f=jL({inputs:{x:p},backend:n,attrs:{perm:u}}),m=DL({inputs:{x:f},backend:n,attrs:{shape:c}}),g=yF({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function wF(t,e,n,r,i){const s=uf(r),a=Rf(i,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(a[r]+=s>0?e[n]:1)}return a}function SF(t,e,n,r=!1){const i=t.shape[0],s=t.shape[1],a=Xv([i,n],e.dtype);for(let o=0;o<i;o++)for(let i=0;i<s;i++){const s=t.get(o,i);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?a.set(1,o,s):e.size>0?a.set(a.get(o,s)+e.get(o,i),o,s):a.set(a.get(o,s)+1,o,s))}return a}const _F={kernelName:hm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=wF(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,o)}},kF={kernelName:dm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=ab(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},IF=fL((t=>Math.ceil(t))),MF=QD(fm,IF),TF={kernelName:fm,backendName:"cpu",kernelFunc:MF},CF=JD(mm,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),EF={kernelName:mm,backendName:"cpu",kernelFunc:CF},AF={kernelName:xm,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(uf(e.shape)),i=n.data.get(e.dataId),s=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function NF(t,e,n,r){const i=vf(n,uf(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=uf(t.shape);i.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const s="string"===n?dI(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)i[o+e]=s[a++]}r+=t.shape[1]}))}return i}function RF(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const DF={kernelName:ag,backendName:"cpu",kernelFunc:RF};function LF(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=gf(i,e[0].shape)[0];lk(e.map((t=>t.shape)),s);let a=uk(e.map((t=>t.shape)),s);if(0===uf(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>uf(t.shape)>0));if(1===o.length)return nL({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const t=o.map((t=>SL({inputs:{input:t},backend:n}))),e=o.map((t=>RF({inputs:{input:t},backend:n}))),r=LF({inputs:t,backend:n,attrs:{axis:s}}),i=LF({inputs:e,backend:n,attrs:{axis:s}}),a=vL({inputs:{real:r,imag:i},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}const l=o.map((t=>{const e=uf(t.shape.slice(s));return DL({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=uk(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=NF(u,a,e[0].dtype,c),d=uk(o.map((t=>t.shape)),s),p=n.makeTensorInfo(d,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const FF={kernelName:ym,backendName:"cpu",kernelFunc:LF};function $F(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;KD([i,s],"conv2d");const h=tw(l),d=Hb(i.shape,s.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,v="channelsLast"===d.dataFormat,b=new Dy(d.outShape,i.dtype),w=Cf(i.shape),S=Cf(s.shape),_=w[0],k=v?w[1]:w[2],I=v?w[2]:1,M=v?1:w[1],T=b.strides[0],C=v?b.strides[1]:b.strides[2],E=v?b.strides[2]:1,A=v?1:b.strides[1],N=n.data.get(i.dataId).values,R=n.data.get(s.dataId).values,D=b.values;for(let t=0;t<d.batchSize;++t){const e=t*_,n=t*T;for(let t=0;t<d.outHeight;++t){const r=n+t*C,i=t*d.strideHeight-y;for(let t=0;t<p;++t){const n=i+t*m;if(n<0||n>=d.inHeight)continue;const s=t*S[0],a=e+n*k;for(let t=0;t<d.outWidth;++t){const e=r+t*E,n=t*d.strideWidth-x;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const i=a+r*I;let o=s+t*S[1];for(let t=0;t<d.inChannels;++t){const n=N[i+t*M];for(let t=0;t<d.outChannels;++t)D[e+t*A]+=n*R[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,D)}const PF={kernelName:vm,backendName:"cpu",kernelFunc:$F},OF={kernelName:bm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;KD([i,s],"conv2dBackpropFilter");const h=tw(l),d=Hb(i.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x="channelsLast"===d.dataFormat,y=new Dy(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=n.data.get(i.dataId).values,S=n.data.get(s.dataId).values,_=new Dy(i.shape,i.dtype,w),k=new Dy(s.shape,s.dtype,S);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(d.outHeight,(d.inHeight+b-t)/p);for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((v-r)/f)),s=Math.min(d.outWidth,(d.inWidth+v-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=i;t<s;++t){const n=r+t*f-v;l+=x?_.get(u,e,n,a)*k.get(u,c,t,o):_.get(u,a,e,n)*k.get(u,o,c,t)}}y.set(l,t,r,a,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},zF={kernelName:wm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;KD([i,s],"conv2dBackpropInput");const h=Cf(s.shape),d=Cf(i.shape);let p=tw(u);const f=Hb(a,s.shape,o,1,l,c,!1,p),m=new Dy(f.inShape,"float32"),g=m.values,x=n.data.get(i.dataId).values,y=n.data.get(s.dataId).values,[v,b,w]=h,{batchSize:S,filterHeight:_,filterWidth:k,inChannels:I,inHeight:M,inWidth:T,outChannels:C,outHeight:E,outWidth:A,strideHeight:N,strideWidth:R}=f;p=f.dataFormat;const D=_-1-f.padInfo.top,L=k-1-f.padInfo.left,F="channelsLast"===p,$=m.strides[0],P=F?m.strides[1]:m.strides[2],O=F?m.strides[2]:1,z=F?1:m.strides[1],B=d[0],U=F?d[1]:d[2],W=F?d[2]:1,V=F?1:d[1];for(let t=0;t<S;++t)for(let e=0;e<I;++e)for(let n=0;n<M;++n){const r=n-D,i=Math.max(0,Math.ceil(r/N)),s=Math.min(E,(_+r)/N);for(let a=0;a<T;++a){const o=a-L,l=Math.max(0,Math.ceil(o/R)),u=Math.min(A,(k+o)/R);let c=0;for(let n=i;n<s;++n){const i=n*N-r;for(let r=l;r<u;++r){const s=B*t+U*n+W*r,a=v*(_-1-i)+b*(k-1-(r*R-o))+w*e;for(let t=0;t<C;++t)c+=x[s+V*t]*y[a+t]}}g[$*t+P*n+O*a+z*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},BF={kernelName:Sm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r;KD([i,s],"conv3d");const u=jb(i.shape,s.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,x=g.front,y=g.left,v=g.top,b=new Dy(u.outShape,i.dtype),w=n.data.get(i.dataId).values,S=n.data.get(s.dataId).values,_=b.values,k=Cf(i.shape),I=Cf(s.shape);for(let t=0;t<u.batchSize;++t){const e=t*k[0],n=t*b.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*b.strides[1],i=t*u.strideDepth-x;for(let t=0;t<c;++t){const n=i+t*p;if(n<0||n>=u.inDepth)continue;const s=t*I[0],a=e+n*k[1];for(let t=0;t<u.outHeight;++t){const e=r+t*b.strides[2],n=t*u.strideHeight-v;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const i=s+t*I[1],o=a+r*k[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-y;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const s=i+t*I[2],a=o+e*u.inChannels;let l=s;for(let t=0;t<u.inChannels;++t){const e=w[a+t];for(let t=0;t<u.outChannels;++t)_[n+t]+=e*S[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},UF={kernelName:_m,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r;KD([i,s],"conv3dBackpropFilterV2");const u=Cf(i.shape),c=Cf(s.shape),h=jb(i.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new Dy(h.filterShape,"float32"),v=y.values,[b,w,S,_]=y.strides,k=n.data.get(s.dataId).values,[I,M,T,C]=c,E=n.data.get(i.dataId).values,[A,N,R,D]=u,L=h.padInfo.front,F=h.padInfo.left,$=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((L-t)/d)),n=Math.min(h.outDepth,(h.inDepth+L-t)/d),r=t*b;for(let i=0;i<g;++i){const s=Math.max(0,Math.ceil(($-i)/p)),a=Math.min(h.outHeight,(h.inHeight+$-i)/p),o=i*w+r;for(let r=0;r<x;++r){const l=Math.max(0,Math.ceil((F-r)/f)),u=Math.min(h.outWidth,(h.inWidth+F-r)/f),c=r*S+o;for(let o=0;o<h.inChannels;++o){const m=o*_+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,x=m*I;for(let m=e;m<n;++m){const e=(t+m*d-L)*N+h,n=m*M+x;for(let t=s;t<a;++t){const s=(i+t*p-$)*R+e,a=t*T+n;for(let t=l;t<u;++t){const e=t*C+a;g+=E[(r+t*f-F)*D+s+o]*k[e+c]}}}}v[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},WF={kernelName:km,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r;KD([i],"conv3dBackpropInputV2");const u=Cf(i.shape),c=Cf(s.shape),h=jb(l,s.shape,o,1,a),d=new Dy(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=n.data.get(i.dataId).values,[v,b,w,S]=u,_=n.data.get(s.dataId).values,[k,I,M,T]=c,{batchSize:C,filterDepth:E,filterHeight:A,filterWidth:N,inChannels:R,inDepth:D,inHeight:L,inWidth:F,outChannels:$,outDepth:P,outHeight:O,outWidth:z,strideDepth:B,strideHeight:U,strideWidth:W}=h,V=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=N-1-h.padInfo.left;for(let t=0;t<C;++t)for(let e=0;e<R;++e)for(let n=0;n<D;++n){const r=n-V,i=Math.max(0,Math.ceil(r/B)),s=Math.min(P,(E+r)/B);for(let a=0;a<L;++a){const o=a-G,l=Math.max(0,Math.ceil(o/U)),u=Math.min(O,(A+o)/U);for(let c=0;c<F;++c){const h=c-H,d=Math.max(0,Math.ceil(h/W)),C=Math.min(z,(N+h)/W);let R=0;for(let n=i;n<s;++n){const i=n*B-r;for(let r=l;r<u;++r){const s=r*U-o;for(let a=d;a<C;++a){const o=v*t+b*n+w*r+S*a,l=k*(E-1-i)+I*(A-1-s)+M*(N-1-(a*W-h))+T*e;for(let t=0;t<$;++t)R+=y[o+t]*_[l+t]}}}p[f*t+m*n+g*a+x*c+e]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},VF=JD(Im,(t=>Math.cos(t))),GF={kernelName:Im,backendName:"cpu",kernelFunc:VF},HF=JD(Mm,(t=>Math.cosh(t))),jF={kernelName:Mm,backendName:"cpu",kernelFunc:HF},qF={kernelName:Em,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=i.shape,f=s.shape[0],[m,g]=o,x=Xv([f,m,g,p],"float32"),y=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,b=n.data.get(i.dataId).values,w=Cf(i.shape),S=Cf(x.shape);for(let t=0;t<f;t++){const e=4*t,n=y[e],r=y[e+1],i=y[e+2],s=y[e+3],a=v[t];if(a>=c)continue;const o=m>1?(i-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+i)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const i=r+n*S[2]+e*S[1]+t*S[0];x.values[i]=u}else if("bilinear"===l){const n=Math.floor(c),i=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*S[2]+e*S[1]+t*S[0];x.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let s=r+h*w[2]+n*w[1]+a*w[0];const u=b[s];s=r+m*w[2]+n*w[1]+a*w[0];const c=b[s];s=r+h*w[2]+i*w[1]+a*w[0];const d=b[s];s=r+m*w[2]+i*w[1]+a*w[0];const p=u+(c-u)*y,f=d+(b[s]-d)*y;s=r+l*S[2]+e*S[1]+t*S[0],x.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const i=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(i<0||i>d-1){for(let r=0;r<p;r++){const i=r+n*S[2]+e*S[1]+t*S[0];x.values[i]=u}continue}const o=Math.round(i),l=Math.round(c);for(let r=0;r<p;r++){const i=r+o*w[2]+l*w[1]+a*w[0],s=r+n*S[2]+e*S[1]+t*S[0];x.values[s]=b[i]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},XF={kernelName:Tm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;KD(i,"cumprod");const l=rS([s],i.shape.length);let u=i;null!=l&&(u=jL({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=sS(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=jy(u.dtype,"int32"),d=Nf(uf(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?1:p[n];else{const r=m(t,e-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=jL({inputs:{x:g},backend:n,attrs:{perm:iS(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},KF={kernelName:Cm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;KD(i,"cumsum");const l=rS([s],i.shape.length);let u=i;null!=l&&(u=jL({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=sS(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=jy(u.dtype,"int32"),d=Rf(uf(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const r=m(t,e-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=jL({inputs:{x:g},backend:n,attrs:{perm:iS(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},YF={kernelName:Am,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=wF(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,t)}if(2===i.shape.length){const t=SF(n.bufferSync(i),n.bufferSync(s),a,o);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}},ZF={kernelName:Nm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r;sf("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=i.shape[0],l=i.shape[1],u=i.shape[2],c=i.shape[3],h=l*s,d=u*s,p=c/(s*s),f=n.data.get(i.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/s),r=e%s;for(let e=0;e<d;++e){const i=Math.floor(e/s),a=(r*s+e%s)*p;for(let e=0;e<p;++e){const r=e+a+c*(i+u*(n+l*t));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],i.dtype,m)}};function JF(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;KD([i,s],"depthwiseConv2DNative");const c=Cf(i.shape),h=Cf(s.shape);let d=l;null==d&&(d=[1,1]),sf(Qb(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=Hb(i.shape,s.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,v=y.left,b=y.top,w=p.outChannels/p.inChannels,S=new Dy(p.outShape,i.dtype),_=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,I=S.values;for(let t=0;t<p.batchSize;++t){const e=t*c[0],n=t*S.strides[0];for(let t=0;t<p.outHeight;++t){const r=n+t*S.strides[1],i=t*p.strideHeight-b;for(let t=0;t<f;++t){const n=i+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],a=e+n*c[1];for(let t=0;t<p.outWidth;++t){const e=r+t*S.strides[2],n=t*p.strideWidth-v;for(let t=0;t<m;++t){const r=n+t*x;if(r<0||r>=p.inWidth)continue;const i=s+t*h[1],o=a+r*p.inChannels;let l=e,u=i;for(let t=0;t<p.inChannels;++t){const e=_[o+t];for(let t=0;t<w;++t)I[l+t]+=e*k[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const QF={kernelName:Rm,backendName:"cpu",kernelFunc:JF},t$={kernelName:Dm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;KD([i,s],"depthwiseConv2dNativeBackpropFilter");const h=Hb(i.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Dy(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,v=h.outChannels/h.inChannels,b=n.data.get(i.dataId).values,w=new Dy(i.shape,i.dtype,b),S=n.data.get(s.dataId).values,_=new Dy(s.shape,s.dtype,S);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((y-t)/d)),n=Math.min(h.outHeight,(h.inHeight+y-t)/d);for(let r=0;r<m;++r){const i=Math.max(0,Math.ceil((x-r)/p)),s=Math.min(h.outWidth,(h.inWidth+x-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/v),l=a%v;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-y;for(let t=i;t<s;++t){const n=r+t*p-x;u+=w.get(l,e,n,o)*_.get(l,c,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},e$={kernelName:Lm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;KD([i,s],"depthwiseConv2DNativeBackpropInput");const h=Cf(i.shape),d=Cf(s.shape),p=Hb(c,s.shape,a,o,l,u,!0),f=new Dy(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,v=n.data.get(i.dataId).values,[b,w,S]=h,_=n.data.get(s.dataId).values,[k,I,M]=d,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:A,inHeight:N,inWidth:R,outChannels:D,outHeight:L,outWidth:F,strideHeight:$,strideWidth:P}=p,O=C-1-p.padInfo.top,z=E-1-p.padInfo.left,B=D/A;for(let t=0;t<T;++t)for(let e=0;e<A;++e)for(let n=0;n<N;++n){const r=n-O,i=Math.max(0,Math.ceil(r/$)),s=Math.min(L,(C+r)/$);for(let a=0;a<R;++a){const o=a-z,l=Math.max(0,Math.ceil(o/P)),u=Math.min(F,(E+o)/P);let c=0;for(let n=i;n<s;++n){const i=n*$-r;for(let r=l;r<u;++r){const s=b*t+w*n+S*r,a=k*(C-1-i)+I*(E-1-(r*P-o))+M*e;for(let t=0;t<B;++t)c+=v[s+(e*B+t)]*_[a+t]}}m[g*t+x*n+y*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},n$={kernelName:Fm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=uf(r.shape),s=n.data.get(r.dataId).values,a=Xv([i,i],r.dtype),o=a.values;for(let t=0;t<s.length;t++)o[t*i+t]=s[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},r$={kernelName:$m,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i}=t,{strides:s,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:_,dilationHeight:k,dilationWidth:I,outShape:M}=Wb(r.shape,i.shape,s,a,"NHWC",o),T=uf(M),C=M.length,E=vf(r.dtype,T);for(let t=0;t<p;++t)for(let e=0;e<x;++e){const n=e*b-v.top;for(let s=0;s<y;++s){const a=s*w-v.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const s=n+e*k;if(s>=0&&s<f)for(let n=0;n<_;++n){const p=a+n*I;if(p>=0&&p<m){const a=Ff([t,s,p,o],c,Cf(r.shape)),f=Ff([e,n,o],d,Cf(i.shape)),m=u[a]+h[f];m>l&&(l=m)}}}E[Ff([t,e,s,o],C,Cf(M))]=l}}}return{dataId:l.write(wy(E,r.dtype),M,r.dtype),shape:M,dtype:r.dtype}}},i$={kernelName:Om,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Af(r.shape,u.data.get(r.dataId).values),h=Af(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:_,dilationWidth:k,outShape:I}=Wb(r.shape,i.shape,a,o,"NHWC",l);sf(s.rank===I.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${I.length}, but got ${s.rank}`));const M=Af(I,u.data.get(s.dataId).values),T=Df(i.shape,i.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*v-y.top;for(let r=0;r<x;++r){const i=r*b-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const r=n+e*_;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=i+n*k;if(u>=0&&u<f){const i=c[t][r][u][s]+h[e][n][s];i>a&&(a=i,o=e,l=n)}}}T[o][l][s]+=M[t][e][r][s]}}}return{dataId:u.write(wy(T,r.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},s$={kernelName:Pm,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:i,dy:s}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Af(r.shape,u.data.get(r.dataId).values),h=Af(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:_,dilationWidth:k,outShape:I}=Wb(r.shape,i.shape,a,o,"NHWC",l);sf(s.rank===I.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${I.length}, but got ${s.rank}`));const M=Af(I,u.data.get(s.dataId).values),T=Df(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*v-y.top;for(let r=0;r<x;++r){const i=r*b-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=i<0?0:i;for(let e=0;e<w;++e){const r=n+e*_;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=i+n*k;if(u>=0&&u<f){const i=c[t][r][u][s]+h[e][n][s];i>a&&(a=i,o=r,l=u)}}}T[t][o][l][s]+=M[t][e][r][s]}}}return{dataId:u.write(wy(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},a$=aL(((t,e)=>t*e)),o$=CL(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),l$=TL(Lg,a$,o$),u$={kernelName:Lg,backendName:"cpu",kernelFunc:l$};function c$(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;let o;KD(i,"sum"),o="bool"===i.dtype?IL({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):nL({inputs:{x:i},backend:n});const l=o.shape.length,u=gf(s,o.shape),c=rS(u,l);let h=u,d=o;null!=c&&(d=jL({inputs:{x:o},backend:n,attrs:{perm:c}}),h=sS(h.length,l)),nS("sum",h,d.shape.length);const[p,f]=tS(d.shape,h);let m=wL(n,p,jy(d.dtype,"int32"));const g=uf(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<x.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=y[e+t];x[t]=n}if(a){const t=m;m=DL({inputs:{x:m},backend:n,attrs:{shape:eS(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const h$={kernelName:vx,backendName:"cpu",kernelFunc:c$},d$={kernelName:Bm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=Gk(i,s.length);jk(a.length,l,s);const{path:u,steps:c}=qk(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=Hk(p,l[e]);let i;Xk(t)?i=s[e]:(i=jL({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);cf(i.shape,a)||(i=DL({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=l$({inputs:{a:i,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=c$({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},p$={kernelName:Wm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:i}=e;KD([r,i],"eluGrad");const s=new Float32Array(uf(i.shape)),a=n.data.get(i.dataId).values,o=n.data.get(r.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];s[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(i.shape,"float32",s)}},f$=aL(((t,e)=>t===e?1:0)),m$=TL(Gm,f$,null,"bool"),g$={kernelName:Gm,backendName:"cpu",kernelFunc:m$},x$=Ek,y$=Ak,v$=Nk,b$=Rk,w$=Dk,S$=Lk,_$=JD(Vm,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+x$*n);return e*(1-((((S$*r+w$)*r+b$)*r+v$)*r+y$)*r*Math.exp(-n*n))})),k$={kernelName:Vm,backendName:"cpu",kernelFunc:_$},I$=fL((t=>Math.exp(t))),M$=QD(Hm,I$,"float32"),T$={kernelName:Hm,backendName:"cpu",kernelFunc:M$};function C$(t){const{inputs:e,backend:n,attrs:r}=t,{input:i}=e,{dim:s}=r,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(sf(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),DL({inputs:{x:i},backend:n,attrs:{shape:o}})}const E$={kernelName:jm,backendName:"cpu",kernelFunc:C$},A$=fL((t=>Math.expm1(t))),N$=QD(qm,A$),R$={kernelName:qm,backendName:"cpu",kernelFunc:N$},D$=aL(((t,e)=>t/e)),L$=TL(zm,D$),F$={kernelName:zm,backendName:"cpu",kernelFunc:L$},$$=aL(((t,e)=>t-e)),P$=CL(((t,e,n,r)=>({real:t-n,imag:e-r}))),O$=TL(Lx,$$,P$),z$={kernelName:Lx,backendName:"cpu",kernelFunc:O$};function B$(t,e,n){const r=t.shape,i=r[0],s=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[i,s],c=uf(u),h=yf("float32",c),d=yf("float32",c);for(let t=0;t<i;t++){const r=yF({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,s]}}),i=yF({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,s]}}),a=vL({inputs:{real:r,imag:i},backend:n}),{real:u,imag:c}=U$(a,e,n),p=Fk(u,c);for(let e=0;e<s;e++){const n=zk(p,e);h[t*s+e]=n.real,d[t*s+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=vL({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function U$(t,e,n){const r=uf(t.shape),i=n.data.get(t.dataId),s=n.data.get(i.complexTensorInfos.real.dataId).values,a=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const i=W$(s,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",i.real),e=n.makeTensorInfo(o,"float32",i.imag),s=n.makeTensorInfo([],"float32",by(r,"float32")),a=nL({inputs:{x:s},backend:n}),l=F$.kernelFunc({inputs:{a:t,b:s},backend:n}),u=F$.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return i}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let i=0;i<e;i++){let s=0,a=0;for(let r=0;r<e;r++){const o=Wk(i*r,e,n),l=zk(t,r);s+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(s/=e,a/=e),Bk(r,s,a,i)}return r}(Fk(s,a),r,e);return $k(t)}var o}function W$(t,e,n,r,i){if(1===n)return{real:t,imag:e};const s=Fk(t,e),a=n/2,o=Pk(s),l=o.real,u=o.imag,c=[l.length],h=i.makeTensorInfo(c,"float32",l),d=i.makeTensorInfo(c,"float32",u),p=vL({inputs:{real:h,imag:d},backend:i}),f=Ok(s),m=f.real,g=f.imag,x=[m.length],y=i.makeTensorInfo(x,"float32",m),v=i.makeTensorInfo(x,"float32",g),b=vL({inputs:{real:y,imag:v},backend:i}),w=W$(l,u,a,r,i),S=w.real,_=w.imag,k=[S.length],I=i.makeTensorInfo(k,"float32",S),M=i.makeTensorInfo(k,"float32",_),T=vL({inputs:{real:I,imag:M},backend:i}),C=W$(m,g,a,r,i),E=C.real,A=C.imag,N=[E.length],R=i.makeTensorInfo(N,"float32",E),D=i.makeTensorInfo(N,"float32",A),L=vL({inputs:{real:R,imag:D},backend:i}),F=Uk(n,r),$=[F.real.length],P=i.makeTensorInfo($,"float32",F.real),O=i.makeTensorInfo($,"float32",F.imag),z=vL({inputs:{real:P,imag:O},backend:i}),B=l$({inputs:{a:z,b:L},backend:i}),U=NL({inputs:{a:T,b:B},backend:i}),W=O$({inputs:{a:T,b:B},backend:i}),V=SL({inputs:{input:U},backend:i}),G=SL({inputs:{input:W},backend:i}),H=RF({inputs:{input:U},backend:i}),j=RF({inputs:{input:W},backend:i}),q=LF({inputs:[V,G],backend:i,attrs:{axis:0}}),X=LF({inputs:[H,j],backend:i,attrs:{axis:0}}),K=i.data.get(q.dataId).values,Y=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const V$={kernelName:Xm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=uf(r.shape),s=r.shape[r.shape.length-1],a=DL({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=B$(a,!1,n),l=DL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function G$(t){const{backend:e,attrs:n}=t,{shape:r,value:i,dtype:s}=n,a=s||If(i),o=vf(a,uf(r));return function(t,e,n){t.fill(e)}(o,i),e.makeTensorInfo(r,a,o)}const H$={kernelName:Km,backendName:"cpu",kernelFunc:G$},j$={kernelName:Ym,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,i=n,s=yf(r.dtype,uf(r.shape)),[a,o,l,u]=r.shape,c=i.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let i=0;i<u;i++){const a=Math.round(l-t-1),o=e+n+r+i;let h=c[o];a>=0&&a<l&&(h=c[e+n+a*u+i]),s[o]=h}}}}return{dataId:i.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},q$=fL((t=>Math.floor(t))),X$=QD(Zm,q$),K$={kernelName:Zm,backendName:"cpu",kernelFunc:X$},Y$=aL(((t,e)=>Math.floor(t/e))),Z$=TL(Jm,Y$,null,"int32"),J$={kernelName:Jm,backendName:"cpu",kernelFunc:Z$},Q$={kernelName:Xx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=$F({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const t=DL({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=NL({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=NL({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const t=DL({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=yL(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=yL(n,m,p,o,f);n.disposeIntermediateTensorInfo(t)}return m}},tP={kernelName:Kx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=JF({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=NL({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=yL(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function eP(t,e,n,r,i,s,a,o,l){const u=Xv([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let e=0;e<i;e++){const s=t[n*i+e];c+=s*a[e],r.push(s)}if(c<0||c>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let t=0;t<s;t++)u.values[n*s+t]=e.get(...e.indexToLoc(c*s+t))}return u}const nP={kernelName:eg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=uf(r.shape),a=i.shape,o=a[a.length-1],[l,u,c,h]=_k(r,i);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=eP(n.data.get(i.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};function rP(t,e,n){const r=Xv(n,t.dtype);for(let n=0;n<r.size;++n){const i=r.indexToLoc(n).slice(),s=i[0],a=i[2],o=e.locToIndex([s,a]);i[2]=e.values[o];const l=t.locToIndex(i);0<=l&&l<t.values.length&&(r.values[n]=t.values[l])}return r}const iP={kernelName:tg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r;KD([i,s],"gatherV2");const l=gf(a,i.shape)[0],u=n.data.get(s.dataId).values,c=i.shape[l];for(let t=0;t<u.length;++t){const e=u[t];sf(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=uf(s.shape),p=hI(i,s,l,h),f=DL({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=DL({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(m),y=rP(n.bufferSync(f),x,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},sP=aL(((t,e)=>t>e?1:0)),aP=TL(ng,sP,null,"bool"),oP={kernelName:ng,backendName:"cpu",kernelFunc:aP},lP=aL(((t,e)=>t>=e?1:0)),uP=TL(rg,lP,null,"bool"),cP={kernelName:rg,backendName:"cpu",kernelFunc:uP},hP={kernelName:sg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=uf(r.shape),s=r.shape[r.shape.length-1],a=DL({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=B$(a,!0,n),l=DL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},dP=JD(og,(t=>Number.isFinite(t)?1:0),"bool"),pP={kernelName:og,backendName:"cpu",kernelFunc:dP},fP=JD(lg,(t=>Math.abs(t)===1/0?1:0),"bool"),mP={kernelName:lg,backendName:"cpu",kernelFunc:fP},gP=JD(ug,(t=>Number.isNaN(t)?1:0),"bool"),xP={kernelName:ug,backendName:"cpu",kernelFunc:gP},yP=aL(((t,e)=>t<e?1:0)),vP=TL(hg,yP,null,"bool"),bP={kernelName:hg,backendName:"cpu",kernelFunc:vP},wP=aL(((t,e)=>t<=e?1:0)),SP=TL(dg,wP,null,"bool"),_P={kernelName:dg,backendName:"cpu",kernelFunc:SP};function kP(t,e,n){const r=(e-t)/(n-1),i=Rf(n,"float32");i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+r;return i}const IP={kernelName:pg,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=kP(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},MP=fL((t=>Math.log(t))),TP=QD(fg,MP),CP={kernelName:fg,backendName:"cpu",kernelFunc:TP},EP=JD(mg,(t=>Math.log1p(t))),AP={kernelName:mg,backendName:"cpu",kernelFunc:EP},NP=aL(((t,e)=>t&&e)),RP=TL(gg,NP,null,"bool"),DP={kernelName:gg,backendName:"cpu",kernelFunc:RP},LP=JD(xg,(t=>t?0:1),"bool"),FP={kernelName:xg,backendName:"cpu",kernelFunc:LP},$P=aL(((t,e)=>t||e)),PP=TL(yg,$P,null,"bool"),OP={kernelName:yg,backendName:"cpu",kernelFunc:PP},zP={kernelName:vg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r;KD(i,"LRN");const u=i.shape[3],c=u-1,h=n.data.get(i.dataId).values,d=uf(i.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,c);let i=0;for(;n<=r;n++){const t=h[n];i+=t*t}return i}for(let t=0;t<d;t++){const e=f(t),n=h[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(i.shape,i.dtype,p)}},BP={kernelName:bg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;KD(a,"LRNGrad");const h=uf(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),x=h;for(let t=0;t<x;t++){const e=t%d,n=t-e+Math.max(0,e-o),r=t-e+Math.min(d,e+o+1);let i=0;for(let t=n;t<r;t++)i+=Math.pow(f[t],2);i=u*i+l;for(let e=n;e<r;e++){let n=-2*u*c*f[e]*m[t]/i;t===e&&(n+=Math.pow(i,-c)),n*=p[t],g[e]+=n}}return n.makeTensorInfo(a.shape,i.dtype,g)}};function UP(t,e,n,r){const i=yf(r,uf(n));for(let n=0;n<i.length;++n){const r=n*e;let s=t[r];for(let n=0;n<e;++n){const e=t[r+n];(Number.isNaN(e)||e>s)&&(s=e)}i[n]=s}return i}function WP(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=n;let l=i.shape;const u=l.length,c=gf(s,l);let h=c;const d=rS(h,u);let p=o.data.get(i.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=HL(p,l,i.dtype,d,t),h=sS(h.length,u),l=t}KD(i,"max"),nS("max",h,u);const[f,m]=tS(l,h),g=UP(p,uf(m),f,i.dtype),x=o.write(g,f,i.dtype);let y=f;return a&&(y=eS(f,c)),{dataId:x,shape:y,dtype:i.dtype}}const VP={kernelName:wg,backendName:"cpu",kernelFunc:WP},GP=aL(((t,e)=>Math.max(t,e))),HP=TL(Sg,GP),jP={kernelName:Sg,backendName:"cpu",kernelFunc:HP},qP={kernelName:_g,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;KD(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;sf(Qb(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Vb(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&cf(u.inShape,u.outShape))c=nL({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=Cf(i.shape),r=uF(t,i.shape,i.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},XP={kernelName:Ig,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;KD(i,"maxPool3d");const c=Gb(i.shape,s,a,1,o,l,u),h=hF(n.data.get(i.dataId).values,i.shape,i.dtype,Cf(i.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},KP={kernelName:Mg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;KD([i,s],"maxPool3DGrad");const c=Gb(s.shape,a,o,1,l,u),h=function(t,e){const n=Xv(e.outShape,"int32"),r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const y=x*r-d;let v=y;for(;v<0;)v+=a;const b=Math.min(e.inDepth,u+y);for(let r=0;r<e.outHeight;++r){const u=r*i-p;let d=u;for(;d<0;)d+=o;const w=Math.min(e.inHeight,c+u);for(let i=0;i<e.outWidth;++i){const p=i*s-f;let S=p;for(;S<0;)S+=l;const _=Math.min(e.inWidth,h+p);let k=Number.NEGATIVE_INFINITY,I=-1;for(let e=v;e<b;e+=a){const n=e-y;for(let r=d;r<w;r+=o){const i=r-u;for(let s=S;s<_;s+=l){const a=s-p,o=t.get(m,e,r,s,g);o>=k&&(k=o,I=n*c*h+i*c+a)}}}n.set(I,m,x,r,i,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=y-1-c.padInfo.front,S=b-1-c.padInfo.left,_=v-1-c.padInfo.top,k=Xv(s.shape,"float32"),I=n.bufferSync(i);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let i=0;i<c.inWidth;++i){const s=n-w,a=r-_,o=i-S;let l=0;for(let n=0;n<y;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let i=0;i<v;i+=g){const s=(a+i)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<b;a+=x){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*v*b-1-h.get(t,r,s,u,e)===n*v*b+i*b+a?1:0;0!==d&&(l+=I.get(t,r,s,u,e)*d)}}}k.set(l,t,n,r,i,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},YP={kernelName:kg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;KD([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Vb(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Xv(d.outShape,o.dtype,cF(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,S=v-1-d.padInfo.top,_=Xv(o.shape,"float32"),k=n.data.get(i.dataId).values,I=Xv(i.shape,"float32",k);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const i=n-S,s=r-w;let a=0;for(let n=0;n<v;n+=x){const r=(i+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let i=0;i<b;i+=y){const o=(s+i)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=v*b-1-f.get(t,r,o,e)===n*b+i?1:0;0!==l&&(a+=I.get(t,r,o,e)*l)}}_.set(a,t,n,r,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},ZP={kernelName:Tg,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;KD(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Vb(r.shape,i,s,[1,1],a),[h,d]=function(t,e,n,r,i){const s=uF(t,0,n,Cf(e),i,"max"),a=cF(t,e,n,i,!0,r);return[s.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},JP={kernelName:Cg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=gf(s,i.shape),l=uf(tS(i.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=IL({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=L$({inputs:{a:h,b:c},backend:n});u.push(d);const p=c$({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},QP={kernelName:Eg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;KD(i,"min");const o=gf(s,i.shape);let l=o;const u=rS(l,i.shape.length);let c=i;null!=u&&(c=jL({inputs:{x:i},backend:n,attrs:{perm:u}}),l=sS(l.length,i.shape.length)),nS("min",l,c.shape.length);const[h,d]=tS(c.shape,l),p=uf(d),f=Rf(uf(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];(Number.isNaN(r)||r<n)&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=DL({inputs:{x:g},backend:n,attrs:{shape:eS(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},tO=aL(((t,e)=>Math.min(t,e))),eO=TL(Ag,tO),nO={kernelName:Ag,backendName:"cpu",kernelFunc:eO},rO={kernelName:Ng,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,mode:a}=r;KD(i,"mirrorPad");const o=s.map(((t,e)=>t[0]+i.shape[e]+t[1])),l=s.map((t=>t[0])),u=s.map(((t,e)=>t[0]+i.shape[e])),c="reflect"===a?0:1,h=n.data.get(i.dataId).values,d=i.shape.length,p=Cf(i.shape),f=uf(o),m=o.length,g=Cf(o),x=yf(i.dtype,f);for(let t=0;t<f;t++){let e=$f(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=Ff(e,d,p);x[t]=h[n]}return{dataId:n.write(x,o,i.dtype),shape:o,dtype:i.dtype}}},iO=aL(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),sO=TL(Rg,iO),aO={kernelName:Rg,backendName:"cpu",kernelFunc:sO};function oO(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=i.shape.length;let o=s;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=gf([o],i.shape),u=WP({inputs:{x:i},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=eS(u.shape,l),h=DL({inputs:{x:u},backend:n,attrs:{shape:c}}),d=O$({inputs:{a:i,b:h},backend:n}),p=M$({inputs:{x:d},backend:n}),f=c$({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=DL({inputs:{x:f},backend:n,attrs:{shape:c}}),g=L$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const lO={kernelName:Sx,backendName:"cpu",kernelFunc:oO},uO={kernelName:Dg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r;KD(i,"multinomial");const l=o?i:oO({inputs:{logits:i},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],p=Rf(uf(d),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=gS.alea(a.toString()),i=t*s;for(let t=0;t<s;++t){const e=r();p[i+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[i+t]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function cO(t,e,n){const r=by(-1,n);return a$([],e,r,t,n)}const hO={kernelName:Fg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;KD(r,"neg");const i=n.data.get(r.dataId).values,[s,a]=cO(i,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,s)}},dO=b_,pO={kernelName:Pg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;KD(i,"NonMaxSuppression");const u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=dO(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},fO=w_,mO={kernelName:Og,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;KD(i,"NonMaxSuppressionPadded");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=fO(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},gO=S_,xO={kernelName:zg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;KD(i,"NonMaxSuppressionWithScore");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=gO(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}},yO=aL(((t,e)=>t!==e?1:0)),vO=TL($g,yO,null,"bool"),bO={kernelName:$g,backendName:"cpu",kernelFunc:vO},wO={kernelName:Ug,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{dtype:s,depth:a,onValue:o,offValue:l}=r;KD(i,"oneHot");const u=uf(i.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(i.dataId).values;for(let t=0;t<u;++t)h[t]>=0&&h[t]<a&&(c[t*a+h[t]]=o);return n.makeTensorInfo([...i.shape,a],s,c)}};function SO(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=SL({inputs:{input:r},backend:n}),e=SO({inputs:{x:t},backend:n}),i=RF({inputs:{input:r},backend:n}),s=SO({inputs:{x:i},backend:n}),a=vL({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return G$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const _O={kernelName:Gx,backendName:"cpu",kernelFunc:SO},kO={kernelName:Bg,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===i.dtype){const e=SL({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=RF({inputs:{input:i},backend:r}),a=SO({inputs:{x:s},backend:r}),o=vL({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return G$({backend:r,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}};function IO(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return C$({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach((t=>{af(s,t.shape,"All tensors passed to stack must have matching shapes"),sf(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=LF({inputs:e.map((t=>{const e=C$({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e})),backend:n,attrs:{axis:i}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const MO={kernelName:Wg,backendName:"cpu",kernelFunc:IO},TO={kernelName:Vg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;KD(i,"pad");const o=s.map(((t,e)=>t[0]+i.shape[e]+t[1])),l=s.map((t=>t[0])),u=n.data.get(i.dataId).values,c=uf(i.shape),h=i.shape.length,d=Cf(i.shape),p=uf(o),f=o.length,m=Cf(o),g=yf(i.dtype,p);0!==a&&g.fill(a);for(let t=0;t<c;t++)g[Ff($f(t,h,d).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,i.dtype),shape:o,dtype:i.dtype}}},CO=aL(((t,e)=>Math.pow(t,e))),EO=TL(Gg,CO),AO={kernelName:Gg,backendName:"cpu",kernelFunc:EO};function NO(t,e,n,r){const[i,s]=tS(t,r),a=jy(e,"int32"),o=Rf(uf(i),a),l=uf(s);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:i,outDtype:a}}const RO={kernelName:jg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;KD(i,"prod");const o=i.shape.length,l=gf(s,i.shape),u=rS(l,o);let c=l,h=i;const d=[];null!=u&&(h=jL({inputs:{x:i},backend:n,attrs:{perm:u}}),d.push(h),c=sS(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=NO(h.shape,h.dtype,p,c);let x=m;return a&&(x=eS(m,l)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(x,g,f)}};function DO(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function LO(t,e,n,r,i,s,a,o){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,r)=>{if(t<0||t>=n){const i=$f(r,e.length,Cf(e)).join(",");throw new Error(`indices[${i}] = ${t} is not in [0, ${n})`)}}))}(s,a,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(t,e,n,r){const i=[];let s=0;const a=e.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const r=t[n],i=n===t.length-1?e:t[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>i)throw new Error("Ragged splits must not point past values");for(let t=1;t<r.length;++t)if(r[t-1]>r[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let t=0;t<e.length-1;++t){l*=e[t];const n=e[t+1];for(let e=1;e<l+1;++e)o[t].push(e*n)}for(let r=0;r<t.length;++r){let a=t[r],l=t[r]+1;for(let t=0;t<n.length;++t){const r=n[t],i=t+e.length-1;if(i>=0){const t=o[i],e=t[t.length-1]-r[a];for(let t=a;t<l;++t)o[i].push(r[t+1]+e)}a=r[a],l=r[l]}l!==a&&(i.push([a,l]),s+=l-a)}return{outSplits:o,valueSlices:i,numValues:s}}(s,a,t,l),d=function(t){const e=[];for(let n=0;n<t.length;++n){const r=vf("int32",t[n].length);e.push(r),t[n].forEach(((t,e)=>r[e]=t))}return e}(u),p=function(t,e,n,r,i){const s=e.slice();s[0]=i;const a=vf(n,uf(s)),o=t.length;return function(t,e,n,r,i,s){const a=DO(e,2)[1],o=DO(s,2)[1];let l=0;for(const e of n)for(let n=e[0];n<e[1];++n){for(let e=0;e<r;++e)i[l*o+e]=t[n*a+e];++l}}(t,e,r,0===o?0:o/e[0],a,s),[a,s]}(n,r,i,c,h);return[d,p[0],p[1]]}const FO={kernelName:qg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:i,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:o}=r,l=i.map((t=>n.data.get(t.dataId).values)),u=i.map((t=>t.shape)),c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=LO(l,u,c,s.shape,s.dtype,h,a.shape),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};var $O=ck;class PO{constructor(t,e,n,r,i,s,a,o,l,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=r,this.valuesDType=i,this.defaultValue=s,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=dk(u),this.raggedRank=pk(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===$O.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===$O.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case $O.VALUE_ROWIDS:return PO.getMaxWidthValueRowID(e);case $O.ROW_SPLITS:return PO.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${$O[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let r=0;r<e-1;++r){const e=t[r+1]-t[r];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,r=t[0],i=0;for(let s=1;s<e;++s){const e=t[s];e!==r&&(r=e,i=Math.max(s-n,i),n=s)}return Math.max(e-n,i)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zO(t,n)}calculateOutputSize(t){const e=this.valuesShape;fk(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=hk(this.raggedRank,n,e);r[0]<0&&(r[0]=t);for(let t=1;t<=this.raggedRank;++t)r[t]<0&&(r[t]=this.getMaxWidth(t));return r}calculateFirstParentOutputIndex(t,e,n){const r=Math.min(t,n),i=[];let s=0;for(let t=0;t<r;++t,s+=e)i.push(s);for(let e=r;e<t;++e)i.push(-1);return sf(i.length===t,(()=>"Final length of result must be equal to firstDimension.")),i}calculateOutputIndexRowSplit(t,e,n,r){const i=t.length,s=[];for(let a=0;a<i-1;++a){const i=t[a+1]-t[a];let o=Math.min(r,i),l=e[a];-1===l&&(o=0);for(let t=0;t<o;++t)s.push(l),l+=n;for(let t=0;t<i-o;++t)s.push(-1)}if(i>0&&s.length!==t[i-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(t,e,n,r){const i=t.length,s=[];if(0===i)return[];let a=0,o=t[0];if(o>=e.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${e.length}`);let l=e[o];s.push(l);for(let u=1;u<i;++u){const i=t[u];if(i===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=i,i>=e.length)throw new Error(`Got nextValueRowId=${i} which is not less than ${e.length}`);l=e[i]}s.push(l)}if(s.length!==t.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(t,e,n,r){const i=this.getRowPartitionTensor(t),s=this.getRowPartitionTypeByDimension(t);switch(s){case $O.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,n,r);case $O.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,n,r);default:throw new Error(`Unsupported partition type: ${$O[s]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case $O.FIRST_DIM_SIZE:return t[0];case $O.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case $O.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${$O[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let t=n.length-2;t>=0;--t)n[t]=n[t+1]*e[t+1];const r=zO(e,!1),i=vf(this.valuesDType,uf(r));if(n[0]*e[0]>0){let s=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)s=this.calculateOutputIndex(t-1,s,n[t],e[t]);this.setOutput(this.raggedRank,s,i,r)}return[r,i]}setOutput(t,e,n,r){if(0===n.length)return;const i=this.values,s=n;let a=r.slice();a=a.slice(t+1);const o=uf(a),l=e.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const t=this.defaultValueShape;Eb((()=>{const e=nw(u,t),n=uw(e,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let t=0;t<=l;++t){let r=t<l?e[t]:-1;if(r!==d){if(h<d){const t=i.subarray(c*o);OO(s.subarray(h*o),t,(d-h)*o)}if(t>=l){const t=n.length;r=Math.floor(t/o)}if(r>d)if(1===this.defaultValue.length)s.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)OO(s.slice(d*o),u,o),++d;r<0?(c=t+1,h=d):(c=t,h=d,d=h+1)}else++d}}}function OO(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function zO(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function BO(t,e,n,r,i,s,a,o,l,u){return new PO(t,e,n,r,i,s,a,o,l,u).compute()}const UO={kernelName:Xg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:i,values:s,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=o.map((t=>n.data.get(t.dataId).values)),p=o.map((t=>t.shape)),[f,m]=BO(u,i.shape,c,s.shape,s.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,s.dtype,m)}};function WO(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return Rf(0,r);const i=Rf(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+n;return i}const VO={kernelName:Kg,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,dtype:s,step:a}=n,o=WO(r,i,a,s);return e.makeTensorInfo([o.length],s,o)}},GO=JD(Zg,(t=>1/t)),HO={kernelName:Zg,backendName:"cpu",kernelFunc:GO},jO={kernelName:nx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;KD(i,"resizeBilinear");const l=Cf(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(uf([h,u,c,f])),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],y=[s&&u>1?u-1:u,s&&c>1?c-1:c];let v=0;const b=x[0]/y[0],w=x[1]/y[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=a?b*(e+.5)-.5:b*e;const r=Math.max(0,Math.floor(n)),i=n-r,s=Math.min(d-1,Math.ceil(n)),o=t*l[0]+r*l[1],u=t*l[0]+s*l[1];for(let t=0;t<c;t++){let e;e=a?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(p-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],d=o+s*l[2],x=u+s*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],s=e+(m[d+t]-e)*r,a=s+(n+(m[x+t]-n)*r-s)*i;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},qO={kernelName:rx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;KD([s,i],"resizeBilinearGrad");const o=Cf(i.shape),[l,u,c,h]=i.shape,[,d,p]=s.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],v=n.data.get(s.dataId).values;let b=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*x,r=Math.floor(n),i=Math.min(Math.ceil(n),u-1),s=e+r*o[1],a=e+i*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*y,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),i=e-n,u=1-i,p=s+n*o[2],m=s+r*o[2],g=a+n*o[2],x=a+r*o[2],w=d*u,S=d*i,_=l*u,k=l*i;for(let t=0;t<h;t++){const e=v[b++];f[p+t]+=e*w,f[m+t]+=e*S,f[g+t]+=e*_,f[x+t]+=e*k}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},XO={kernelName:tx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r;KD(i,"resizeNearestNeighbor");const l=Cf(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(h*u*c*f),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=x[0]/y[0],b=x[1]/y[1];let w=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?v*(t+.5):v*t;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const i=e+r*l[1];for(let t=0;t<c;t++){const e=a?b*(t+.5):b*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=i+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],i.dtype,g)}},KO={kernelName:ex,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r;KD([s,i],"resizeNearestNeighborGrad");const o=Cf(i.shape),l=Cf(s.shape),[u,c,h,d]=i.shape,[,p,f]=s.shape,m=new Float32Array(u*c*h*d),g=n.data.get(s.dataId).values,x=[a&&p>1?c-1:c,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=x[0]/y[0],b=x[1]/y[1],w=1/v,S=1/b,_=2*Math.ceil(w)+2,k=2*Math.ceil(S)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),i=Math.floor(r-_/2);for(let r=0;r<h;r++){const s=n+r*o[2],u=Math.floor(r*S),x=Math.floor(u-k/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<_;s++){const u=s+i;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*v;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<k;t++){const e=t+x;if(e<0||e>=f)continue;const i=d+e*l[2],s=e*b;r===Math.min(h-1,a?Math.round(s):Math.floor(s))&&(o+=g[i+n])}}m[s+n]=o}}}}return n.makeTensorInfo(i.shape,i.dtype,m)}},YO={kernelName:sx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r;KD(i,"reverse");const a=i.shape.length,o=gf(s,i.shape);if(0===a)return nL({inputs:{x:i},backend:n});const l=new Dy(i.shape,i.dtype),u=n.bufferSync(i);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=i.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},ZO={kernelName:jx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=yf(r.dtype,uf(r.shape)),[u,c,h,d]=r.shape,[p,f]=xk(a,c,h),m=Math.sin(i),g=Math.cos(i),x=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const i=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],y=o[2],v=o[1];let b=(y-p)*g-(v-f)*m,w=(y-p)*m+(v-f)*g;b=Math.round(b+p),w=Math.round(w+f);let S=s;"number"!=typeof s&&(S=3===a?255:s[a]),b>=0&&b<h&&w>=0&&w<c&&(S=x[e+w*(h*d)+b*d+a]),l[e+n+i+a]=S}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},JO=JD(ax,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),QO={kernelName:ax,backendName:"cpu",kernelFunc:JO},tz=fL((t=>1/Math.sqrt(t))),ez=QD(ox,tz),nz={kernelName:ox,backendName:"cpu",kernelFunc:ez};function rz(t,e,n,r,i,s,a,o,l,u){const c=[r/i,i],h=t.values,d=e.values;if(0===r)return Xv(n,e.dtype);const p=Xv(c,e.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let t=0;t<s;t++){const s=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];s.push(n),l+=n*o[e]}if(l<0||l>=r/i)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<i;n++)u?p.values[l*i+n]+=d[t*i+n]:p.values[l*i+n]=0===e.rank?d[0]:d[t*i+n]}return p}const iz={kernelName:lx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Mk(0,i,a),d=rz(n.bufferSync(i),n.bufferSync(s),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function sz(t,e){let n=0,r=t.length,i=0;for(;n<r;)i=Math.floor((n+r)/2),t[i]<e?n=i+1:r=i;return r}function az(t,e){let n=0,r=t.length,i=0;for(;n<r;)i=Math.floor((n+r)/2),t[i]<=e?n=i+1:r=i;return r}const oz={kernelName:ux,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:i,values:s}=e,{side:a}=r,o=function(t,e,n,r,i,s){const a=vf("int32",n*i);for(let o=0;o<n;++o){const n=t.slice(o*r,(o+1)*r),l=o*i;for(let t=0;t<i;++t)a[l+t]="left"===s?sz(n,e[t+l]):az(n,e[t+l])}return a}(n.data.get(i.dataId).values,n.data.get(s.dataId).values,i.shape[0],i.shape[1],s.shape[1],a);return n.makeTensorInfo(s.shape,"int32",o)}},lz={kernelName:cx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e;KD([r,i,s],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=jy(i.dtype,s.dtype),h=Rf(uf(i.shape),c);let d=0;const p=0===a||a>1||1===i.shape.length?1:uf(i.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?h[d++]=l[t]:h[d++]=u[t];return n.makeTensorInfo(i.shape,c,h)}},uz=Tk,cz=Ck,hz=JD(hx,(t=>t>=0?cz*t:uz*(Math.exp(t)-1))),dz={kernelName:hx,backendName:"cpu",kernelFunc:hz},pz=JD(mx,(t=>t<0?-1:t>0?1:0)),fz={kernelName:mx,backendName:"cpu",kernelFunc:pz},mz=JD(px,(t=>Math.sin(t))),gz={kernelName:px,backendName:"cpu",kernelFunc:mz},xz=JD(fx,(t=>Math.sinh(t))),yz={kernelName:fx,backendName:"cpu",kernelFunc:xz},vz=Math.log(1.1920928955078125e-7)+2,bz=JD(xx,(t=>{const e=t>-vz,n=t<vz,r=Math.exp(t);let i;return i=n?r:e?t:Math.log(1+r),i})),wz={kernelName:xx,backendName:"cpu",kernelFunc:bz},Sz={kernelName:bx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;KD([i],"spaceToBatchND");const o=uf(s),l=[[0,0]];l.push(...a);for(let t=1+s.length;t<i.shape.length;++t)l.push([0,0]);const u=TO.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),c=yk(u.shape,s,o,!1),h=vk(c.length,s.length,!1),d=bk(u.shape,s,o,!1),p=DL({inputs:{x:u},backend:n,attrs:{shape:c}}),f=jL({inputs:{x:p},backend:n,attrs:{perm:h}}),m=DL({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function _z(t,e,n,r,i,s,a){const o=e[0],l=s[0],u=new Array(l),c=new Array(o),h=e[1];if(0===l){if(0!==o)throw new Error(Zk(o));return[vf(n,0),[0,h],vf(i,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h];if(n<0)throw new Error(Jk(e,n));if(n>=l)throw new Error(Qk(e,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&d){const e=t,n=r;for(let t=0;t<o;++t)c[t]=t;return[e,[o,h],n,u,c]}{const e=f[l-1],s=vf(n,e*h),d=vf(i,e),p=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h],i=p[n],a=(0===n?0:f[n-1])+i;p[n]++;for(let n=0;n<h;++n)s[a*h+n]=t[e*h+n];d[a]=r[e],c[e]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];s[e*h+0]=t;for(let t=1;t<h;++t)s[e*h+t]=0;d[e]=a}return[s,[e,h],d,u,c]}}const kz={kernelName:_x,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n        ${i.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=_z(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function Iz(t,e,n,r,i){const s=uf(r),a=e[0],o=i.length,l=[];let u=1,c=-1;for(let t=0;t<o;++t){const e=i[t];if(-1===e){if(-1!==c)throw new Error(tI(c,t));c=t,l.push(1)}else{if(e<0)throw new Error(eI(t,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/u);if(u*t!==s)throw new Error(rI(r,l));l[c]=t}if(uf(l)!==s)throw new Error(iI(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=vf(n,a*o);for(let e=0;e<a;++e){let n=0;for(let r=0;r<h;++r)n+=t[e*h+r]*d[r];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/p[t]),n%=p[t]}return[f,[a,o],l]}const Mz={kernelName:kx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${i.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(n.data.get(i.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,h]=Iz(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function Tz(t,e,n,r,i,s=!1,a=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],c=o>0?i[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const d=vf(n,h.reduce(((t,e)=>t*e),1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=i[p];for(;;){let e=0;if(f<o){if(e=i[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(oI(g,c));g>m&&d.fill(a,m*u,g*u);for(let e=p;e<f;++e){const n=r[e];if(n<0||n>=l[0])throw new Error(lI(e,r[e],l[0]));for(let e=0;e<u;e++)d[g*u+e]+=t[n*u+e]}if(s)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<c&&d.fill(a,m*u,c*u),[d,h]}const Cz={kernelName:Ix,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=Tz(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},Ez={kernelName:Mx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(i.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values,[u,c]=Tz(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},Az={kernelName:Tx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Mk(0,i,o),p=!1,f=n.bufferSync(i);let m;switch(s.dtype){case"bool":m=rz(f,n.bufferSync(s),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":m=rz(f,n.bufferSync(s),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":m=rz(f,n.bufferSync(s),o,d,c,u,l,h,ky(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},Nz={kernelName:wx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=gf(a,i.shape)[0],l=Yk(i,s,o),u=new Array(i.shape.length).fill(0),c=i.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const r=yF({inputs:{x:i},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r}))}},Rz=fL((t=>Math.sqrt(t))),Dz=JD(yx,(t=>Math.sqrt(t))),Lz={kernelName:yx,backendName:"cpu",kernelFunc:Dz},Fz={kernelName:Ex,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;KD(n,"square");const i=r.data.get(n.dataId).values,s=new Float32Array(i.length);for(let t=0;t<i.length;++t){const e=i[t];s[t]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},$z=aL(((t,e)=>{const n=t-e;return n*n})),Pz=TL(Cx,$z),Oz={kernelName:Cx,backendName:"cpu",kernelFunc:Pz},zz=JD(Hx,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Bz={kernelName:Hx,backendName:"cpu",kernelFunc:zz};function Uz(t,e,n,r){const i=Xv(t,e.dtype);for(let t=0;t<i.size;t++){const s=i.indexToLoc(t),a=new Array(s.length);for(let t=0;t<a.length;t++)a[t]=s[t]*n[t]+r[t];i.set(e.get(...a),...s)}return i}const Wz={kernelName:Ax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;KD(i,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:v,strides:b}=Sb(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=DL({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||x){sf(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const t=ub(y,v,b),e=yF({inputs:{x:i},backend:n,attrs:{begin:y,size:t}});w=DL({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=Uz(p,n.bufferSync(i),b,y);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};class Vz{constructor(t,e,n,r,i,s){this.separator=_y(t),this.nGramWidths=e,this.leftPad=_y(n),this.rightPad=_y(r),this.padWidth=i,this.preserveShort=s}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,i,s){for(let a=0;a<i;++a){const o=this.getPadWidth(s),l=Math.max(0,o-a),u=Math.max(0,o-(i-(a+1))),c=s-(l+u),h=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<c;++e)d+=t[h+e].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<c-1;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let i=1;i<r;++i){let r=e[i]>=t;if(r=r&&e[i]<=n,!r)throw new Error(`Invalid split value ${e[i]}, must be in [${t}, ${n}]`);t=e[i]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const i=r-1,s=vf("int32",r);if(0===n||0===r){const t=new Array(n);for(let t=0;t<=i;++t)s[t]=0;return[t,s]}s[0]=0;for(let t=1;t<=i;++t){const n=e[t]-e[t-1];let r=0;this.nGramWidths.forEach((t=>{r+=this.getNumNGrams(n,t)})),this.preserveShort&&n>0&&0===r&&(r=1),s[t]=s[t-1]+r}const a=new Array(s[i]);for(let n=0;n<i;++n){const r=e[n];let i=s[n];if(this.nGramWidths.forEach((s=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,s);this.createNGrams(t,r,a,i,l,s),i+=l})),this.preserveShort&&i===s[n]){const s=e[n+1]-e[n];if(0===s)continue;const o=s+2*this.padWidth,l=1;this.createNGrams(t,r,a,i,l,o)}}return[a,s]}}function Gz(t,e,n,r,i,s,a,o){return new Vz(n,r,i,s,a,o).compute(t,e)}const Hz={kernelName:Nx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=Gz(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function jz(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const i=e[0];let s=t.indexOf(i);for(;-1!==s;){const e=t.subarray(0,s);n&&0===e.length||r.push(e),s=(t=t.subarray(s+1)).indexOf(i)}return void(n&&0===t.length||r.push(t))}let i=0;for(let s=0;s<t.length+1;s++)if(s===t.length||-1!==e.indexOf(t[s])){const e=t.subarray(i,s);n&&0===e.length||r.push(e),i=s+1}}function qz(t,e,n){const r=t.length,i=[];let s=0,a=0;const o=new Array(r);for(let l=0;l<r;++l){const r=i.length;jz(t[l],e,n,i);const u=i.length-r;o[l]=u,s+=u,a=Math.max(a,u)}const l=vf("int32",2*s),u=new Array(s),c=[r,a];let h=0;for(let t=0;t<r;++t)for(let e=0;e<o[t];++e)l[2*h]=t,l[2*h+1]=e,u[h]=i[h],++h;return[l,u,c]}const Xz={kernelName:Rx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=qz(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function Kz(t,e){const n=vf("int32",t.length);for(let r=0;r<t.length;++r)n[r]=vy(t[r]).modulo(e).getLowBitsUnsigned();return n}const Yz={kernelName:Dx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=Kz(n.data.get(s.dataId).values,i);return n.makeTensorInfo(s.shape,"int32",a)}},Zz=JD(Fx,(t=>Math.tan(t))),Jz={kernelName:Fx,backendName:"cpu",kernelFunc:Zz},Qz=JD($x,(t=>Math.tanh(t)));function tB(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Xv(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),i=new Array(t.rank);for(let e=0;e<i.length;e++)i[e]=n[e]%t.shape[e];const s=t.locToIndex(i);r.values[e]=t.values[s]}return r}const eB=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function nB(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,s=e-n+1,a=Math.log(i),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(i-o)/i)*Math.sign(s-i/2);nB(t,e,Math.max(n,Math.floor(e-s*o/i+l)),Math.min(r,Math.floor(e+(i-s)*o/i+l)))}const i=t[e];let s=n,a=r;for(rf(t,n,e),eB(t[r],i)>0&&rf(t,n,r);s<a;){for(rf(t,s,a),s++,a--;eB(t[s],i)<0;)s+=1;for(;eB(t[a],i)>0;)a-=1}0===eB(t[n],i)?rf(t,n,a):(a+=1,rf(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function rB(t,e,n,r,i){const s=e[e.length-1],[a,o]=[t.length/s,s],l=yf(n,a*r),u=yf("int32",a*r);for(let e=0;e<a;e++){const n=e*o,s=t.subarray(n,n+o);let a=new Array(s.length);s.forEach(((t,e)=>a[e]={value:t,index:e})),r<a.length&&(nB(a,r),a=a.slice(0,r)),i&&a.sort(eB);const c=e*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let t=0;t<r;t++)h[t]=a[t].value,d[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[Xv(c,n,l),Xv(c,"int32",u)]}const iB={kernelName:zx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],x=Cf(i.shape),y=x[0],v=x[1],b=x[2],w=Cf(g),S=w[0],_=w[1],k=w[2],I=yf(i.dtype,uf(g));I.fill(l);const M=r.data.get(i.dataId).values,T=r.data.get(s.dataId).values;for(let t=0;t<c;++t){const e=1===s.shape[0]?T:T.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let i=0;i<p;++i){let s;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const c=(e[0]*r+e[1]*n+e[2])/u,p=(e[3]*r+e[4]*n+e[5])/u,f=sB(c,d,o),m=sB(p,h,o);switch(a){case"nearest":s=oB(M,h,d,y,v,b,t,m,f,i,l);break;case"bilinear":s=lB(M,h,d,y,v,b,t,m,f,i,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}I[t*S+n*_+r*k+i]=s}return r.makeTensorInfo(g,i.dtype,I)}return{dataId:r.write(I,g,i.dtype),shape:i.shape,dtype:i.dtype}}};function sB(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return ef(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return ef(0,n,e-1)}(t,e);case"nearest":return function(t,e){return ef(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function aB(t,e,n,r,i,s,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*i+l*s+u]:c}function oB(t,e,n,r,i,s,a,o,l,u,c){return aB(t,e,n,r,i,s,a,Math.round(o),Math.round(l),u,c)}function lB(t,e,n,r,i,s,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*aB(t,e,n,r,i,s,a,h,d,u,c)+(l-d)*aB(t,e,n,r,i,s,a,h,f,u,c))+(o-h)*((f-l)*aB(t,e,n,r,i,s,a,p,d,u,c)+(l-d)*aB(t,e,n,r,i,s,a,p,f,u,c))}function uB(t,e,n,r){const i=gf(e,n)[0],s=[1,n[0],1];for(let t=0;t<i;t++)s[0]*=n[t];s[1]=n[i];for(let t=i+1;t<n.length;t++)s[2]*=n[t];const a={},o=new Int32Array(n[i]),l=new Dy(s,r,t),u=[],c=1===s[0]&&1===s[2];for(let e=0;e<n[i];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=s.slice();h[1]=Object.keys(a).length;const d=new Dy(h,r);u.forEach(((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,t,r),n,e,r)}));const p=n.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const cB={kernelName:Vx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r;KD(i,"unsortedSegmentSum");const o=[],l=[],u=i.shape.length-s.shape.length;let c=s;for(let t=0;t<u;++t){const e=C$({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<a;++t){const e=by(t,"int32"),r=n.makeTensorInfo([],"int32",e),s=m$({inputs:{a:r,b:c},backend:n}),a=IL({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=l$({inputs:{a,b:i},backend:n}),h=c$({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(a),l.push(u),l.push(h)}const h=IO({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},hB=[PL,zL,UL,VL,RL,GL,XL,KL,YL,ZL,QL,eF,rF,aF,lF,dF,pF,fF,mF,$L,gF,bF,_F,kF,ML,TF,EF,bL,AF,FF,PF,OF,zF,BF,UF,WF,GF,jF,qF,XF,KF,YF,ZF,QF,t$,e$,n$,r$,i$,s$,d$,eL,p$,g$,k$,T$,E$,R$,V$,H$,j$,K$,J$,Q$,tP,nP,iP,oP,cP,rL,hP,DF,pP,mP,xP,sL,bP,_P,IP,CP,AP,DP,FP,OP,zP,BP,VP,jP,qP,XP,KP,YP,ZP,JP,QP,nO,rO,aO,uO,u$,hO,pO,mO,xO,bO,wO,kO,MO,TO,AO,uL,RO,FO,UO,VO,_L,F$,HO,hL,pL,LL,jO,qO,XO,KO,YO,ZO,QO,nz,iz,oz,lz,dz,xL,fz,gz,yz,vF,lO,wz,Sz,kz,Mz,Cz,Ez,Az,Nz,Lz,Fz,Oz,Bz,Wz,Hz,Xz,Yz,z$,h$,Jz,{kernelName:$x,backendName:"cpu",kernelFunc:Qz},{kernelName:Px,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;KD(i,"tile");const a=tB(n.bufferSync(i),s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Ox,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r;KD(i,"topk");const o=n.data.get(i.dataId).values,[l,u]=rB(o,i.shape,i.dtype,s,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},iB,qL,{kernelName:Ux,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;KD(s,"unique");const a=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=uB(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Wx,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i.shape.length,o=i.shape[s],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==s&&(l[u++]=i.shape[t]);const c=new Array(a).fill(0),h=i.shape.slice();h[s]=1;const d=new Array(o);for(let t=0;t<d.length;t++){c[s]=t;const e=yF({inputs:{x:i},backend:n,attrs:{begin:c,size:h}});d[t]=DL({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},cB,_O];for(const t of hB)ry(t);const dB={},pB={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function fB(t,e){if(!(t in dB)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete dB[t]}),!1),Bf().getBool("SOFTWARE_WEBGL_ENABLED")&&(pB.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",pB)||n.getContext("experimental-webgl",pB):n.getContext("webgl2",pB)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;dB[t]=n}const n=dB[t];return null==n||n.isContextLost()?(delete dB[t],fB(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),dB[t])}var mB,gB,xB;function yB(t,e){return[e,t]}function vB(t){const e=uf(t);return df(Math.ceil(e/4))}function bB(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function wB(t,e){const n=t;let r,i,s,a,o,l,u,c,h,d;return 2===Bf().getNumber("WEBGL_VERSION")?(r=n.R32F,i=n.R16F,s=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=t.RGBA,i=t.RGBA,s=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function SB(t,e){const n=e();return Bf().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function _B(t){return!!(Bf().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function kB(t,e){return DB(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(mB||(mB={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(gB||(gB={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(xB||(xB={}));const IB=/ERROR: [0-9]+:([0-9]+):/g;function MB(t,e){const n=IB.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],i=t.split("\n"),s=i.length.toString().length+2,a=i.map(((t,e)=>pf((e+1).toString(),s)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${pf(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function TB(t,e){if(SB(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function CB(t,e,n,r,i,s,a){const o=t.getAttribLocation(e,n);return-1!==o&&(SB(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),SB(t,(()=>t.vertexAttribPointer(o,i,t.FLOAT,!1,s,a))),SB(t,(()=>t.enableVertexAttribArray(o))),!0)}function EB(t,e,n,r){SB(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),SB(t,(()=>t.activeTexture(t.TEXTURE0+n))),SB(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),SB(t,(()=>t.uniform1i(n,r)))}function AB(t,e,n){SB(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),SB(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function NB(t,e){SB(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),SB(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function RB(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function DB(t,e,n){const r=SB(t,(()=>e()));if(null==r)throw new Error(n);return r}function LB(t,e=2){return uf(t.slice(0,t.length-e))}function FB(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function $B(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[LB(t),...FB(t)]),e}function PB(t){return t%2==0}function OB(t,e){if(cf(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(PB(n)&&PB(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&PB(t[0])&&PB(e[0])}let zB,BB;function UB(t,e){return null!=t.getExtension(e)}function WB(t){try{if(null!=fB(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function VB(t){const e=wB(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function GB(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&sf("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const HB=Bf();function jB(){let t,e,n,r,i,s,a,o,l,u;return 2===Bf().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",i="texture",s="outputColor",a="out vec4 outputColor;",o=Bf().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",i="texture2D",s="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:i,output:s,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function qB(t,e,n="index"){const r=Cf(e);return r.map(((e,i)=>`int ${t[i]} = ${n} / ${e}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${e}`:`index -= ${t[i]} * ${e}`};`)).join("")}function XB(t,e,n="index"){const r=Cf(e);return r.map(((e,i)=>`int ${t[i]} = ${n} / outShapeStrides[${i}]; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * outShapeStrides[${i}]`:`index -= ${t[i]} * outShapeStrides[${i}]`};`)).join("")}function KB(t){const e=Cf(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}HB.registerFlag("HAS_WEBGL",(()=>HB.getNumber("WEBGL_VERSION")>0)),HB.registerFlag("WEBGL_VERSION",(()=>WB(2)?2:WB(1)?1:0)),HB.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),HB.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===HB.get("WEBGL_VERSION"))),HB.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),HB.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),HB.registerFlag("WEBGL_PACK",(()=>HB.getBool("HAS_WEBGL"))),HB.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_CLIP",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_PACK_REDUCE",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_LAZILY_UNPACK",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_CONV_IM2COL",(()=>HB.getBool("WEBGL_PACK"))),HB.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==zB){const e=fB(t);zB=e.getParameter(e.MAX_TEXTURE_SIZE)}return zB}(HB.getNumber("WEBGL_VERSION")))),HB.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==BB){const e=fB(t);BB=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,BB)}(HB.getNumber("WEBGL_VERSION")))),HB.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=HB.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=fB(t);return e=UB(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:UB(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),HB.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>HB.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!iv())),HB.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=fB(t);if(1===t){if(!UB(e,"OES_texture_float"))return!1}else if(!UB(e,"EXT_color_buffer_float"))return!1;return VB(e)}(HB.getNumber("WEBGL_VERSION")))),HB.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!HB.getBool("WEBGL_FORCE_F16_TEXTURES")&&HB.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),HB.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=fB(t);if(1!==t){if(UB(e,"EXT_color_buffer_float"))return VB(e);const t="EXT_color_buffer_half_float";if(UB(e,t)){const n=e.getExtension(t);return function(t,e){const n=wB(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),s}(e,n)}return!1}return!!UB(e,"OES_texture_float")&&!!UB(e,"WEBGL_color_buffer_float")&&VB(e)}(HB.getNumber("WEBGL_VERSION")))),HB.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=HB.getNumber("WEBGL_VERSION"))&&null!=fB(t).fenceSync;var t})),HB.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>HB.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),HB.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),HB.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>iv()?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)})),HB.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),HB.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),HB.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),HB.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),HB.registerFlag("WEBGL_EXP_CONV",(()=>!1)),HB.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>HB.getBool("IS_TEST"))),HB.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),HB.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),HB.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const YB="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ZB}=i;function JB(t,e,n){const r=[];if(t.forEach((t=>{const e=uf(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=lU(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const i=r.join("\n"),s=t.map((t=>function(t,e,n=!1,r){let i="";i+=n?tU(t,r):QB(t,r);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(i+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=ZB(t.shapeInfo.logicalShape,e.logicalShape),l=oU(a),u=a-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&s>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let p="return outputValue;";const f=1===uf(t.shapeInfo.logicalShape),m=1===uf(e.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&cf(a,s))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=oU(l),c=ZB(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+h]}`)).join(", "),`\n    float ${i}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),i}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=e.texShape,o=jB(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${eU}\n    ${nU}\n    ${rU}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(cf(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const i=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[2]/2),s=i*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(t[t.length-1]/2),s=i*Math.ceil(t[t.length-2]/2);let a=s,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return cf(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${XB(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=qB(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${XB(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=qB(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=qB(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=qB(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=iU),[h,l,c,i,u,s,n.userCode].join("\n")}function QB(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[i,s]=t.shapeInfo.texShape;if(1===i&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=sU(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${aU(t)}\n      }\n    `;const i=t.shapeInfo.texShape,s=i[0],a=i[1];if(1===a&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=sU(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape;if(null!=s&&cf(n,s)){if(e)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=s[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=xf(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${QB(uU(t,l),e)}\n      float ${i}(int row, int col) {\n        return ${i}(${cU(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${aU(t)}\n      }\n    `;const u=s[0],c=s[1],h=sU(r);return 1===c?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?e?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=xf(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${QB(uU(t,u),e)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${cU(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${aU(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===s&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=sU(r);return e?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],a=n[2]*s,o=n[1]*a,{newShape:l,keptDims:u}=xf(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${QB(uU(t,l),e)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${cU(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${s}, 1)));\n        ${aU(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return e?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const x=sU(r);return e?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[4],s=e[3]*i,a=e[2]*s,o=e[1]*a,{newShape:l,keptDims:u}=xf(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${QB(uU(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${cU(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${s}, ${i})) +\n          depth3;\n        ${aU(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${s} +\n          depth2 * ${i} + depth3 + ${sU(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=xf(e);if(i.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${QB(uU(t,i))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${cU(e,s)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${aU(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${sU(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function tU(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${jB().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,s=jB();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=s[0],o=s[1],l=jB();if(null!=s&&cf(n,s))return e?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${tU(uU(t,n.slice(1)),e)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${cU(s,r)});\n        }\n      `}const o=jB();if(e)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=jB();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=t.shapeInfo.logicalShape,a=s.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(s[a-1]/2);let d=h*Math.ceil(s[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let t=2;t<a-1;t++)p=`int b${t}, `+p,d*=s[a-t-1],f=`b${t} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const eU="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nU="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rU="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iU="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function sU(t){return`offset${t}`}function aU(t){const e=t.name,n=uf(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function oU(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function lU(t,e,n){const{newShape:r,keptDims:i}=xf(e),s=e.length,a=t&&3===s&&1===e[0],o=a?e.slice(1):r,l=!t&&s>1&&!cf(e,n)&&r.length<s||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:i}}function uU(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function cU(t,e){return e.map((e=>t[e])).join(", ")}function hU(t,e,n){const r={},i={},s={},a=[];let o,l,u,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),1===Bf().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let a=0;a<e.variableNames.length;a++){const o=e.variableNames[a];r[o]=t.getUniformLocation(n,o,d),r[`offset${o}`]=t.getUniformLocation(n,`offset${o}`,d),e.enableShapeUniforms&&(i[`${o}Shape`]=t.getUniformLocation(n,`${o}Shape`,d),s[`${o}TexShape`]=t.getUniformLocation(n,`${o}TexShape`,d))}return e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",d),u=t.getUniformLocation(n,"outShapeStrides",d),l=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach(((e,r)=>{a[r]=t.getUniformLocation(n,e.name,d)})),{uniformLocations:r,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:i,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function dU(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,i=e[n],s=i.shape;if(!cf(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,o=i.isUniform?null:i.texData.texShape;if(!cf(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function pU(t){return Bf().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class fU{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jB();this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XB(["r","c","d"],t):qB(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class mU{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jB();this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XB(["r","c","d"],t):qB(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class gU{constructor(t){this.variableNames=["A"],this.outTexUsage=gB.DOWNLOAD;const e=jB();this.outputShape=t,this.userCode=`\n      ${YB}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class xU{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=gB.DOWNLOAD;const e=jB();this.outputShape=t,this.userCode=`\n      ${YB}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class yU{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=jB();this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KB(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class vU{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=jB();this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length);let r="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let i=0;i<=1;i++){const s=2*e+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KB(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${i};\n        }\n    `}}function bU(t,e,n,r,i,s){!function(t,e){const n=Bf().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return DB(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return SB(t,(()=>t.bindTexture(o,a))),SB(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),SB(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),SB(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),SB(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===Bf().getNumber("WEBGL_VERSION")?SB(t,(()=>t.texImage2D(o,0,r,e,n,0,i,s,null))):SB(t,(()=>t.texStorage2D(o,1,r,e,n))),SB(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:a,texShape:[n,e]}}function wU(t){return t.internalFormatFloat}function SU(t){return t.internalFormatHalfFloat}function _U(t){return t.downloadTextureFormat}function kU(t){return t.internalFormatPackedFloat}function IU(t){return t.internalFormatPackedHalfFloat}class MU{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Bf().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){dB[t]=e}(e,t)):this.gl=fB(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Bf().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=kB(this.gl,t),UB(this.gl,e))this.textureHalfFloatExtension=kB(this.gl,e);else if(Bf().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),UB(this.gl,r))this.colorBufferHalfFloatExtension=kB(this.gl,r);else if(Bf().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",UB(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!UB(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=DB(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return SB(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),SB(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=DB(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return SB(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),SB(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return DB(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=wB(this.gl,this.textureHalfFloatExtension)}get debug(){return Bf().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;SB(t,(()=>t.finish())),SB(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),SB(t,(()=>t.deleteFramebuffer(this.framebuffer))),SB(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),SB(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),SB(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=yB(e,n);return bU(t,i,s,wU(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=yB(e,n);return bU(t,i,s,SU(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=yB(e,n);return bU(t,i,s,_U(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){SB(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===Bf().getNumber("WEBGL_VERSION")?SB(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):SB(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===Bf().getNumber("WEBGL_VERSION")?SB(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):SB(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),SB(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,i,s){let a,o,l;SB(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),i instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=s.internalFormatPackedFloat),a.set(i),2===Bf().getNumber("WEBGL_VERSION")?SB(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,a))):SB(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),SB(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=bB(e,n);return bU(t,i,s,IU(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,s]=bB(e,n);return bU(t,i,s,kU(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(NB(this.gl,this.framebuffer),this.outputTexture=null),SB(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[i,s]=yB(e,n),a=new Uint8Array(e*n*4);return SB(t,(()=>t.readPixels(0,0,i,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,i,s){return function(t,e,n,r,i,s,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=bB(t,e);return n*r*4}(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const i=t.createBuffer();SB(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,i)));const s=16*e*n;return SB(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),SB(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),SB(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),i}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Bf().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(i,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=i}else Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return SB(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=jB();return function(t,e){const n=DB(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SB(t,(()=>t.shaderSource(n,e))),SB(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return DB(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return SB(e,(()=>e.attachShader(n,this.vertexShader))),SB(e,(()=>e.attachShader(n,t))),function(t,e){if(SB(t,(()=>t.linkProgram(e))),!Bf().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&TB(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return SB(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),CB(t,e,"clipSpacePos",n,3,20,0)&&CB(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&SB(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&TB(this.gl,this.program),SB(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return DB(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),SB(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),EB(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,i]=bB(e,n);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&TB(this.gl,this.program),RB(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),SB(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SB(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=kB(this.gl,2===Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ff((()=>this.disposed||this.isQueryAvailable(t,Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Bf().platform&&(n=Bf().platform.setTimeoutCustom.bind(Bf().platform)),ff((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),AB(this.gl,t,this.framebuffer),this.debug&&RB(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AB(this.gl,this.outputTexture,this.framebuffer),this.debug&&RB(this.gl)):NB(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;AB(r,t,this.framebuffer),this.debug&&RB(r),this.outputTexture=t,SB(r,(()=>r.viewport(0,0,e,n))),SB(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),SB(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:TU,bincountImpl:CU,bincountReduceImpl:EU,castImpl:AU,ceilImpl:NU,concatImpl:RU,equalImpl:DU,expImpl:LU,expm1Impl:FU,floorImpl:$U,gatherNdImpl:PU,gatherV2Impl:OU,greaterImpl:zU,greaterEqualImpl:BU,lessImpl:UU,lessEqualImpl:WU,linSpaceImpl:VU,logImpl:GU,maxImpl:HU,maximumImpl:jU,minimumImpl:qU,multiplyImpl:XU,negImpl:KU,notEqualImpl:YU,prodImpl:ZU,raggedGatherImpl:JU,raggedTensorToTensorImpl:QU,rangeImpl:tW,rsqrtImpl:eW,scatterImpl:nW,sigmoidImpl:rW,simpleAbsImpl:iW,sliceImpl:sW,sparseFillEmptyRowsImpl:aW,sparseReshapeImpl:oW,sparseSegmentReductionImpl:lW,sqrtImpl:uW,stridedSliceImpl:cW,stringNGramsImpl:hW,stringSplitImpl:dW,stringToHashBucketFastImpl:pW,subImpl:fW,tileImpl:mW,topKImpl:gW,transposeImpl:xW,uniqueImpl:yW}=s;function vW(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function bW(t,e){return 1===e?[t]:vW(t,e)}class wW{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=pU(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=bW("rc",this.rank),e=oU(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let i=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)i=`${t[t.length-1-e]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class SW{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r,i;this.userCode=`\n      ${r=e,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map((t=>`${e}[${t}]`)),i=new Array(n-1);i[n-2]=r[n-1];for(let t=n-3;t>=0;--t)i[t]=`(${i[t+1]} * ${r[t+1]})`;return i}(t.map(((t,e)=>e)),e);return r.map(((e,i)=>`int ${t[i]} = ${n} / ${r[i]}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${r[i]}`:`index -= ${t[i]} * ${r[i]}`};`)).join("")}(["r","c","d"],"inputShape"):qB(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":KB(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class _W{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=IW(e,n),i=MW(t,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const s=kW(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[i].shift();return this.usedTextures[i].push(t),t}let a;return r===xB.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===xB.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===xB.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===xB.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===xB.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const i=IW(n,r),s=MW(e,i,r);s in this.freeTextures||(this.freeTextures[s]=[]);const a=kW(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Bf().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function kW(t,e,n,r,i){const s=function(t,e){switch(t){case xB.PACKED_2X2_FLOAT32:return kU(e);case xB.PACKED_2X2_FLOAT16:return IU(e);case xB.UNPACKED_FLOAT32:return wU(e);case xB.UNPACKED_FLOAT16:return SU(e);case xB.PACKED_4X1_UNSIGNED_BYTE:return _U(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(i){const[e,n]=bB(t[0],t[1]);a=e*n}else{const[e,n]=yB(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,s);return a*o}function IW(t,e){if(t===gB.UPLOAD)return xB.PACKED_2X2_FLOAT32;if(t===gB.RENDER||null==t)return function(t){return Bf().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?xB.PACKED_2X2_FLOAT32:xB.UNPACKED_FLOAT32:t?xB.PACKED_2X2_FLOAT16:xB.UNPACKED_FLOAT16}(e);if(t===gB.DOWNLOAD||t===gB.PIXELS)return xB.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function MW(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class TW{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const CW="return abs(x);",EW="return x;";class AW{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class NW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length);const e=t.length,n=bW("rc",e),r=oU(e),i=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),a=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const RW=fI,DW={},LW=Bf().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class FW extends Jp{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Bf().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof MU)e=t;else{const n=fB(Bf().getNumber("WEBGL_VERSION"),t);e=new MU(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=fB(Bf().getNumber("WEBGL_VERSION"));e=new MU(t),this.binaryCache=((n=Bf().getNumber("WEBGL_VERSION"))in DW||(DW[n]={}),DW[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _W(this.gpgpu),this.numMBBeforeWarning=null==Bf().global.screen?1024:Bf().global.screen.height*Bf().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Zp(this,Tb())}nextDataId(){return FW.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((Bf().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Bf().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:gB.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,i){if(Bf().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:gB.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:i,slice:s,shape:a,isPacked:o}=e;if(null!=s){let e;e=o?new AW(a,EW):new TW(a,EW);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Sy()),c="complex64"===r?Fk(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Sy()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:i,dtype:s,complexTensorInfos:a,isPacked:o}=e;if(null!=i){let e;e=o?new AW(r,EW):new TW(r,EW);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(t);if(Bf().getBool("DEBUG")&&!Bf().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Bf().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&Bf().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,...vB(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Fk(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=uf(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const t=this.gpgpu.gl;SB(t,(()=>t.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Tb().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:i,slice:s,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new AW(i,EW):new TW(i,EW);const r=this.runWebGLProgram(n,[{dataId:t,shape:i,dtype:a}],a),s=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),c=Tb().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>ky(t)));return Xv(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Xv(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!_B(n)){if(Bf().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),i=uf(e);if(Bf().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...vB(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const s=Bf().getBool("WEBGL_PACK")&&!0===r,a=s?$B(e):e,o=s?new xU(a):new gU(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const i=lf(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),s=lf(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(i);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:s[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Sy(),endMs:null}}endTimer(t){return Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Sy(),t)}async getQueryTime(t){if(Bf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:i,isPacked:s,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,i,s)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=LW){return Bf().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&uf(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){Yx("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return RW(t.shape,e)}packedUnaryOp(t,e,n){const r=new AW(t.shape,e),i=this.compileAndRun(r,[t],n);return Tb().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=iW(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Bf().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,CW,t.dtype);const e=new TW(t.shape,CW),n=this.compileAndRun(e,[t]);return Tb().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&_f(n[0])){const i=n.map((t=>_y(t)));r=this.write(i,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return Tb().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new NW(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new wW(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[LB(t.shape),...FB(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},i=[LB(e),...FB(e)],s=new SW(i,n),a=[n],o=this.runWebGLProgram(s,[r],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:i,dtype:s}=n;null!=e&&sf(uf(i)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=$B(i);let o;o=r?new mU(a):new fU(a);const l=[null!=e?e:vB(a)];return{dtype:s,shape:i,dataId:this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:t}],s,l,!0,e).dataId}}runWebGLProgram(t,e,n,r,i=!1,s){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===mB.DENSE){const e=null!=s?s:vB(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===uf(a.shape))return o.values=yf(a.dtype,0),a;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&uf(e.shape)<=Bf().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!OB(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),l.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach((e=>{const i=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const s=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=lU(t.packedInputs,e.shape,s);let u="",c="",h="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=Cf(o);h=`${t[0]===s[1]}_${t[t.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&cf(e.shape,s),f=1===uf(e.shape),m=ib(e.shape,n.shape),g=!t.packedInputs&&d===n.shape.length&&cf(s,n.texData.texShape),x=t.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${x}_${i}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${i}`}}));const i=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+i+`${Bf().getNumber("WEBGL_VERSION")}`,s}(t,u,c),d=this.getAndSaveBinary(h,(()=>function(t,e,n,r){const i=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),s=i.map((t=>t.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=JB(i,a,e),l=function(t,e){const n=DB(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SB(t,(()=>t.shaderSource(n,e))),SB(t,(()=>t.compileShader(n))),Bf().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw MB(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);return Bf().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:a},hU(t,e,u))}(this.gpgpu,t,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Bf().get("ENGINE_COMPILE_ONLY")||function(t,e,n,r,i){e.program.enableShapeUniforms||(dU(e.inShapeInfos,n),dU([e.outShapeInfo],[r]));const s=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):t.setOutputMatrixTexture(s.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===Bf().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const i=e.program.variableNames[r],s=e.uniformLocations[i],a=e.uniformLocations[`offset${i}`],o=e.inShapesLocations[`${i}Shape`],l=e.inTexShapesLocations[`${i}TexShape`];if(o){const{uniformShape:r}=lU(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(o,new Int32Array(r));break;case 2:t.gl.uniform2iv(o,new Int32Array(r));break;case 3:t.gl.uniform3iv(o,new Int32Array(r));break;case 4:t.gl.uniform4iv(o,new Int32Array(r))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(uf(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=Cf(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&i&&e.program.customUniforms.forEach(((n,r)=>{const s=e.customUniformLocations[r],a=i[r];if("float"===n.type)t.gl.uniform1fv(s,a);else if("vec2"===n.type)t.gl.uniform2fv(s,a);else if("vec3"===n.type)t.gl.uniform3fv(s,a);else if("vec4"===n.type)t.gl.uniform4fv(s,a);else if("int"===n.type)t.gl.uniform1iv(s,a);else if("ivec2"===n.type)t.gl.uniform2iv(s,a);else if("ivec3"===n.type)t.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(s,a)}})),t.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=Bf().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Sy();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!Bf().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===i){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,i=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,i)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Bf().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Eb((()=>{if(!Bf().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Bf().getBool("DEBUG");Bf().set("DEBUG",!1);const e=this.abs(Fb(1e-8)).dataSync()[0];if(Bf().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:i,texture:s,usage:a,isPacked:o}=e;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=Sy());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=Bf().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Bf().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Bf().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n*=2,r*=2,1===(t=t.map(((e,n)=>n>=t.length-2?nf(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=xf(t);t=e.newShape}let i=uf(t),s=null;t.length<=1&&i<=n?s=[1,i]:2===t.length&&t[0]<=n&&t[1]<=n?s=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?s=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?s=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?s=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(s=[t[0],t[1]*t[2]*t[3]]);const a=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(null==s||a)if(e){const e=LB(t);let n=2,r=2;t.length&&([n,r]=FB(t)),i=e*(n/2)*(r/2),s=df(i).map((t=>2*t))}else s=df(i);return s}(n,o),e.texShape=c),null!=i){const t=$B(n);let s,a=c[1],h=c[0];const d=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!o&&d||([a,h]=bB(c[0],c[1])),s=o?new vU(t,d):new yU(t,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?gB.PIXELS:gB.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,i);const g=[[h,a]],x=!0,y=this.runWebGLProgram(s,[f],r,g,x),v=this.texData.get(y.dataId);e.texShape=v.texShape,e.isPacked=v.isPacked,e.usage=v.usage,Bf().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(e.texture=v.texture,e.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Sy()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Sf(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(t){throw t}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await ok(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw MB(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:r,nanLoc:i,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=hU(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=i,t.inShapesLocations=s,t.inTexShapesLocations=a,t.outShapeLocation=o,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}}FW.nextDataId=0,sv()&&Rb("webgl",(()=>new FW),2);class $W{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=ab(e,n),this.enableShapeUniforms=pU(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class PW{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ab(e,n);const i=this.outputShape.length;this.enableShapeUniforms=pU(i);let s="";if(r)if(0===i||1===uf(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${oU(i)} coords = getOutputCoords();\n        `,1===i)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=bW("coords",i);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= outShape[${i} - 2];\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= outShape[${i} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function OW(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const zW={kernelName:ig,backendName:"webgl",kernelFunc:OW};function BW(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,s=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(s.dataId),o=OW({inputs:{x:r},backend:n}),l=OW({inputs:{x:i},backend:n});return a.complexTensorInfos={real:o,imag:l},s}const UW={kernelName:gm,backendName:"webgl",kernelFunc:BW},WW="return (a < 0.) ? b * a : a;",VW="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",GW={kernelName:cg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{alpha:s}=r,a=n.makeTensorInfo([],"float32",by(s,"float32")),o=Bf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new PW(VW,i.shape,a.shape):new $W(WW,i.shape,a.shape),l=n.runWebGLProgram(o,[i,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},HW="return (a < 0.) ? b * a : a;",jW="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qW={kernelName:Hg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:i}=e,s=Bf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new PW(jW,r.shape,i.shape):new $W(HW,r.shape,i.shape);return n.runWebGLProgram(s,[r,i],"float32")}};function XW({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:i,backend:s})=>{const{x:a}=i,o=s,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=Bf().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new AW(a.shape,e):new TW(a.shape,t),o.runWebGLProgram(u,[a],l)}}function KW({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,i]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,i={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new $W(t,l.shape,u.shape);return c.runWebGLProgram(a,[i,s],jy(n.dtype,r.dtype))})),s=BW({inputs:{real:r,imag:i},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(i),s}const h=s||jy(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=i){const t=c.texData.get(l.dataId).values,e=c.texData.get(u.dataId).values,n="string"===l.dtype?dI(t):t,r="string"===l.dtype?dI(e):e,[s,a]=i(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=s,o}let d;return d=Bf().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new PW(e,l.shape,u.shape,n):new $W(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function YW(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?jW:HW;if("leakyrelu"===t)return e?VW:WW;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class ZW{constructor(t,e,n,r=!1,i=!1,s=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pU(this.outputShape.length);const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const x=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(v=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class JW{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ab(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const QW="return a * b;";function tV(t){const{inputs:e,backend:n}=t,{a:r,b:i}=e,s=jy(r.dtype,i.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),s=new JW("return areal * breal - aimag * bimag;",r.shape,i.shape),a=new JW("return areal * bimag + aimag * breal;",r.shape,i.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=BW({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,i])){const t=n.texData.get(r.dataId),e=n.texData.get(i.dataId),[a,o]=XU(r.shape,i.shape,t.values,e.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=a,l}let a;return a=Bf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new PW(QW,r.shape,i.shape):new $W(QW,r.shape,i.shape),n.runWebGLProgram(a,[r,i],s)}const eV={kernelName:Lg,backendName:"webgl",kernelFunc:tV};function nV(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{shape:s}=r,a=n,o=uf(i.shape),l=mf(s,o),u=uf(l);sf(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(i.dataId);return!c.isPacked||OB(i.shape,l)||null!==c.texture&&OB(c.shape,l)?(a.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):function(t,e,n){const r=[LB(t.shape),...FB(t.shape)],i={dtype:t.dtype,shape:r,dataId:t.dataId},s=[LB(e),...FB(e)],a=new SW(s,r),o=[r],l=n.runWebGLProgram(a,[i],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(i,l,a)}const rV={kernelName:Qg,backendName:"webgl",kernelFunc:nV};class iV{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${hf(t)?t.toPrecision(2):t}, ones);`}let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class sV{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=t;this.outputShape=[r,s];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";i%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function aV(t,e,n,r){const i=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=gk(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:l,outSize:u}=i[a];let c,h;c="mean"===n?0===a?new iV({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new iV({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new sV({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class oV{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=oU(this.rank),i=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class lV{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=oU(this.rank),i=vW("rc",this.rank),s=new Array(this.rank);for(let t=0;t<e.length;t++)s[e[t]]=i[t];const a=`vec2(${s.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function uV(t,e,n){const r=Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lV(t.shape,e):new oV(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function cV(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r;return function(t,e,n,r){const i=e,s=t.shape.length,a=gf(i,t.shape);let o=a;const l=rS(o,s),u=null!=l;let c=t;u&&(c=uV(t,l,r),o=sS(o.length,s)),nS("sum",o,s);const[h,d]=tS(c.shape,o);let p=h;n&&(p=eS(h,a));const f=uf(d),m=nV({inputs:{x:c},attrs:{shape:[uf(t.shape)/f,f]},backend:r}),g=aV(m,qy(t.dtype),"sum",r),x=nV({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),x}(i,s,a,n)}const hV={kernelName:vx,backendName:"webgl",kernelFunc:cV};function dV(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{perm:s}=r,a=n,o=i.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=i.shape[s[t]];let u;if(a.shouldExecuteOnCPU([i])){const t=a.texData.get(i.dataId).values,e=xW(t,i.shape,i.dtype,s,l);u=a.makeTensorInfo(l,i.dtype),a.texData.get(u.dataId).values=e}else u=uV(i,s,a);return u}const pV={kernelName:Bx,backendName:"webgl",kernelFunc:dV};function fV({a:t,b:e,transposeA:n,transposeB:r,backend:i,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),x=uf(m),y=uf(g),v=ab(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);sf(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=n?[x,h,p]:[x,p,h],w=r?[y,f,d]:[y,d,f],S=nV({inputs:{x:t},backend:i,attrs:{shape:b}}),_=nV({inputs:{x:e},backend:i,attrs:{shape:w}}),k=[S,_],I=Math.max(x,y),M=n?S.shape[1]:S.shape[2],T=null!=s,C=null!=a,E="leakyrelu"===l,A=null!=l?YW(l,!0):null;let N;if((1===p||1===f)&&M>1e3&&!1===(T||C||E||null!=A)){let t=S,e=_;n&&(t=dV({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),k.push(t)),r&&(e=dV({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),k.push(e));const s=1===f;let a=t;1!==f&&(a=nV({inputs:{x:t},backend:i,attrs:{shape:[I,M,1]}}),k.push(a));const o=1===f?2:1;let l=e;s&&(l=nV({inputs:{x:e},backend:i,attrs:{shape:[I,1,M]}}),k.push(l));const u=tV({inputs:{a,b:l},backend:i});N=cV({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),k.push(u)}else{const l=jy(t.dtype,e.dtype),u=new ZW(b,w,[I,p,f],n,r,T,A,C,E),c=[S,_];if(null!=s&&c.push(s),C&&c.push(a),E){const t=i.makeTensorInfo([],"float32",by(o,"float32"));c.push(t),k.push(t)}N=i.runWebGLProgram(u,c,l)}const R=nV({inputs:{x:N},backend:i,attrs:{shape:v}});k.push(N);for(const t of k)i.disposeIntermediateTensorInfo(t);return R}const mV={kernelName:qx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return fV({a:i,b:s,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},gV="return abs(x);",xV={kernelName:Hf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=iW(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let i;return i=Bf().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AW(r.shape,gV):new TW(r.shape,gV),n.runWebGLProgram(i,[r],r.dtype)}},yV=XW({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vV={kernelName:jf,backendName:"webgl",kernelFunc:yV},bV=XW({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),wV={kernelName:qf,backendName:"webgl",kernelFunc:bV},SV="return a + b;",_V=KW({opSnippet:SV,packedOpSnippet:SV,supportsComplex:!0,cpuKernelImpl:TU}),kV={kernelName:Xf,backendName:"webgl",kernelFunc:_V};class IV{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class MV{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const TV={kernelName:Kf,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,i=n;if(1===i.length)return OW({inputs:{x:i[0]},backend:r});if(i.length>Bf().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(i.length/2),n=t({inputs:i.slice(0,e),backend:r}),s=t({inputs:i.slice(e),backend:r});return t({inputs:[n,s],backend:r})}const s=i.map((t=>t.dtype)).reduce(((t,e)=>jy(t,e))),a=i.map((t=>t.shape)),o=Bf().getBool("WEBGL_PACK")?new MV(i[0].shape,a):new IV(i[0].shape,a);return r.runWebGLProgram(o,i,s)}},CV={kernelName:Yf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=gf(s,i.shape);let u=l;const c=rS(u,o);let h=i;null!=c&&(h=dV({inputs:{x:i},backend:n,attrs:{perm:c}}),u=sS(u.length,o)),nS("all",u,o);const[d,p]=tS(h.shape,u),f=nV({inputs:{x:h},backend:n,attrs:{shape:[-1,uf(p)]}}),m=aV(f,f.dtype,"all",n);let g;return g=nV(a?{inputs:{x:m},backend:n,attrs:{shape:eS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},EV={kernelName:Zf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=gf(s,i.shape);let u=l;const c=rS(u,o);let h=i;null!=c&&(h=dV({inputs:{x:i},backend:n,attrs:{perm:c}}),u=sS(u.length,o)),nS("any",u,o);const[d,p]=tS(h.shape,u),f=nV({inputs:{x:h},backend:n,attrs:{shape:[-1,uf(p)]}}),m=aV(f,f.dtype,"any",n);let g;return g=nV(a?{inputs:{x:m},backend:n,attrs:{shape:eS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class AV{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NV{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,sf(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const i=t[t.length-1],s=Math.ceil(i/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=oU(o),u=bW("coords",o);let c,h;if(1===s){h=o+1;const t=oU(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),m=bW("sourceLocR",h-1).concat("inIdx.r"),g=bW("sourceLocG",h-1).concat("inIdx.g"),x=bW("sourceLocB",h-1).concat("inIdx.b"),y=bW("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",b=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function RV(t,e,n,r=null){let i=e.shape[0],s=e.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);const a=gk(s),o={windowSize:a,inSize:s,batchSize:i,outSize:Math.ceil(s/a)},l=new AV(o,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=RV(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function DV(t,e,n,r=null){const i=null!=r?r.shape:e.shape,s=gk(i[i.length-1]),a=new NV(i,s,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=DV(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function LV(t,e,n,r){const i=[n];if(nS("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,e.shape.length),!Bf().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],s=t.texData.get(e.dataId);let a=e;null!==s&&s.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=tS(a.shape,i),u=uf(l),c=nV({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(c);const h=RV(t,c,r);n.push(h);const d=nV({inputs:{x:h},backend:t,attrs:{shape:o}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return DV(t,e,r)}const FV={kernelName:Jf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=gf(s,i.shape);const o=rS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=dV({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=sS(a.length,l.shape.length)),nS("argMax",[a[0]],l.shape.length);const c=LV(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},$V={kernelName:Qf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s}=r;let a=gf(s,i.shape);const o=rS(a,i.shape.length);let l=i;const u=[];null!=o&&(l=dV({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=sS(a.length,l.shape.length)),nS("argMin",[a[0]],l.shape.length);const c=LV(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},PV=XW({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),OV={kernelName:tm,backendName:"webgl",kernelFunc:PV},zV=XW({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),BV={kernelName:em,backendName:"webgl",kernelFunc:zV},UV=XW({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),WV={kernelName:nm,backendName:"webgl",kernelFunc:UV},VV=KW({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),GV={kernelName:im,backendName:"webgl",kernelFunc:VV},HV=XW({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),jV={kernelName:rm,backendName:"webgl",kernelFunc:HV};class qV{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(f||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const v=4*Math.floor(s/4),b=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class XV{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const w=4*Math.floor(s/4),S=s%4,_=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${x});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${_}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${2===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${3===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${_}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const KV={kernelName:sm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;GB(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;sf(Qb(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Vb(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&cf(u.inShape,u.outShape))return OW({inputs:{x:i},backend:n});const c=new qV(u,"avg",!1);return n.runWebGLProgram(c,[i],"float32")}},YV={kernelName:om,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Gb(i.shape,s,a,[1,1,1],o,l,u),h=new XV(c,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};class ZV{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JV{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const QV={kernelName:lm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Gb(a.shape,o,l,[1,1,1],u,c),d=new JV(h);return n.runWebGLProgram(d,[i],a.dtype)}},tG={kernelName:am,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s;GB([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Vb(a.shape,o,l,1,u),h=new ZV(c);return n.runWebGLProgram(h,[i],a.dtype)}},eG={kernelName:um,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;return fV({a:i,b:s,transposeA:a,transposeB:o,backend:n})}};class nG{constructor(t,e,n,r,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],ab(t,e),ab(t,n);let a="0.0";null!=r&&(ab(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=i&&(ab(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class rG{constructor(t,e,n,r,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ab(t,e),ab(t,n);let a="vec4(0.0)";null!=r&&(ab(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(ab(t,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const iG={kernelName:Qm,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:i,variance:s,offset:a,scale:o}=t;sf(i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),sf(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),sf(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,i,s];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Bf().getBool("WEBGL_PACK_NORMALIZATION")?new rG(r.shape,i.shape,s.shape,c,h,l):new nG(r.shape,i.shape,s.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)}};class sG{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=oU(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return aG.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${aG[e]} = start[${e}] + coords.${aG[e]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const aG=["x","y","z","w","u","v"];class oG{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=oU(this.rank),n=bW("coords",this.rank),r=bW("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${i})`,a=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function lG(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,size:a}=r,[o,l]=wb(i,s,a);if(ob(i,o,l),0===uf(l))return n.makeTensorInfo(l,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const t=n.texData.get(i.dataId),e=sW(t.values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,e)}const{isPacked:u}=n.texData.get(i.dataId),c=vb(i.shape,o,l);if(u||!c){const t=Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oG(l):new sG(l),e=[o];return n.runWebGLProgram(t,[i],i.dtype,e)}return n.uploadToGPU(i.dataId),function(t,e,n,r){const i=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),a=r.texData.get(s.dataId);Object.assign(a,i),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=bb(e,Cf(t.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),s}(i,o,l,n)}const uG={kernelName:dx,backendName:"webgl",kernelFunc:lG},cG={kernelName:cm,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,crops:a}=r;sf(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((t,e)=>t*e)),l=yk(i.shape,s,o),u=vk(l.length,s.length),c=bk(i.shape,s,o),h=wk(a,s.length),d=Sk(c,a,s.length),p=[],f=nV({inputs:{x:i},backend:n,attrs:{shape:l}}),m=dV({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nV({inputs:{x:m},backend:n,attrs:{shape:c}}),x=lG({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},hG={kernelName:hm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a}=r,o=n.readSync(i.dataId),l=n.readSync(s.dataId),u=CU(o,l,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,u)}},dG={kernelName:dm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:i}=e,s=n.readSync(r.dataId),a=n.readSync(i.dataId),o=ab(Array.from(s),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},pG=KW({opSnippet:"return float(a != b);",cpuKernelImpl:YU,dtype:"bool"}),fG={kernelName:$g,backendName:"webgl",kernelFunc:pG};function mG(t){const{inputs:e,backend:n}=t,{input:r}=e;return OW({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const gG={kernelName:Yg,backendName:"webgl",kernelFunc:mG},xG={kernelName:pm,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:i}=e,{x:s}=n,{dtype:a}=i;if("complex64"===a){if("complex64"===s.dtype)return OW({inputs:{x:s},backend:r});const e=hS(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),i=BW({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),i}if("complex64"===s.dtype){const e=mG({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!bf(s.dtype,a)){const t=OW({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if(r.shouldExecuteOnCPU([s])){const t=r.texData.get(s.dataId).values,[e,n,i]=AU(t,s.shape,s.dtype,a);return r.makeTensorInfo(e,n,i)}if("int32"===a)return function(t,e){const n=new TW(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",yf("bool",1)),e=pG({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}},yG="return ceil(x);",vG=XW({opSnippet:yG,packedOpSnippet:yG,cpuKernelImpl:NU}),bG={kernelName:fm,backendName:"webgl",kernelFunc:vG};class wG{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class SG{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const _G={kernelName:mm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{clipValueMin:s,clipValueMax:a}=r;let o;o=Bf().getBool("WEBGL_PACK_CLIP")?new SG(i.shape):new wG(i.shape);const l=[[s],[a]];return n.runWebGLProgram(o,[i],i.dtype,l)}};class kG{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function IG(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const MG={kernelName:xm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=n.texData.get(r.dataId),s=new kG(r.shape),a=[IG(r,i.complexTensorInfos.real),IG(r,i.complexTensorInfos.imag)];return n.runWebGLProgram(s,a,a[0].dtype)}};class TG{constructor(t){this.outputShape=[],this.outputShape=uk(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,i=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class CG{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=uk(t,e);const n=this.outputShape,r=n.length,i=oU(r),s=bW("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${EG(a,l,e)}),\n            vec2(${EG(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${EG(a,l,p)}),\n          vec2(${EG(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function EG(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function AG(t){const{inputs:e,backend:n}=t,{input:r}=e;return OW({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const NG={kernelName:ag,backendName:"webgl",kernelFunc:AG};function RG(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>mG({inputs:{input:t},backend:n}))),i=t.map((t=>AG({inputs:{input:t},backend:n}))),s=RG(r,e,n),a=RG(i,e,n),o=BW({inputs:{real:s,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),i.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}let i=n.shouldExecuteOnCPU(t);if("string"===r&&(i=!0),i){const i=t.map((t=>{const r=uf(t.shape.slice(e));return nV({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),s=i.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),a=uk(i.map((t=>t.shape)),1),o=1===i[0].shape[0],l=RU(s,a,r,o),u=uk(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,r,l);return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const s=Bf().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>s){const r=[];for(let i=0;i<t.length;i+=s){const a=t.slice(i,i+s);r.push(RG(a,e,n))}const i=RG(r,e,n);for(const t of r)n.disposeIntermediateTensorInfo(t);return i}if(Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const i=new CG(t.map((t=>t.shape)),e);return n.runWebGLProgram(i,t,r)}const{tensors2D:a,outShape:o}=function(t,e,n){const r=uk(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>nV({inputs:{x:t},attrs:{shape:[-1,uf(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),l=new TG(a.map((t=>t.shape))),u=n.runWebGLProgram(l,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const c=nV({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function DG(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r,s=gf(i,e[0].shape)[0];lk(e.map((t=>t.shape)),s);const a=uk(e.map((t=>t.shape)),s);if(0===uf(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>uf(t.shape)>0));return 1===o.length?OW({inputs:{x:o[0]},backend:n}):RG(o,s,n)}const LG={kernelName:ym,backendName:"webgl",kernelFunc:DG};class FG{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,x=m?2:3,y=m?3:1;let v="",b="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class $G{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${s}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PG{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=pU(this.outputShape.length);const s=t.padInfo.left,a=t.strideWidth,o=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<u;t++)h+=`\n           vec4 xTexelC${2*t};\n           int xTexelC${2*t}Ready;\n           vec4 xTexelC${2*t+1};\n           int xTexelC${2*t+1}Ready;\n           vec4 xC${t};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let t=0;t<u;t++)h+=`\n           xTexelC${2*t} = vec4(0.0);\n           xTexelC${2*t}Ready = 0;\n           xTexelC${2*t+1} = vec4(0.0);\n           xTexelC${2*t+1}Ready = 0;\n           xC${t} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let e=0;e<(c+1)/2;e++){const n=2*e;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const t=s%2==0?nf(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===t?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:i?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class OG{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=pU(this.outputShape.length);const{dataFormat:n}=e,r=jB(),i="channelsLast"===n,s=i?1:2,a=i?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${t};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${i}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function zG(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function BG({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=s){const t=zG(s.shape,p);null!=t&&(s=nV({inputs:{x:s},backend:r,attrs:{shape:t}}),m.push(s))}if(null!=i){const t=zG(i.shape,p);null!=t&&(i=nV({inputs:{x:i},backend:r,attrs:{shape:t}}),m.push(i))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&cf(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,sf(OB(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=nV({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=fV({a:h,b:p,backend:r,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a}),x=r.texData.get(g.dataId);sf(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,x.shape=n.outShape,f=OW({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=nV({inputs:{x:t},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=nV({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=fV({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:!1,backend:r,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a});f=nV({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)r.disposeIntermediateTensorInfo(t);return f}function UG({x:t,filter:e,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,x=[n.batchSize,m,g],y=[];if(null!=s){const t=zG(s.shape,f);null!=t&&(s=nV({inputs:{x:s},backend:r,attrs:{shape:t}}),y.push(s))}if(null!=i){const t=zG(i.shape,f);null!=t&&(i=nV({inputs:{x:i},backend:r,attrs:{shape:t}}),y.push(i))}const v=nV({inputs:{x:e},backend:r,attrs:{shape:[1,m,uf(e.shape)/m]}});y.push(v);const b=new OG(x,n),w=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(b,[t],"float32",w),_=nV({inputs:{x:S},backend:r,attrs:{shape:x}});y.push(S),y.push(_);const k=null!=i,I=null!=s,M="leakyrelu"===o,T=o?YW(o,!0):null,C=new ZW(f?_.shape:v.shape,f?v.shape:_.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,k,T,I,M),E=f?[_,v]:[v,_];if(i&&E.push(i),I&&E.push(s),M){const t=r.makeTensorInfo([],"float32",by(a,"float32"));E.push(t),y.push(t)}const A=r.runWebGLProgram(C,E,"float32"),N=nV({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const t of y)r.disposeIntermediateTensorInfo(t);return N}const WG={kernelName:vm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=tw(l),d=Hb(i.shape,s.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Bf().getBool("WEBGL_EXP_CONV")){const t=new PG(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(t,[i,s],"float32",e)}else if(Bf().getBool("WEBGL_CONV_IM2COL"))p=UG({x:i,filter:s,convInfo:d,backend:n});else{const t=new FG(d);p=n.runWebGLProgram(t,[i,s],"float32")}else p=BG({x:i,filter:s,convInfo:d,backend:n});const f=nV({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class VG{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GG{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HG{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${i};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jG{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const qG={kernelName:bm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=tw(l),d=Hb(i.shape,c,a,1,o,u,!1,h),p=new VG(d);return n.runWebGLProgram(p,[i,s],"float32")}},XG={kernelName:wm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=tw(u),d=Hb(a,s.shape,o,1,l,c,!1,h),p=new GG(d);return n.runWebGLProgram(p,[i,s],"float32")}},KG={kernelName:Sm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=jb(i.shape,s.shape,a,l,o),c=new $G(u);return n.runWebGLProgram(c,[i,s],"float32")}},YG={kernelName:_m,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:l}=r,u=jb(i.shape,l,a,1,o),c=new HG(u);return n.runWebGLProgram(c,[i,s],"float32")}},ZG={kernelName:km,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:l}=r,u=jb(l,s.shape,o,1,a),c=new jG(u);return n.runWebGLProgram(c,[i,s],"float32")}},JG=XW({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),QG={kernelName:Im,backendName:"webgl",kernelFunc:JG},tH=XW({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),eH={kernelName:Mm,backendName:"webgl",kernelFunc:tH};class nH{constructor(t,e,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,x]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,v,b]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const rH={kernelName:Em,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new nH(i.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[i,s,a],"float32")}};var iH;!function(t){t.Prod="*",t.Sum="+"}(iH||(iH={}));class sH{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,s=this.op===iH.Prod?"1.0":"0.0",a=n?s:`getX(${aH(i,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${oU(i)} coords = getOutputCoords();\n        int end = ${oH(i,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${oH(i,"coords",this.op)} = idx;\n          val ${this.op}= getX(${aH(i,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function aH(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function oH(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function lH(t,e,n,r,i,s){const a=e.shape.length,o=rS([r],a);let l=e;null!=o&&(l=dV({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=sS(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=OW({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(c))-1;e++){const r=new sH(t,l.shape,!1,s),i=[[e]],a=h;h=n.runWebGLProgram(r,[h],h.dtype,i),n.disposeIntermediateTensorInfo(a)}if(i){const e=new sH(t,l.shape,i,s),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const t=dV({inputs:{x:h},backend:n,attrs:{perm:iS(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}const uH={kernelName:Tm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return lH(iH.Prod,i,n,s,a,o)}},cH={kernelName:Cm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return lH(iH.Sum,i,n,s,a,o)}},hH={kernelName:Am,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const t=n.readSync(i.dataId),e=n.readSync(s.dataId),r=CU(t,e,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,r)}if(2===i.shape.length){const t=n.bufferSync(i),e=n.bufferSync(s),r=EU(t,e,a,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class dH{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const pH={kernelName:Nm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockSize:s,dataFormat:a}=r,o=i.shape[0],l=("NHWC"===a?i.shape[1]:i.shape[2])*s,u=("NHWC"===a?i.shape[2]:i.shape[3])*s,c=("NHWC"===a?i.shape[3]:i.shape[1])/(s*s),h=new dH("NHWC"===a?[o,l,u,c]:[o,c,l,u],s,a);return n.runWebGLProgram(h,[i],i.dtype)}};class fH{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=pU(this.outputShape.length);const s=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class mH{constructor(t,e=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=pU(this.outputShape.length);const s=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<c;t++)d+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xTexelC${2*t+1};\n          int xTexelC${2*t+1}Ready;\n          vec4 xC${t};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let t=0;t<c;t++)d+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xTexelC${2*t+1} = vec4(0.0);\n          xTexelC${2*t+1}Ready = 0;\n          xC${t} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let t=0;t<(h+1)/2;t++){const e=2*t;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2==0?nf(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const gH={kernelName:Rm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),sf(Qb(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Hb(i.shape,s.shape,a,c,o,u,!0);let d;d=Bf().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new mH(h):new fH(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[i,s],"float32",p)}};class xH{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yH{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vH={kernelName:Dm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,dy:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Hb(i.shape,c,a,o,l,u,!0),d=new xH(h);return n.runWebGLProgram(d,[i,s],"float32")}},bH={kernelName:Lm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Hb(c,s.shape,a,o,l,u,!0),d=new yH(h);return n.runWebGLProgram(d,[i,s],"float32")}};class wH{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const SH={kernelName:Fm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,i=[...r.shape,...r.shape],s=uf(r.shape),a=nV({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new wH(s),l=n.runWebGLProgram(o,[a],a.dtype),u=nV({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class _H{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const kH={kernelName:$m,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s}=e,{strides:a,pad:o,dilations:l}=r,u=Wb(i.shape,s.shape,a,o,"NHWC",l);let c;const h=new _H(u);c=n.runWebGLProgram(h,[i,s],"float32");const d=nV({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},IH={kernelName:Bm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:l}=Gk(i,s.length);jk(a.length,l,s);const{path:u,steps:c}=qk(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=Hk(p,l[e]);let i;Xk(t)?i=s[e]:(i=dV({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(i));const a=i.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);cf(i.shape,a)||(i=nV({inputs:{x:i},backend:n,attrs:{shape:a}}),f.push(i)),null===d?d=i:(d=tV({inputs:{a:i,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=cV({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},MH=XW({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),TH={kernelName:Um,backendName:"webgl",kernelFunc:MH},CH={kernelName:Wm,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:i}=e,s=Bf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new PW("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,i.shape):new $W("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,i.shape);return n.runWebGLProgram(s,[r,i],r.dtype)}},EH=KW({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:DU}),AH={kernelName:Gm,backendName:"webgl",kernelFunc:EH},NH=XW({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ek};\n  float a1 = ${Ak};\n  float a2 = ${Nk};\n  float a3 = ${Rk};\n  float a4 = ${Dk};\n  float a5 = ${Lk};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),RH={kernelName:Vm,backendName:"webgl",kernelFunc:NH},DH=XW({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:LU,dtype:"float32"}),LH={kernelName:Hm,backendName:"webgl",kernelFunc:DH};function FH(t){const{inputs:e,attrs:n,backend:r}=t,{dim:i}=n,{input:s}=e,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(sf(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),nV({inputs:{x:s},backend:r,attrs:{shape:o}})}const $H={kernelName:jm,backendName:"webgl",kernelFunc:FH},PH="return exp(x) - 1.0;",OH=XW({opSnippet:PH,packedOpSnippet:PH,cpuKernelImpl:FU}),zH={kernelName:qm,backendName:"webgl",kernelFunc:OH};class BH{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function UH(t,e,n){const r=n.texData.get(t.dataId),i=uf(t.shape),s=t.shape[t.shape.length-1],a=nV({inputs:{x:t},backend:n,attrs:{shape:[i/s,s]}}),o=a.shape,l=new BH("real",o,e),u=new BH("imag",o,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=BW({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=nV({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const WH={kernelName:Xm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return UH(r,!1,n)}};class VH{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function GH(t){const{backend:e,attrs:n}=t,{shape:r,value:i}=n;let{dtype:s}=n;if(s=s||If(i),"string"===s){const t=vf(s,uf(r));return t.fill(i),e.makeTensorInfo(r,s,t)}{const t=new VH(r,i),n=[[i]];return e.runWebGLProgram(t,[],s,n)}}const HH={kernelName:Km,backendName:"webgl",kernelFunc:GH};class jH{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qH={kernelName:Ym,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,i=new jH(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}},XH="return floor(x);",KH=XW({opSnippet:XH,packedOpSnippet:XH,cpuKernelImpl:$U}),YH={kernelName:Zm,backendName:"webgl",kernelFunc:KH},ZH=KW({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),JH={kernelName:Jm,backendName:"webgl",kernelFunc:ZH};class QH{constructor(t){this.variableNames=["A"];const e=jB(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class tj{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=jB(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const ej={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:i}=e;const{numChannels:s}=r,a="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[l,u]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],c=[u,l],h=[u,l,s];if(o||a){const t=Bf().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=nj&&t===rj||(rj=t,nj=document.createElement("canvas").getContext("2d",{willReadFrequently:rj})),nj.canvas.width=l,nj.canvas.height=u,nj.drawImage(i,0,0,l,u),i=nj.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=gB.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),i);const p=Bf().getBool("WEBGL_PACK")?new tj(h):new QH(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let nj,rj=Bf().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const ij={kernelName:Xx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=tw(c),g=Hb(i.shape,s.shape,l,h,u,d,!1,m);let x;const y=[],v=null!=a,b=null!=o,w="leakyrelu"===p,S=()=>{const t=[i,s],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=nV({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return y.push(e),e}return t};if(v&&t.push(e(a,c)),b&&t.push(e(o,c)),w){const e=n.makeTensorInfo([],"float32",by(f,"float32"));t.push(e),y.push(e)}return t};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Bf().getBool("WEBGL_EXP_CONV")){const t=p?YW(p,!0):null,e=new PG(g,v,t,b,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],i=S();x=n.runWebGLProgram(e,i,"float32",r)}else if(Bf().getBool("WEBGL_CONV_IM2COL"))x=UG({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=p?YW(p,!1):null,e=new FG(g,v,t,b,w),r=S();x=n.runWebGLProgram(e,r,"float32")}else x=BG({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const _=nV({inputs:{x},backend:n,attrs:{shape:g.outShape}});return y.push(x),y.forEach((t=>n.disposeIntermediateTensorInfo(t))),_}},sj={kernelName:Kx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),sf(Qb(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Hb(i.shape,s.shape,l,m,u,h,!0),x=Bf().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?YW(d,x):null,v=[i,s],b=null!=a,w=null!=o,S="leakyrelu"===d;if(b&&v.push(a),w&&v.push(o),S){const t=n.makeTensorInfo([],"float32",by(p,"float32"));v.push(t),f.push(t)}let _;_=x?new mH(g,b,y,w,S):new fH(g,b,y,w,S);const k=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(_,v,"float32",k);return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}};class aj{constructor(t,e,n,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const i=oU(n.length);let s="\n    int index;";for(let t=0;t<this.sliceDim;t++)s+=`\n          index = round(getIndices(coords[0], ${t}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[t]};\n          flattenIndex += index * ${this.strides[t]};`;this.userCode=`\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const oj={kernelName:eg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:i}=e,s=i.shape,a=s[s.length-1],o=uf(r.shape),[l,u,c,h]=_k(r,i),d=nV({inputs:{x:i},backend:n,attrs:{shape:[u,a]}}),p=nV({inputs:{x:r},backend:n,attrs:{shape:[uf(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const t=n.readSync(i.dataId),e=n.bufferSync(r),s=PU(t,e,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}const f=new aj(a,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=nV({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class lj{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=oU(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("index"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function uj(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,indices:s}=e,{axis:a,batchDims:o}=r,l=gf(a,i.shape)[0];if(Bf().get("DEBUG")){const t=n.readSync(s.dataId),e=i.shape[l];for(let n=0;n<t.length;++n){const r=t[n];sf(r<=e-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`))}}const u=hI(i,s,l,o),c=uf(s.shape),h=[],d=nV({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=nV({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([i,s])||"string"===i.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),r=OU(e,t,f);return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new lj(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=nV({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}const cj={kernelName:tg,backendName:"webgl",kernelFunc:uj},hj=KW({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zU,dtype:"bool"}),dj={kernelName:ng,backendName:"webgl",kernelFunc:hj},pj=KW({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:BU}),fj={kernelName:rg,backendName:"webgl",kernelFunc:pj},mj={kernelName:sg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return UH(r,!0,n)}},gj=XW({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),xj={kernelName:og,backendName:"webgl",kernelFunc:gj},yj=XW({opSnippet:"return float(isinf(x));",dtype:"bool"}),vj={kernelName:lg,backendName:"webgl",kernelFunc:yj},bj=XW({opSnippet:"return float(isnan(x));",dtype:"bool"}),wj={kernelName:ug,backendName:"webgl",kernelFunc:bj},Sj=KW({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:UU,dtype:"bool"}),_j={kernelName:hg,backendName:"webgl",kernelFunc:Sj},kj=KW({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:WU,dtype:"bool"}),Ij={kernelName:dg,backendName:"webgl",kernelFunc:kj},Mj={kernelName:pg,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:i,num:s}=n,a=VU(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}},Tj=XW({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:GU}),Cj={kernelName:fg,backendName:"webgl",kernelFunc:Tj},Ej=XW({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),Aj={kernelName:mg,backendName:"webgl",kernelFunc:Ej},Nj=KW({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Rj={kernelName:gg,backendName:"webgl",kernelFunc:Nj},Dj=XW({opSnippet:"return float(!(x >= 1.0));"}),Lj={kernelName:xg,backendName:"webgl",kernelFunc:Dj},Fj=KW({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),$j={kernelName:yg,backendName:"webgl",kernelFunc:Fj};class Pj{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[];const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Oj{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const zj={kernelName:vg,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:l}=r,u=Bf().getBool("WEBGL_PACK_NORMALIZATION")?new Oj(i.shape,s,a,o,l):new Pj(i.shape,s,a,o,l);return n.runWebGLProgram(u,[i],i.dtype)}};class Bj{constructor(t,e,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Uj={kernelName:bg,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new Bj(i.shape,o,l,u,c);return n.runWebGLProgram(h,[i,s,a],i.dtype)}};function Wj(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=i.shape.length,l=gf(s,i.shape);let u=l;const c=rS(u,o),h=null!=c,d=n.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=i.shape[c[t]];const r=xW(t,i.shape,i.dtype,c,e);p=n.makeTensorInfo(e,i.dtype),n.texData.get(p.dataId).values=r}else p=uV(i,c,n);u=sS(u.length,o)}nS("max",u,o);const[f,m]=tS(p.shape,u);let g,x=f;if(a&&(x=eS(f,l)),d){const t=n.texData.get(p.dataId).values,e=HU(t,uf(m),x,i.dtype);g=n.makeTensorInfo(x,i.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const i=uf(e),s=nV({inputs:{x:t},attrs:{shape:[uf(t.shape)/i,i]},backend:r}),a=aV(s,t.dtype,"max",r),o=nV({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),g}const Vj={kernelName:wg,backendName:"webgl",kernelFunc:Wj},Gj=KW({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jU}),Hj={kernelName:Sg,backendName:"webgl",kernelFunc:Gj},jj={kernelName:_g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e;GB(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;sf(Qb(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Vb(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&cf(u.inShape,u.outShape))return OW({inputs:{x:i},backend:n});const c=new qV(u,"max",!1);return n.runWebGLProgram(c,[i],i.dtype)}},qj={kernelName:Ig,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{filterSize:s,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Gb(i.shape,s,a,[1,1,1],o,u,l),h=new XV(c,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};class Xj{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,s=t.effectiveFilterWidth,a=i-1-t.padInfo.top,o=s-1-t.padInfo.left,l=i*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Kj{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,s=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Yj={kernelName:Mg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s}=e,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Gb(a.shape,o,l,[1,1,1],u,c),d=new XV(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new Kj(h),m=n.runWebGLProgram(f,[i,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},Zj={kernelName:kg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:i,input:s,output:a}=e,o=s;GB([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Vb(o.shape,l,u,1,c,h),p=new qV(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new Xj(d),g=n.runWebGLProgram(m,[i,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Jj={kernelName:Tg,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,l=n;sf(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];sf(Qb(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const c=Vb(r.shape,i,s,u,a),[h,d]=function(t,e,n,r){let i=new qV(n,"max",!1);const s=r.runWebGLProgram(i,[t],"float32");return i=new qV(n,"max",!0,!0,e),[s,r.runWebGLProgram(i,[t],"float32")]}(r,o,c,l);return[h,d]}},Qj={kernelName:Cg,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:i,axis:s}=e,a=n,o=r.shape.length,l=gf(s,r.shape);let u=l;const c=rS(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=xW(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=uV(r,c,a);p.push(f),u=sS(u.length,o)}nS("sum",u,o);const[m,g]=tS(f.shape,u);let x=m;i&&(x=eS(m,l));const y=function(t,e,n,r){const i=uf(e),s=nV({inputs:{x:t},attrs:{shape:[uf(t.shape)/i,i]},backend:r}),a=aV(s,"float32","mean",r),o=nV({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(f,g,x,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},tq={kernelName:Eg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=gf(s,i.shape);let u=l;const c=rS(u,o);let h=i;null!=c&&(h=dV({inputs:{x:i},backend:n,attrs:{perm:c}}),u=sS(u.length,i.shape.length)),nS("min",u,o);const[d,p]=tS(h.shape,u),f=nV({inputs:{x:h},backend:n,attrs:{shape:[-1,uf(p)]}}),m=aV(f,f.dtype,"min",n);let g;return g=nV(a?{inputs:{x:m},backend:n,attrs:{shape:eS(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},eq=KW({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qU}),nq={kernelName:Ag,backendName:"webgl",kernelFunc:eq};class rq{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=oU(r),s=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class iq{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=oU(r),s=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=bW("rc",r),l=bW("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const sq={kernelName:Ng,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:i,mode:s}=n,a=Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iq(r.shape,i,s):new rq(r.shape,i,s);return e.runWebGLProgram(a,[r],r.dtype)}},aq=KW({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),oq={kernelName:Rg,backendName:"webgl",kernelFunc:aq};class lq{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const uq=KW({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),cq={kernelName:zm,backendName:"webgl",kernelFunc:uq},hq="return a - b;",dq=KW({opSnippet:hq,packedOpSnippet:hq,supportsComplex:!0,cpuKernelImpl:fW}),pq={kernelName:Lx,backendName:"webgl",kernelFunc:dq};function fq(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{dim:s}=r,a=gf([s],i.shape),o=Wj({inputs:{x:i},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=eS(o.shape,a),u=nV({inputs:{x:o},backend:n,attrs:{shape:l}}),c=dq({inputs:{a:i,b:u},backend:n}),h=DH({inputs:{x:c},backend:n}),d=cV({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=nV({inputs:{x:d},backend:n,attrs:{shape:l}}),f=uq({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const mq={kernelName:Sx,backendName:"webgl",kernelFunc:fq},gq={kernelName:Dg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r,l=o?i:fq({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new lq(u,c,s),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},xq={kernelName:Fg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,i]=KU(t.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,e)}let i;return i=Bf().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AW(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new TW(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(i,[r],r.dtype)}},yq=b_,vq={kernelName:Pg,backendName:"webgl",kernelFunc:function(t){Yx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=yq(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},bq=w_,wq={kernelName:Og,backendName:"webgl",kernelFunc:function(t){Yx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=bq(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Sq=S_,_q={kernelName:zg,backendName:"webgl",kernelFunc:function(t){Yx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=Sq(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class kq{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Iq={kernelName:Ug,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:i}=e,{dtype:s,depth:a,onValue:o,offValue:l}=r,u=uf(i.shape),c=new kq(u,a,o,l),h=nV({inputs:{x:i},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],s);n.disposeIntermediateTensorInfo(h);const p=nV({inputs:{x:d},backend:n,attrs:{shape:[...i.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function Mq(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=mG({inputs:{input:r},backend:n}),e=Mq({inputs:{x:t},backend:n}),i=AG({inputs:{input:r},backend:n}),s=Mq({inputs:{x:i},backend:n}),a=BW({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return GH({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Tq={kernelName:Gx,backendName:"webgl",kernelFunc:Mq},Cq={kernelName:Bg,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const e=mG({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r}),s=AG({inputs:{input:i},backend:r}),a=Mq({inputs:{x:s},backend:r}),o=BW({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return GH({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}},Eq={kernelName:Wg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:i}=r;if(1===e.length)return FH({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach((t=>{af(s,t.shape,"All tensors passed to stack must have matching shapes"),sf(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=DG({inputs:e.map((t=>{const e=FH({inputs:{input:t},backend:n,attrs:{dim:i}});return o.push(e),e})),backend:n,attrs:{axis:i}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class Aq{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=oU(r),s=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Nq{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=oU(r),s=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=bW("rc",r),l=bW("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${i} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Rq=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{paddings:s,constantValue:a}=r;if(0===uf(i.shape)){const t=s.map(((t,e)=>t[0]+i.shape[e]+t[1]));return GH({backend:n,attrs:{shape:t,value:a,dtype:i.dtype}})}const o=Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nq(i.shape,s,a):new Aq(i.shape,s,a),l=[[a]];return n.runWebGLProgram(o,[i],i.dtype,l)},Dq={kernelName:Vg,backendName:"webgl",kernelFunc:Rq},Lq=KW({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Fq={kernelName:Gg,backendName:"webgl",kernelFunc:Lq},$q={kernelName:jg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,l=[],u=gf(s,i.shape);let c=u;const h=rS(c,o);let d,p=i;if(null!=h&&(p=dV({inputs:{x:i},backend:n,attrs:{perm:h}}),c=sS(c.length,o),l.push(p)),nS("prod",c,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:i}=ZU(p.shape,p.dtype,t,c);d=n.makeTensorInfo(r,i,e)}else{const[t,e]=tS(p.shape,c),r=uf(e),s=nV({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=aV(s,qy(i.dtype),"prod",n);d=nV({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(s),l.push(a)}if(a){l.push(d);const t=eS(d.shape,u);d=nV({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},Pq={kernelName:qg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:i,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:o}=r,l=i.map((t=>n.readSync(t.dataId))),u=i.map((t=>t.shape)),c=n.readSync(s.dataId),h=n.readSync(a.dataId),[d,p,f]=JU(l,u,c,s.shape,s.dtype,h,a.shape,o),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},Oq={kernelName:Xg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:i,values:s,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=o.map((t=>n.readSync(t.dataId))),p=o.map((t=>t.shape)),[f,m]=QU(u,i.shape,c,s.shape,s.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,s.dtype,m)}},zq=t=>{const{backend:e,attrs:n}=t,{start:r,stop:i,step:s,dtype:a}=n,o=tW(r,i,s,a);return e.makeTensorInfo([o.length],a,o)},Bq={kernelName:Kg,backendName:"webgl",kernelFunc:zq},Uq=XW({opSnippet:"return 1.0 / x;"}),Wq={kernelName:Zg,backendName:"webgl",kernelFunc:Uq},Vq=XW({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Gq={kernelName:Jg,backendName:"webgl",kernelFunc:Vq},Hq=XW({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jq={kernelName:ix,backendName:"webgl",kernelFunc:Hq};class qq{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Xq{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Kq={kernelName:nx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Bf().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Xq(i.shape,l,u,s,a):new qq(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],"float32")}};class Yq{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Zq={kernelName:rx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new Yq(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class Jq{constructor(t,e,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Qq{constructor(t,e,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=t;this.outputShape=[s,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const tX={kernelName:tx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Bf().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qq(i.shape,l,u,s,a):new Jq(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],i.dtype)}};class eX{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,i]=e,[,s,a]=t,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const nX={kernelName:ex,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:i,dy:s}=e,{alignCorners:a}=r,o=new eX(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class rX{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),i=oU(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class iX{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=bW("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=oU(n);function o(n){const r=t.map(((r,i)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${i}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const sX={kernelName:sx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{dims:s}=r,a=i.shape.length,o=gf(s,i.shape);if(0===a)return OW({inputs:{x:i},backend:n});const l=Bf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iX(i.shape,o):new rX(i.shape,o);return n.runWebGLProgram(l,[i],i.dtype)}};class aX{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let i="";i="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${i}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oX={kernelName:jx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:s,center:a}=e,o=n,l=new aX(r.shape,s),[u,c]=xk(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},lX=XW({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),uX={kernelName:ax,backendName:"webgl",kernelFunc:lX},cX=XW({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eW}),hX={kernelName:ox,backendName:"webgl",kernelFunc:cX};class dX{constructor(t,e,n,r,i,s,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=oU(i.length),l=oU(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${i});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const pX={kernelName:lx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Mk(0,i,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,i.dtype);const p=nV({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=nV({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new dX(l,o,p.shape.length,f.shape.length,c,d),x=n.runWebGLProgram(g,[f,p,m],f.dtype),y=nV({inputs:{x},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),y}};class fX{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,s=2===Bf().getNumber("WEBGL_VERSION")?"while (left < right) {":i,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const mX={kernelName:ux,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:i,values:s}=e,{side:a}=r,o=new fX(i.shape[0],i.shape[1],s.shape[1],a),l=[[i.shape[1]]];return n.runWebGLProgram(o,[i,s],"int32",l)}};class gX{constructor(t,e,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&s.push(`${n[r]}`);r=s.join(),i=a.join()}const s=oU(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const xX={kernelName:cx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:i,e:s}=e,a=new gX(r.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(a,[r,i,s],jy(i.dtype,s.dtype))}},yX=XW({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Tk};\n  float scale = ${Ck};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),vX={kernelName:hx,backendName:"webgl",kernelFunc:yX},bX=XW({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:rW}),wX={kernelName:gx,backendName:"webgl",kernelFunc:bX},SX=XW({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),_X={kernelName:mx,backendName:"webgl",kernelFunc:SX},kX=XW({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),IX={kernelName:px,backendName:"webgl",kernelFunc:kX},MX=XW({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),TX={kernelName:fx,backendName:"webgl",kernelFunc:MX},CX=XW({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),EX={kernelName:xx,backendName:"webgl",kernelFunc:CX},AX={kernelName:bx,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{blockShape:s,paddings:a}=r;sf(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+s.length;t<i.shape.length;++t)l.push([0,0]);const u=[],c=Rq({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=yk(c.shape,s,o,!1),d=vk(h.length,s.length,!1),p=bk(c.shape,s,o,!1),f=nV({inputs:{x:c},backend:n,attrs:{shape:h}}),m=dV({inputs:{x:f},backend:n,attrs:{perm:d}}),g=nV({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},NX={kernelName:_x,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=n.readSync(s.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=aW(o,r.shape,r.dtype,l,i.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],i.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},RX={kernelName:kx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:i,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(n.readSync(i.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,h]=oW(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},DX={kernelName:Ix,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=lW(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},LX={kernelName:Mx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const a=n.readSync(r.dataId),o=n.readSync(i.dataId),l=n.readSync(s.dataId),[u,c]=lW(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},FX={kernelName:Tx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Mk(0,i,o);if("string"===s.dtype){const t=n.bufferSync(i),e=n.bufferSync(s),r=ky(n.readSync(a.dataId)[0]),p=nW(t,e,o,d,c,u,l,h,r,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new dX(u,l,i.shape.length,s.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[s,i,a],s.dtype),m=nV({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},$X={kernelName:wx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=gf(a,i.shape)[0],l=Yk(i,s,o),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const r=lG({inputs:{x:i},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r}))}},PX="return sqrt(x);",OX=XW({opSnippet:PX,packedOpSnippet:PX,cpuKernelImpl:uW}),zX={kernelName:yx,backendName:"webgl",kernelFunc:OX},BX={kernelName:Ex,backendName:"webgl",kernelFunc:XW({opSnippet:"return x * x;"})},UX="return (a - b) * (a - b);",WX=KW({opSnippet:UX,packedOpSnippet:UX}),VX={kernelName:Cx,backendName:"webgl",kernelFunc:WX},GX={kernelName:Hx,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,i=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new TW(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}};class HX{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=oU(n.length),s=oU(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${t});\n      ${i} strides = ${i}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const jX={kernelName:Ax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:v,strides:b}=Sb(i.shape,s,a,o,l,u,c,h,d);let w;if(m)w=nV({inputs:{x:i},backend:n,attrs:{shape:f}});else if(g||x){sf(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const t=ub(y,v,b),e=lG({inputs:{x:i},backend:n,attrs:{begin:y,size:t}});w=nV({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([i])){const t=n.readSync(i.dataId),e=Xv(i.shape,i.dtype,t),r=cW(p,e,b,y);w=n.makeTensorInfo(f,i.dtype,r.values)}else{const t=new HX(y,b,p);w=n.runWebGLProgram(t,[i],i.dtype)}const S=nV({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),S}},qX={kernelName:Nx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=hW(d,p,i,s,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},XX={kernelName:Rx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=dW(o,l,i),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},KX={kernelName:Dx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:i}=r,{input:s}=e;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(s.dataId),o=pW(a,i);return n.makeTensorInfo(s.shape,"int32",o)}},YX=XW({opSnippet:"return tan(x);"}),ZX={kernelName:Fx,backendName:"webgl",kernelFunc:YX},JX=XW({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),QX={kernelName:$x,backendName:"webgl",kernelFunc:JX};class tK{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=oU(this.rank),i=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function eK(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{reps:s}=r;if("string"===i.dtype||i.shape.length>5){const t=n.readSync(i.dataId),e="string"===i.dtype?t.map((t=>ky(t))):t,r=Xv(i.shape,i.dtype,e),a=mW(r,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new tK(i.shape,s);return n.runWebGLProgram(a,[i],i.dtype)}const nK={kernelName:Px,backendName:"webgl",kernelFunc:eK};class rK{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class iK{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function sK(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function aK(t){let e=1;for(;e<t;)e*=2;return e}const oK={kernelName:Ox,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i}=e,{k:s,sorted:a}=r,o=Bf().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Bf().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([i])||c<o||s>l){const t=n.readSync(i.dataId),[e,r]=gW(t,u,i.dtype,s,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[i,GH({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(i.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(i):i,f=uf(u)/c,m=nV({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&sK(n,p);const g=aK(s),x=aK(c);let y=null;const v=()=>null===y?[m,m]:[m,y],b=(t,e,r)=>{const i=v(),s=new rK(r),a=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=y;y=n.runWebGLProgram(s,i,"int32",a),sK(n,o)};for(let t=1;t<g;t*=2){const e=2*t;for(let n=t;n>=1;n/=2)b(e,n,[f,x])}for(let t=x;t>g;t/=2){const e=v(),r=new iK([f,t/2]),i=[[c],[null===y?1:0],[g]],s=y;y=n.runWebGLProgram(r,e,"int32",i),sK(n,s);const a=g/2,o=2*a;for(let t=a;t>=1;t/=2)b(o,t,y.shape)}let w=y;y=lG({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,s]}}),sK(n,w);let S=uj({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});sK(n,m);const _=u.slice(0,-1);_.push(s),w=y,y=nV({inputs:{x:y},attrs:{shape:_},backend:n}),sK(n,w);const k=S;return S=nV({inputs:{x:S},attrs:{shape:_},backend:n}),sK(n,k),[S,y]}};class lK{constructor(t,e,n,r,i,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${i});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${i});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const uK={kernelName:zx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=i.shape,[f,m]=null!=u?u:[h,d],g=new lK(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[i,s],"float32")}},cK={kernelName:Ux,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:s}=e;GB(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=yW(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},hK={kernelName:Wx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i,o=a.shape.length,l=i.shape[s],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==s&&(u[c++]=a.shape[t]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[s]=t;const e=lG({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=nV({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class dK{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,i=t.inSize,s=t.numSegments,a=s*Math.ceil(i/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const pK=[mV,xV,vV,wV,kV,TV,CV,EV,FV,$V,OV,BV,WV,GV,jV,KV,YV,QV,tG,eG,iG,cG,hG,dG,xG,bG,_G,UW,MG,LG,WG,qG,XG,KG,YG,ZG,QG,eH,rH,uH,cH,hH,pH,gH,vH,bH,SH,kH,IH,TH,CH,AH,RH,LH,$H,zH,WH,HH,qH,YH,JH,ej,ij,sj,oj,cj,dj,fj,zW,mj,NG,xj,vj,wj,GW,_j,Ij,Mj,Cj,Aj,Rj,Lj,$j,zj,Uj,Vj,Hj,jj,qj,Yj,Zj,Jj,Qj,tq,nq,sq,oq,gq,eV,xq,vq,wq,_q,fG,Iq,Cq,Eq,Dq,Fq,qW,$q,Pq,Oq,Bq,gG,cq,Wq,Gq,jq,rV,Kq,Zq,tX,nX,sX,oX,uX,hX,pX,mX,xX,vX,wX,_X,IX,TX,uG,mq,EX,AX,NX,RX,DX,LX,FX,$X,zX,BX,VX,GX,jX,qX,XX,KX,pq,hV,ZX,QX,nK,oK,uK,pV,cK,hK,{kernelName:Vx,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:i,segmentIds:s}=e,{numSegments:a}=r,o=i.shape.length,l=[];let u=0;const c=rS([u],o);let h=i;null!=c&&(h=dV({inputs:{x:i},backend:n,attrs:{perm:c}}),l.push(h),u=sS(1,o)[0]);const d=cI(h.shape,u,a),p=uf([h.shape[u]]),f=nV({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=qy(i.dtype),g=(t,e,r,i,s)=>{const a=t.shape[0],o=t.shape[1],u=uI(o,s),c=new dK({windowSize:u,inSize:o,batchSize:a,numSegments:s},e),h=n.compileAndRun(c,[t,r],i);if(l.push(h),h.shape[1]===s)return h;const d=zq({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=eK({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,e,p,i,s)},x=nV({inputs:{x:g(f,"unsortedSegmentSum",s,m,a)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const t=iS(c);y=dV({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},Tq];for(const t of pK)ry(t);const fK=(t,e,n,r=0)=>{const i=((t,e,n,r=0)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]}))(t,e,n,r),{x:s,y:a,z:o}=i;return{x:s/o,y:a/o}},mK=(t,e,n,r,i,s,a,o)=>({variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[o,i*i],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, ${i}) * ${r};\n\t    int searchOffsetY = searchOffsetIndex / ${i} * ${r};\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - ${n};\n\t    int sy = sCenterY + searchOffsetY - ${n};\n\n\t    if (sx < ${t} || sx >= (${a} - ${t}) || sy < ${t} || sy >= (${s} - ${t})) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < ${e}; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < ${e}; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - ${t};\n\t\t  int fy2 = sCenterY + templateOffsetY - ${t};\n\n\t\t  int sx2 = sx + templateOffsetX - ${t};\n\t\t  int sy2 = sy + templateOffsetY - ${t};\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(${e} * ${e});\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`}),gK=(t,e,n,r)=>({variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[r,2],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / ${n*n};\n\t    int searchOffsetIndex = imod(maxIndex, ${n*n});\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, ${n}) * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${t}) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / ${n} * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${t}) / markerScale);\n\t    }\n\t  }\n\t`}),xK=t=>({variableNames:["sims","maxIndex"],outputShape:[t],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"}),yK=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"}),vK=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"}),bK=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],wK=[];for(let t=0;t<bK.length;t++){const e=bK[t].sigma;for(let n=0;n<bK[t].points.length;n++){const r=bK[t].points[n];wK.push([e,r[0],r[1]])}}const SK=wK,_K=(SK.length-1)*SK.length/2,kK=1/(2*Math.PI),IK=t=>{const e=[];for(let n=1;n<t.length;n++)e.push("image"+n);return e},MK=t=>{let e="float getPixel(int octave, int y, int x) {";for(let n=1;n<t.length;n++)e+=`\n\t  if (octave == ${n}) {\n\t    return getImage${n}(y, x);\n\t  }\n\t`;return e+="}",e},TK=(t,e,n,r)=>{const i=IK(t),s=MK(t);return{variableNames:[...i,"extrema","radial"],outputShape:[e.shape[0],n.shape[0],2],userCode:`\n\t  ${s}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * ${r};\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`}},CK=(t,e)=>({variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${e.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`}),EK=t=>null==t,AK=t=>{if("object"!=typeof t||null===t)return t;const e=Array.isArray(t)?[]:{};for(const n in t){const r=t[n];e[n]=AK(r)}return e},NK=class{debugMode;width;height;numOctaves;tensorCaches;kernelCaches;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(const[n,r]of t.entries())e[4*n]=r,e[4*n+1]=r,e[4*n+2]=r,e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}_buildPyramidImage(t){const e=[];for(let n=0;n<this.numOctaves;n++){let r;r=0===n?this._applyFilter(t):this._downsampleBilinear(e[n-1][e[n-1].length-1]);const i=this._applyFilter(r);e.push([r,i])}return e}_buildDogPyramid(t){const e=[];for(let n=0;n<this.numOctaves;n++){const r=this._differenceImageBinomial(t[n][0],t[n][1]);e.push(r)}return e}_getExtremas(t){const e=[];for(let n=1;n<this.numOctaves-1;n++){const r=this._buildExtremas(t[n-1],t[n],t[n+1]);e.push(r)}return e}_getFeaturePoints(t,e,n){const r=[];for(const[i,s]of t.entries()){if(0==s[0])continue;const t=[];for(let n=0;n<e[i].length;n+=4){const r=e[i][n]*256**3+65536*e[i][n+1]+256*e[i][n+2]+e[i][n+3];t.push(r)}const a=s[1],o=s[2],l=s[3]*Math.pow(2,a)+Math.pow(2,a-1)-.5,u=o*Math.pow(2,a)+Math.pow(2,a-1)-.5,c=Math.pow(2,a);r.push({maxima:s[0]>0,x:l,y:u,scale:c,angle:n[i],descriptors:t})}return r}detect(t){let e={};const n=this._buildPyramidImage(t),r=this._buildDogPyramid(n),i=this._getExtremas(r),s=this._applyPrune(i),a=this._computeLocalization(s,r),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,a,u),h=this._computeFreakDescriptors(c),d=a.arraySync(),p=u.arraySync(),f=h.arraySync();return this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:r.map((t=>t?.arraySync()??null)),extremasResults:i.map((t=>t.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:s,localizedExtremas:a.arraySync()}),n.forEach((t=>t.forEach((t=>t?.dispose())))),r.forEach((t=>t?.dispose())),i.forEach((t=>t.dispose())),a.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose(),{featurePoints:this._getFeaturePoints(d,f,p),debugExtra:e}}_compileAndRun(t,e){const n=Db().compileAndRun(t,e);return Tb().makeTensorFromTensorInfo(n)}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=t.map((t=>{return e=t.shape[0],n=t.shape[1],{variableNames:["extrema"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};var e,n}));this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let r=0;r<5;r++)n[t].push([0,0,0,0]),e[t].push(0)}Eb((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let i=0;i<t.length;i++){const s=r[i],a=this._compileAndRun(s,[t[i]]),o=i+1,l=a.arraySync(),u=a.shape[0],c=a.shape[1],h=2*c/10,d=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<c;r++){const i=l[t][r];if(0===i)continue;const s=i%1e3,a=Math.floor(Math.abs(i)/1e3),u=2*r+(2===a||3===a?1:0),c=2*t+(1===a||3===a?1:0),p=Math.floor(u/h),f=10*Math.floor(c/d)+p,m=Math.abs(s);let g=5;for(;g>=1&&m>=e[f][g-1];)g--;if(!(g>=5)){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t]=AK(n[f][t-1]);e[f][g]=m,n[f][g][0]=s,n[f][g][1]=o,n[f][g][2]=c,n[f][g][3]=u}}}}));const r=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)r.push(n[t][e]);return r}_applyFilter(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),this.kernelCaches.applyFilter[r]||(this.kernelCaches.applyFilter[r]=((t,e)=>[yK(t,e),vK(t,e)])(e,n)),Eb((()=>{const[e,n]=this.kernelCaches.applyFilter[r],i=this._compileAndRun(e,[t]);return this._compileAndRun(n,[i])}))}_buildExtremas(t,e,n){const r=e.shape[0],i=e.shape[1],s="w"+i;return this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),this.kernelCaches.buildExtremas[s]||(this.kernelCaches.buildExtremas[s]=((t,e)=>({variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${t-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${e-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`}))(r,i)),Eb((()=>{const r=this.kernelCaches.buildExtremas[s];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])}))}_computeLocalization(t,e){return this.kernelCaches.computeLocalization||(this.kernelCaches.computeLocalization=((t,e)=>{const n=IK(t),r=MK(t);return[{variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`}]})(e,t)),Eb((()=>{const n=this.kernelCaches.computeLocalization[0],r=mv(t,[t.length,t[0].length],"int32"),i=this._compileAndRun(n,[...e.slice(1),r]).arraySync(),s=[];for(let t=0;t<i.length;t++){s.push([]);for(let e=0;e<i[t].length;e++)s[t].push([])}const a=[];for(const e of t)a.push([e[0],e[1],e[2],e[3]]);for(const[t,e]of a.entries()){if(0===e[0])continue;const n=i[t],r=.5*(n[1][2]-n[1][0]),s=.5*(n[2][1]-n[0][1]),a=n[1][2]+n[1][0]-2*n[1][1],o=n[2][1]+n[0][1]-2*n[1][1],l=.25*(n[0][0]+n[2][2]-n[0][2]-n[2][0]),u=a*o-l**2,c=(o*-r+-l*-s)/u,h=(-l*-r+a*-s)/u,d=e[2]+h,p=e[3]+c;Math.abs(u)<1e-4||(e[2]=d,e[3]=p)}return mv(a,[a.length,a[0].length],"float32")}))}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||Eb((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=Math.sqrt(r**2+n**2);if(t>4.5)continue;const i=Math.exp(-.05555555555555555*t**2);e.push([r,n,i])}this.tensorCaches.orientationHistograms={radialPropertiesT:Nb(mv(e,[e.length,3]))}}));const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;return this.kernelCaches.computeOrientationHistograms||(this.kernelCaches.computeOrientationHistograms=((t,e,n,r)=>[TK(t,e,n,r),CK(e,n)])(e,t,r,kK)),Eb((()=>{const[e,i]=this.kernelCaches.computeOrientationHistograms,s=this._compileAndRun(e,[...n,t,r]);return this._compileAndRun(i,[s])}))}_computeExtremaAngles(t){return this.kernelCaches.computeExtremaAngles||(this.kernelCaches.computeExtremaAngles=(t=>({variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`}))(t)),Eb((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||Eb((()=>{const t=mv(SK);this.tensorCaches._computeExtremaFreak={freakPointsT:Nb(t)}}));const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,i=[];for(let e=1;e<t.length;e++)i.push(t[e][1]);return this.kernelCaches._computeExtremaFreak||(this.kernelCaches._computeExtremaFreak=((t,e)=>{const n=IK(t),r=MK(t);return[{variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],SK.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`}]})(t,e)),Eb((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...i,e,n,r])}))}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let i=r+1;i<t.shape[1];i++)e.push(r),n.push(i);const r=mv(e,[e.length]).cast("int32"),i=mv(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Nb($S([r,i],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(_K/8);return this.kernelCaches.computeFreakDescriptors||(this.kernelCaches.computeFreakDescriptors=((t,e,n)=>[{variableNames:["freak","p"],outputShape:[t.shape[0],e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${n}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`}])(t,n,_K)),Eb((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_differenceImageBinomial(t,e){return Eb((()=>t.sub(e)))}_upsampleBilinear(t,e){const n="w"+t.shape[1];return this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),this.kernelCaches.upsampleBilinear[n]||(this.kernelCaches.upsampleBilinear[n]=(r=e.shape[0],i=e.shape[1],{variableNames:["p"],outputShape:[r,i],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"})),Eb((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}));var r,i}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),this.kernelCaches.downsampleBilinear[r]||(this.kernelCaches.downsampleBilinear[r]=((t,e)=>({variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"}))(e,n)),Eb((()=>{const e=this.kernelCaches.downsampleBilinear[r];return this._compileAndRun(e,[t])}))}_smoothHistograms(t){return this.kernelCaches.smoothHistograms||(this.kernelCaches.smoothHistograms=(t=>({variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"}))(t)),Eb((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_runWebGLProgram(t,e,n){const r=Db().runWebGLProgram(t,e,n);return Tb().makeTensorFromTensorInfo(r)}};var RK,DK,LK,FK=4294967295;function $K(t,e,n){var r=Math.floor(n/4294967296),i=n;t.setUint32(e,r),t.setUint32(e+4,i)}function PK(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var OK=("undefined"==typeof process||"never"!==(null===(RK=null===process||void 0===process?void 0:process.env)||void 0===RK?void 0:RK.TEXT_ENCODING))&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function zK(t){for(var e=t.length,n=0,r=0;r<e;){var i=t.charCodeAt(r++);if(0!=(4294967168&i))if(0==(4294965248&i))n+=2;else{if(i>=55296&&i<=56319&&r<e){var s=t.charCodeAt(r);56320==(64512&s)&&(++r,i=((1023&i)<<10)+(1023&s)+65536)}n+=0==(4294901760&i)?3:4}else n++}return n}var BK=OK?new TextEncoder:void 0,UK=OK?"undefined"!=typeof process&&"force"!==(null===(DK=null===process||void 0===process?void 0:process.env)||void 0===DK?void 0:DK.TEXT_ENCODING)?200:0:FK,WK=(null==BK?void 0:BK.encodeInto)?function(t,e,n){BK.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(BK.encode(t),n)};function VK(t,e,n){for(var r=e,i=r+n,s=[],a="";r<i;){var o=t[r++];if(0==(128&o))s.push(o);else if(192==(224&o)){var l=63&t[r++];s.push((31&o)<<6|l)}else if(224==(240&o)){l=63&t[r++];var u=63&t[r++];s.push((31&o)<<12|l<<6|u)}else if(240==(248&o)){var c=(7&o)<<18|(l=63&t[r++])<<12|(u=63&t[r++])<<6|63&t[r++];c>65535&&(c-=65536,s.push(c>>>10&1023|55296),c=56320|1023&c),s.push(c)}else s.push(o);s.length>=4096&&(a+=String.fromCharCode.apply(String,s),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,s)),a}var GK,HK=OK?new TextDecoder:null,jK=OK?"undefined"!=typeof process&&"force"!==(null===(LK=null===process||void 0===process?void 0:process.env)||void 0===LK?void 0:LK.TEXT_DECODER)?200:0:FK,qK=function(t,e){this.type=t,this.data=e},XK=(GK=function(t,e){return GK=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},GK(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}GK(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),KK=function(t){function e(n){var r=t.call(this,n)||this,i=Object.create(e.prototype);return Object.setPrototypeOf(r,i),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:e.name}),r}return XK(e,t),e}(Error),YK={type:-1,encode:function(t){var e,n,r,i;return t instanceof Date?function(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var i=new Uint8Array(4);return(e=new DataView(i.buffer)).setUint32(0,n),i}var s=n/4294967296,a=4294967295&n;return i=new Uint8Array(8),(e=new DataView(i.buffer)).setUint32(0,r<<2|3&s),e.setUint32(4,a),i}return i=new Uint8Array(12),(e=new DataView(i.buffer)).setUint32(0,r),$K(e,4,n),i}((r=1e6*((e=t.getTime())-1e3*(n=Math.floor(e/1e3))),{sec:n+(i=Math.floor(r/1e9)),nsec:r-1e9*i})):null},decode:function(t){var e=function(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:PK(e,4),nsec:e.getUint32(0)};default:throw new KK("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(t.length))}}(t);return new Date(1e3*e.sec+e.nsec/1e6)}},ZK=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(YK)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var i=1+e;this.builtInEncoders[i]=n,this.builtInDecoders[i]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(i=r(t,e)))return new qK(-1-n,i);for(n=0;n<this.encoders.length;n++){var r,i;if(null!=(r=this.encoders[n])&&null!=(i=r(t,e)))return new qK(n,i)}return t instanceof qK?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new qK(e,t)},t.defaultCodec=new t,t}();function JK(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var QK=function(){function t(t,e,n,r,i,s,a,o){void 0===t&&(t=ZK.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=i,this.forceFloat32=s,this.ignoreUndefined=a,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.reinitializeState=function(){this.pos=0},t.prototype.encodeSharedRef=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.subarray(0,this.pos)},t.prototype.encode=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.slice(0,this.pos)},t.prototype.doEncode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth ".concat(e));null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)&&!this.forceIntegerToFloat?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: ".concat(t," bytes in UTF-8"));this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){if(t.length>UK){var e=zK(t);this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),WK(t,this.bytes,this.pos),this.pos+=e}else e=zK(t),this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),function(t,e,n){for(var r=t.length,i=n,s=0;s<r;){var a=t.charCodeAt(s++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[i++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&s<r){var o=t.charCodeAt(s);56320==(64512&o)&&(++s,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(e[i++]=a>>12&15|224,e[i++]=a>>6&63|128):(e[i++]=a>>18&7|240,e[i++]=a>>12&63|128,e[i++]=a>>6&63|128)}e[i++]=63&a|128}else e[i++]=a}}(t,this.bytes,this.pos),this.pos+=e},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(t)));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: ".concat(e));this.writeU8(198),this.writeU32(e)}var n=JK(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n=t.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: ".concat(n));this.writeU8(221),this.writeU32(n)}for(var r=0,i=t;r<i.length;r++){var s=i[r];this.doEncode(s,e+1)}},t.prototype.countWithoutUndefined=function(t,e){for(var n=0,r=0,i=e;r<i.length;r++)void 0!==t[i[r]]&&n++;return n},t.prototype.encodeMap=function(t,e){var n=Object.keys(t);this.sortKeys&&n.sort();var r=this.ignoreUndefined?this.countWithoutUndefined(t,n):n.length;if(r<16)this.writeU8(128+r);else if(r<65536)this.writeU8(222),this.writeU16(r);else{if(!(r<4294967296))throw new Error("Too large map object: ".concat(r));this.writeU8(223),this.writeU32(r)}for(var i=0,s=n;i<s.length;i++){var a=s[i],o=t[a];this.ignoreUndefined&&void 0===o||(this.encodeString(a),this.doEncode(o,e+1))}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: ".concat(e));this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,i=n;t.setUint32(e,r),t.setUint32(e+4,i)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),$K(this.view,this.pos,t),this.pos+=8},t}(),tY={};function eY(t){return"".concat(t<0?"-":"","0x").concat(Math.abs(t).toString(16).padStart(2,"0"))}var nY=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.find=function(t,e,n){t:for(var r=0,i=this.caches[n-1];r<i.length;r++){for(var s=i[r],a=s.bytes,o=0;o<n;o++)if(a[o]!==t[e+o])continue t;return s.str}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,str:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.find(t,e,n);if(null!=r)return this.hit++,r;this.miss++;var i=VK(t,e,n),s=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(s,i),i},t}(),rY=function(t,e){var n,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},iY=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,i){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,i,(e=t[n](e)).done,e.value)}))}}},sY=function(t){return this instanceof sY?(this.v=t,this):new sY(t)},aY=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=n.apply(t,e||[]),s=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){i[t]&&(r[t]=function(e){return new Promise((function(n,r){s.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=i[t](e)).value instanceof sY?Promise.resolve(n.value.v).then(l,u):c(s[0][2],n)}catch(t){c(s[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function c(t,e){t(e),s.shift(),s.length&&o(s[0][0],s[0][1])}},oY=new DataView(new ArrayBuffer(0)),lY=new Uint8Array(oY.buffer),uY=function(){try{oY.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),cY=new uY("Insufficient data"),hY=new nY,dY=function(){function t(t,e,n,r,i,s,a,o){void 0===t&&(t=ZK.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=FK),void 0===r&&(r=FK),void 0===i&&(i=FK),void 0===s&&(s=FK),void 0===a&&(a=FK),void 0===o&&(o=hY),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=i,this.maxMapLength=s,this.maxExtLength=a,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=oY,this.bytes=lY,this.headByte=-1,this.stack=[]}return t.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},t.prototype.setBuffer=function(t){this.bytes=JK(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=JK(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining(1)){var e=this.bytes.subarray(this.pos),n=JK(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return this.view.byteLength-this.pos>=t},t.prototype.createExtraByteError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra ".concat(e.byteLength-n," of ").concat(e.byteLength," byte(s) found at buffer[").concat(t,"]"))},t.prototype.decode=function(t){this.reinitializeState(),this.setBuffer(t);var e=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return e},t.prototype.decodeMulti=function(t){return rY(this,(function(e){switch(e.label){case 0:this.reinitializeState(),this.setBuffer(t),e.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return e.sent(),[3,1];case 3:return[2]}}))},t.prototype.decodeAsync=function(t){var e,n,r,i,s,a,o,l;return s=this,a=void 0,l=function(){var s,a,o,l,u,c,h,d;return rY(this,(function(p){switch(p.label){case 0:s=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),e=iY(t),p.label=2;case 2:return[4,e.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,s)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{a=this.doDecodeSync(),s=!0}catch(t){if(!(t instanceof uY))throw t}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(i=e.return)?[4,i.call(e)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(s){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,a]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parsing ".concat(eY(c)," at ").concat(d," (").concat(h," in the current buffer)"))}}))},new((o=void 0)||(o=Promise))((function(t,e){function n(t){try{i(l.next(t))}catch(t){e(t)}}function r(t){try{i(l.throw(t))}catch(t){e(t)}}function i(e){var i;e.done?t(e.value):(i=e.value,i instanceof o?i:new o((function(t){t(i)}))).then(n,r)}i((l=l.apply(s,a||[])).next())}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return aY(this,arguments,(function(){var n,r,i,s,a,o,l,u,c;return rY(this,(function(h){switch(h.label){case 0:n=e,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),i=iY(t),h.label=2;case 2:return[4,sY(i.next())];case 3:if((s=h.sent()).done)return[3,12];if(a=s.value,e&&0===r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,sY(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof uY))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),s&&!s.done&&(c=i.return)?[4,sY(c.call(i))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.doDecodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new KK("Unrecognized type byte: ".concat(eY(t)));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var i=this.stack;i.length>0;){var s=i[i.length-1];if(0===s.type){if(s.array[s.position]=e,s.position++,s.position!==s.size)continue t;i.pop(),e=s.array}else{if(1===s.type){if(void 0,"string"!=(a=typeof e)&&"number"!==a)throw new KK("The type of key must be string or number but "+typeof e);if("__proto__"===e)throw new KK("The key __proto__ is not allowed");s.key=e,s.type=2;continue t}if(s.map[s.key]=e,s.readCount++,s.readCount!==s.size){s.key=null,s.type=1;continue t}i.pop(),e=s.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new KK("Unrecognized array type byte: ".concat(eY(t)))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new KK("Max length exceeded: map length (".concat(t,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new KK("Max length exceeded: array length (".concat(t,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new KK("Max length exceeded: UTF-8 byte length (".concat(t,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+e+t)throw cY;var r,i=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.keyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.keyDecoder.decode(this.bytes,i,t):t>jK?function(t,e,n){var r=t.subarray(e,e+n);return HK.decode(r)}(this.bytes,i,t):VK(this.bytes,i,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new KK("Max length exceeded: bin length (".concat(t,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(t+e))throw cY;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new KK("Max length exceeded: ext length (".concat(t,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=PK(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),pY={},fY=n(477),mY=n.n(fY);function gY(){return mY()('(()=>{"use strict";const t=class{cumsum;constructor(t,e,s){this.cumsum=[];for(let t=0;t<s;t++){this.cumsum.push([]);for(let s=0;s<e;s++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let s=1;s<e;s++)this.cumsum[0][s]=this.cumsum[0][s-1]+t[s];for(let r=1;r<s;r++)this.cumsum[r][0]=this.cumsum[r-1][0]+t[r*e];for(let r=1;r<s;r++)for(let s=1;s<e;s++)this.cumsum[r][s]=t[r*e+s]+this.cumsum[r-1][s]+this.cumsum[r][s-1]-this.cumsum[r-1][s-1]}query(t,e,s,r){let a=this.cumsum[r][s];return e>0&&(a-=this.cumsum[e-1][s]),t>0&&(a-=this.cumsum[r][t-1]),t>0&&e>0&&(a+=this.cumsum[e-1][t-1]),a}},e=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,sdThresh:o}=t;if(e-6<0||e+6>=r.width)return null;if(s-6<0||s+6>=r.height)return null;const u=a.query(e-6,s-6,e+6,s+6)/169;let n=i.query(e-6,s-6,e+6,s+6);return n-=2*u*a.query(e-6,s-6,e+6,s+6),n+=169*u**2,n/169<o*o?null:(n=Math.sqrt(n),n)},s=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,tx:o,ty:u,vlen:n}=t,{data:m,width:h,height:l}=r;if(e-6<0||e+6>=h)return null;if(s-6<0||s+6>=l)return null;const c=a.query(e-6,s-6,e+6,s+6),f=i.query(e-6,s-6,e+6,s+6);let g=0,d=(s-6)*h+(e-6),y=(u-6)*h+(o-6);const M=h-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=m[d]*m[y],d+=1,y+=1;d+=M,y+=M}g-=a.query(o-6,u-6,o+6,u+6)/169*c;let p=f-c*c/169;return 0==p?null:(p=Math.sqrt(p),1*g/(n*p))},r=r=>{const{data:a,height:i,width:o}=r,u=[o*i];for(let t=0;t<u.length;t++)u[t]=!1;const n=new Float32Array(a.length);for(let t=0;t<o;t++)n[t]=-1,n[o*(i-1)+t]=-1;for(let t=0;t<i;t++)n[t*o]=-1,n[t*o+o-1]=-1;for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=0,i=0;for(let t=-1;t<=1;t++)r+=a[s+o*t+1]-a[s+o*t-1],i+=a[s+o+t]-a[s-o+t];r/=768,i/=768,n[s]=Math.sqrt((r*r+i*i)/2)}const m=new Uint32Array(1e3).fill(0),h=[-1,1,-o,o];for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=!0;for(let t=0;t<h.length;t++)if(n[s]<=n[s+h[t]]){r=!1;break}if(r){let t=Math.floor(1e3*n[s]);t>999&&(t=999),t<0&&(t=0),m[t]+=1,u[s]=!0}}const l=.02*o*i;let c=999,f=0;for(;c>=0&&(f+=m[c],!(f>l));)c--;for(let t=0;t<u.length;t++)u[t]&&1e3*n[t]<c&&(u[t]=!1);const g=[];for(const[t,e]of a.entries())g[t]=e**2;const d=new t(a,o,i),y=new t(g,o,i),M=new Float32Array(a.length);for(let t=0;t<o;t++)for(let a=0;a<i;a++){const i=a*o+t;if(!u[i]){M[i]=1;continue}const n=e({image:r,cx:t,cy:a,sdThresh:5,imageDataCumsum:d,imageDataSqrCumsum:y});if(null===n){M[i]=1;continue}let m=-1;for(let e=-10;e<=10;e++){for(let i=-10;i<=10;i++){if(i*i+e*e<=4)continue;const o=s({image:r,cx:t+i,cy:a+e,vlen:n,tx:t,ty:a,imageDataCumsum:d,imageDataSqrCumsum:y});if(null!==o&&o>m&&(m=o,m>.95))break}if(m>.95)break}M[i]=m}const p=(t=>{const{image:r,featureMap:a,templateSize:i,searchSize:o,maxSimThresh:u,minSimThresh:n,sdThresh:m,imageDataCumsum:h,imageDataSqrCumsum:l}=t;let{occSize:c}=t;const{data:f,width:g,height:d}=r;c=Math.floor(Math.min(r.width,r.height)/10);const y=3*(2*i+1),M=Math.floor(g/y),p=Math.floor(d/y),w=Math.floor(g/c)*Math.floor(d/c)+M*p,q=[],S=new Float32Array(f.length);for(const[t,e]of a.entries())S[t]=e;let D=0;for(;D<w;){let t=u,a=-1,f=-1;for(let e=0;e<d;e++)for(let s=0;s<g;s++)S[e*g+s]<t&&(t=S[e*g+s],a=s,f=e);if(-1===a)break;const y=e({image:r,cx:a,cy:f,sdThresh:0,imageDataCumsum:h,imageDataSqrCumsum:l});if(null===y){S[f*g+a]=1;continue}if(y/(2*i+1)<m){S[f*g+a]=1;continue}let M=1,p=-1;for(let e=-o;e<=o;e++){for(let i=-o;i<=o;i++){if(i*i+e*e>o*o)continue;if(0===i&&0===e)continue;const u=s({image:r,vlen:y,cx:a+i,cy:f+e,tx:a,ty:f,imageDataCumsum:h,imageDataSqrCumsum:l});if(null!==u){if(u<M&&(M=u,M<n&&M<t))break;if(u>p&&(p=u,p>.99))break}}if(M<n&&M<t||p>.99)break}if(M<n&&M<t||p>.99)S[f*g+a]=1;else{q.push({x:a,y:f}),D+=1;for(let t=-c;t<=c;t++)for(let e=-c;e<=c;e++)f+t<0||f+t>=d||a+e<0||a+e>=g||(S[(f+t)*g+(a+e)]=1)}}return q})({image:r,featureMap:M,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:d,imageDataSqrCumsum:y});return p},a=t=>{const e=Math.min(t.width,t.height);return[256/e,128/e].map((e=>Object.assign((({image:t,ratio:e})=>{const s=Math.round(t.width*e),r=Math.round(t.height*e),a=new Uint8Array(s*r);for(let i=0;i<s;i++){const o=Math.round(1*i/e);let u=Math.round(1*(i+1)/e)-1;u>=t.width&&(u=t.width-1);for(let n=0;n<r;n++){const r=Math.round(1*n/e);let m=Math.round(1*(n+1)/e)-1;m>=t.height&&(m=t.height-1);let h=0,l=0;for(let e=o;e<=u;e++)for(let s=r;s<=m;s++)h+=1*t.data[s*t.width+e],l+=1;a[n*s+i]=Math.floor(h/l)}}return{data:a,width:s,height:r}})({image:t,ratio:e}),{scale:e})))},i=(t,e)=>{const s=[];for(const[a,i]of t.entries()){const t=r(i),o={data:i.data,scale:i.scale,width:i.width,height:i.height,points:t};s.push(o),e(a)}return s};onmessage=t=>{const{data:e}=t;if("compile"===e.type){const{targetImages:t}=e,s=50/t.length;let r=0;const o=[];for(const e of t){const t=a(e),u=s/t.length,n=i(t,(()=>{r+=u,postMessage({type:"progress",percent:r})}));o.push(n)}postMessage({type:"compileDone",list:o})}}})();',"Worker",void 0,void 0)}const xY=({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),i=new Uint8Array(n*r);for(let s=0;s<n;s++){const a=Math.round(1*s/e);let o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<r;l++){const r=Math.round(1*l/e);let u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let c=0,h=0;for(let e=a;e<=o;e++)for(let n=r;n<=u;n++)c+=1*t.data[n*t.width+e],h+=1;i[l*n+s]=Math.floor(c/h)}}return{data:i,width:n,height:r}},yY=t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const r=e.map((e=>Object.assign(xY({image:t,ratio:e}),{scale:e})));return r},vY=t=>{const e=Math.min(t.width,t.height),n=[256/e,128/e].map((e=>Object.assign(xY({image:t,ratio:e}),{scale:e})));return n},bY=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},wY=t=>{const{v1:e,v2:n}=t;let r=0;for(let t=0;t<e.length;t++){const i=(e[t]^n[t])>>>0;r+=bY(i)}return r},SY=()=>{const t={seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;const r=e[t];e[t]=e[n],e[n]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}};return t},_Y=t=>{const{points:e,pointIndexes:n,centerPointIndex:r,randomizer:i}=t;let s=!1;(n.length<=8||n.length<=16)&&(s=!0);const a={};if(!s){const t=(t=>{const{points:e,pointIndexes:n,randomizer:r}=t,i=[];for(let t=0;t<n.length;t++)i.push(t);let s=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let t=0;t<128;t++){r.arrayShuffle({arr:i,sampleSize:8});let l=0;const u=[];for(let t=0;t<n.length;t++){let r=Number.MAX_SAFE_INTEGER;for(let s=0;s<8;s++){const a=n[i[s]],o=wY({v1:e[n[t]].descriptors,v2:e[a].descriptors});o<r&&(u[t]=i[s],r=o)}l+=r}o.push(u),l<s&&(s=l,a=t)}return o[a]})({points:e,pointIndexes:n,randomizer:i});for(let e=0;e<t.length;e++)void 0===a[n[t[e]]]&&(a[n[t[e]]]=[]),a[n[t[e]]].push(n[e])}1===Object.keys(a).length&&(s=!0);const o={centerPointIndex:r};if(s){o.leaf=!0,o.pointIndexes=[];for(let t=0;t<n.length;t++)o.pointIndexes.push(n[t]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach((t=>{o.children.push(_Y({points:e,pointIndexes:a[t],centerPointIndex:+t,randomizer:i}))})),o},kY=({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=SY();return{rootNode:_Y({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}},IY=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},MY=(t,e,n)=>t*e+(1-t)*n,TY=class{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!(this.initialized&&this.tPrev&&this.dxPrev&&this.xPrev))return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map((()=>0)),this.tPrev=t,e;const{xPrev:n,tPrev:r,dxPrev:i}=this,s=t-r,a=IY(s,this.dCutOff),o=[],l=[],u=[];for(let t=0;t<e.length;t++){o[t]=(e[t]-n[t])/s,l[t]=MY(a,o[t],i[t]);const r=this.minCutOff+this.beta*Math.abs(l[t]),c=IY(s,r);u[t]=MY(c,e[t],n[t])}return this.xPrev=u,this.dxPrev=l,this.tPrev=t,u}};function CY(){return mY()('(()=>{"use strict";class t{constructor(t=[],r=e){if(this.data=t,this.length=this.data.length,this.compare=r,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,o=e[t];for(;t>0;){const s=t-1>>1,n=e[s];if(r(o,n)>=0)break;e[t]=n,t=s}e[t]=o}_down(t){const{data:e,compare:r}=this,o=this.length>>1,s=e[t];for(;t<o;){let o=1+(t<<1),n=e[o];const i=o+1;if(i<this.length&&r(e[i],n)<0&&(o=i,n=e[i]),r(n,s)>=0)break;e[t]=n,t=o}e[t]=s}}function e(t,e){return t<e?-1:t>e?1:0}const r=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},o=t=>{const{v1:e,v2:o}=t;let s=0;for(let t=0;t<e.length;t++){const n=(e[t]^o[t])>>>0;s+=r(n)}return s},s=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:o,scaleOneOverLogK:s})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*o+c,y:u[2]*r+u[3]*o+f,angle:n,scale:Math.log(i)*s}},n=t=>{const{keywidth:e,keyheight:r,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(e,r),g=Math.floor(e/2),w=Math.floor(r/2),p=[];for(const t of i){const e=t.querypoint.scale,r=t.keypoint.scale;if(0==r){console.error("ERROR divide zero");continue}const o=e/r;p.push(o*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],S=[],v={};for(const[t,e]of i.entries()){const{keypoint:r,querypoint:o}=e,{x:n,y:i,scale:m,angle:p}=s({querypoint:o,keypoint:r,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(n<l||n>=h||i<a||i>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}const d=y*(n-l)/(h-l),k=M*(i-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),T=10*(m- -1)/2;S[t]={binX:d,binY:k,binAngle:R,binScale:T};const I=Math.floor(d-.5),q=Math.floor(k-.5),N=Math.floor(T-.5),C=(Math.floor(R-.5)+c)%c;if(I<0||I+1>=y||q<0||q+1>=M||N<0||N+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){const e=I+t;for(let t=0;t<2;t++){const r=q+t;for(let t=0;t<2;t++){const o=(C+t)%c;for(let t=0;t<2;t++){const s=e+r*y+o*b+(N+t)*x;void 0===v[s]&&(v[s]=0),v[s]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(v).forEach((t=>{const e=+t;v[e]>k&&(k=v[e],R=e)})),k<3)return[];const T=Math.floor(R%x%b%y),I=Math.floor((R-T)%x%b/y),q=Math.floor((R-T-I*y)%x/b),N=Math.floor((R-T-I*y-q*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=S[t];if(Math.abs(e.binX-(T+.5))>=1)continue;if(Math.abs(e.binY-(I+.5))>=1)continue;if(Math.abs(e.binScale-(N+.5))>=1)continue;const r=Math.abs(e.binAngle-(q+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C},i=()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;const o=e[t];e[t]=e[r],e[r]=o}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}}),h=(t,e)=>[t[0]-e[0],t[1]-e[1]],l=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)},u=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),a=(t,e)=>{const r=(t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],o=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*o})(t);if(Math.abs(r)<=e)return null;const o=1/r;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},c=(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8];return[(e[0]*t[0]+e[1]*t[1]+e[2])/r,(e[3]*t[0]+e[4]*t[1]+e[5])/r]},f=Object.prototype.toString;function m(t){return f.call(t).endsWith("Array]")}function g(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]>i&&(i=t[h]);return i}function w(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]<i&&(i=t[h]);return i}function p(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!m(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=w(t),s=g(t);if(o===s)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var n=r.min,i=void 0===n?r.autoMinMax?o:0:n,h=r.max,l=void 0===h?r.autoMinMax?s:1:h;if(i>=l)throw new RangeError("min option must be smaller than max option");for(var u=(l-i)/(s-o),a=0;a<t.length;a++)e[a]=(t[a]-o)*u+i;return e}const d=" ".repeat(2),y=" ".repeat(4);function M(t,e={}){const{maxRows:r=15,maxColumns:o=10,maxNumSize:s=8,padMinus:n="auto"}=e;return`${t.constructor.name} {\\n${d}[\\n${y}${function(t,e,r,o,s){const{rows:n,columns:i}=t,h=Math.min(n,e),l=Math.min(i,r),u=[];if("auto"===s){s=!1;t:for(let e=0;e<h;e++)for(let r=0;r<l;r++)if(t.get(e,r)<0){s=!0;break t}}for(let e=0;e<h;e++){let r=[];for(let n=0;n<l;n++)r.push(b(t.get(e,n),o,s));u.push(`${r.join(" ")}`)}return l!==i&&(u[u.length-1]+=` ... ${i-r} more columns`),h!==n&&u.push(`... ${n-e} more rows`),u.join(`\\n${y}`)}(t,r,o,s,n)}\\n${d}]\\n${d}rows: ${t.rows}\\n${d}columns: ${t.columns}\\n}`}function b(t,e,r){return(t>=0&&r?` ${x(t,e-1)}`:x(t,e)).padEnd(e)}function x(t,e){let r=t.toString();if(r.length<=e)return r;let o=t.toFixed(e);if(o.length>e&&(o=t.toFixed(Math.max(0,e-(o.length-e)))),o.length<=e&&!o.startsWith("0.000")&&!o.startsWith("-0.000"))return o;let s=t.toExponential(e);return s.length>e&&(s=t.toExponential(Math.max(0,e-(s.length-e)))),s.slice(0)}function E(t,e,r){let o=r?t.rows:t.rows-1;if(e<0||e>o)throw new RangeError("Row index out of range")}function S(t,e,r){let o=r?t.columns:t.columns-1;if(e<0||e>o)throw new RangeError("Column index out of range")}function v(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function k(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function R(t,e,r,o,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(I("startRow",e),I("endRow",r),I("startColumn",o),I("endColumn",s),e>r||o>s||e<0||e>=t.rows||r<0||r>=t.rows||o<0||o>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function T(t,e=0){let r=[];for(let o=0;o<t;o++)r.push(e);return r}function I(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function q(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class N{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let o=new A(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)o.set(s,t,r[s*e+t]);return o}static rowVector(t){let e=new A(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new A(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new A(t,e)}static ones(t,e){return new A(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:o=Math.random}=r;let s=new A(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)s.set(r,t,o());return s}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:o=0,max:s=1e3,random:n=Math.random}=r;if(!Number.isInteger(o))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(o>=s)throw new RangeError("min must be smaller than max");let i=s-o,h=new A(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=o+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let o=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<o;t++)s.set(t,t,r);return s}static diag(t,e,r){let o=t.length;void 0===e&&(e=o),void 0===r&&(r=e);let s=Math.min(o,e,r),n=this.zeros(e,r);for(let e=0;e<s;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new A(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new this(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return s}static checkMatrix(t){return N.isMatrix(t)?t:new A(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);t++}return o}isReducedEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(o=!1);t++}return o}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let o=e;for(let s=e;s<t.rows;s++)t.get(s,r)>t.get(o,r)&&(o=s);if(0===t.get(o,r))r++;else{t.swapRows(e,o);let s=t.get(e,r);for(let o=r;o<t.columns;o++)t.set(e,o,t.get(e,o)/s);for(let o=e+1;o<t.rows;o++){let s=t.get(o,r)/t.get(e,r);t.set(o,r,0);for(let n=r+1;n<t.columns;n++)t.set(o,n,t.get(o,n)-t.get(e,n)*s)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,o=r-1;for(;o>=0;)if(0===t.maxRow(o))o--;else{let s=0,n=!1;for(;s<r&&!1===n;)1===t.get(o,s)?n=!0:s++;for(let r=0;r<o;r++){let n=t.get(r,s);for(let i=s;i<e;i++){let e=t.get(r,i)-n*t.get(o,i);t.set(r,i,e)}}o--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let o=new A(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)o.setSubMatrix(this,this.rows*t,this.columns*e);return o}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){E(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return A.rowVector(this.getRow(t))}setRow(t,e){E(this,t),e=v(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){E(this,t),E(this,e);for(let r=0;r<this.columns;r++){let o=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,o)}return this}getColumn(t){S(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return A.columnVector(this.getColumn(t))}setColumn(t,e){S(this,t),e=k(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){S(this,t),S(this,e);for(let r=0;r<this.rows;r++){let o=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,o)}return this}addRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){E(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){S(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){q(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)>t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){q(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)<t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}maxRow(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){E(this,t),q(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)>e&&(e=this.get(t,o),r[1]=o);return r}minRow(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){E(this,t),q(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)<e&&(e=this.get(t,o),r[1]=o);return r}maxColumn(t){if(S(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){S(this,t),q(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)>e&&(e=this.get(o,t),r[0]=o);return r}minColumn(t){if(S(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){S(this,t),q(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)<e&&(e=this.get(o,t),r[0]=o);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){N.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let o=0;o<e.length;o++)r+=e[o]*t[o];return r}mmul(t){t=A.checkMatrix(t);let e=this.rows,r=this.columns,o=t.columns,s=new A(e,o),n=new Float64Array(r);for(let i=0;i<o;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let o=0;o<r;o++)e+=this.get(t,o)*n[o];s.set(t,i,e)}}return s}strassen2x2(t){t=A.checkMatrix(t);let e=new A(2,2);const r=this.get(0,0),o=t.get(0,0),s=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(o+u),c=(i+l)*o,f=r*(n-u),m=l*(h-o),g=(r+s)*u,w=a+m-g+(s-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(o+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=A.checkMatrix(t);let e=new A(3,3);const r=this.get(0,0),o=this.get(0,1),s=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),S=r*c,v=(-r+l+u)*(c-m+p),k=(-r+l)*(m-p),R=(l+u)*(-c+m),T=(-s+u+a)*(w+d-y),I=(s-a)*(w-y),q=s*d,N=(u+a)*(-d+y),C=(-s+i+h)*(p+d-M),P=(s-h)*(p-M),V=(i+h)*(-d+M),F=S+q+o*g,z=(r+o+s-n-i-u-a)*w+x+E+S+T+q+N,j=S+v+R+(r+o+s-i-h-l-u)*p+q+C+V,$=b+i*(-c+f+g-w-p-d+M)+x+S+q+C+P,_=b+x+E+S+h*y,D=q+C+P+V+n*m,H=S+v+k+u*(-c+m+g-w-p-d+y)+T+I+q,U=T+I+q+N+l*f,L=S+v+k+R+a*M;return e.set(0,0,F),e.set(0,1,z),e.set(0,2,j),e.set(1,0,$),e.set(1,1,_),e.set(1,2,D),e.set(2,0,H),e.set(2,1,U),e.set(2,2,L),e}mmulStrassen(t){t=A.checkMatrix(t);let e=this.clone(),r=e.rows,o=e.columns,s=t.rows,n=t.columns;function i(t,e,r){let o=t.rows,s=t.columns;if(o===e&&s===r)return t;{let o=N.zeros(e,r);return o=o.setSubMatrix(t,0,0),o}}o!==s&&console.warn(`Multiplying ${r} x ${o} and ${s} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,s),l=Math.max(o,n);return e=i(e,h,l),function t(e,r,o,s){if(o<=512||s<=512)return e.mmul(r);o%2==1&&s%2==1?(e=i(e,o+1,s+1),r=i(r,o+1,s+1)):o%2==1?(e=i(e,o+1,s),r=i(r,o+1,s)):s%2==1&&(e=i(e,o,s+1),r=i(r,o,s+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(N.add(l,g),N.add(u,w),n,h),d=t(N.add(f,g),u,n,h),y=t(l,N.sub(c,w),n,h),M=t(g,N.sub(m,u),n,h),b=t(N.add(l,a),w,n,h),x=t(N.sub(f,l),N.add(u,c),n,h),E=t(N.sub(a,g),N.add(m,w),n,h),S=N.add(p,M);S.sub(b),S.add(E);let v=N.add(y,b),k=N.add(d,M),R=N.sub(p,d);R.add(y),R.add(x);let T=N.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(v,S.rows,0),T=T.setSubMatrix(k,0,S.columns),T=T.setSubMatrix(R,S.rows,S.columns),T.subMatrix(0,o-1,0,s-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new A(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&p(s,{min:e,max:r,output:s}),o.setRow(t,s)}return o}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new A(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&p(s,{min:e,max:r,output:s}),o.setColumn(t,s)}return o}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),o=this.get(e,this.columns-1-r);this.set(e,r,o),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),o=this.get(this.rows-1-r,e);this.set(r,e,o),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=A.checkMatrix(t);let e=this.rows,r=this.columns,o=t.rows,s=t.columns,n=new A(e*o,r*s);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<o;r++)for(let h=0;h<s;h++)n.set(o*i+r,s*e+h,this.get(i,e)*t.get(r,h));return n}kroneckerSum(t){if(t=A.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,o=this.kroneckerProduct(A.eye(r,r)),s=A.eye(e,e).kroneckerProduct(t);return o.add(s)}transpose(){let t=new A(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=C){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=C){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,o){R(this,t,e,r,o);let s=new A(e-t+1,o-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=o;e++)s.set(n-t,e-r,this.get(n,e));return s}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let o=new A(t.length,r-e+1);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);o.set(s,n-e,this.get(t[s],n))}return o}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let o=new A(r-e+1,t.length);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);o.set(n-e,s,this.get(n,t[s]))}return o}setSubMatrix(t,e,r){if((t=A.checkMatrix(t)).isEmpty())return this;R(this,e,e+t.rows-1,r,r+t.columns-1);for(let o=0;o<t.rows;o++)for(let s=0;s<t.columns;s++)this.set(e+o,r+s,t.get(o,s));return this}selection(t,e){!function(t,e){if(!m(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}(this,t),function(t,e){if(!m(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}(this,e);let r=new A(t.length,e.length);for(let o=0;o<t.length;o++){let s=t[o];for(let t=0;t<e.length;t++){let n=e[t];r.set(o,t,this.get(s,n))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new A(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=T(t.rows);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]+=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]+=t.get(r,o);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e+=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=T(t.rows,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]*=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]*=t.get(r,o);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e*=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(i,e)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case"column":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(e,i)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const o=t.rows,s=t.columns,n=o*s;let i=0,h=0,l=0;for(let e=0;e<o;e++)for(let o=0;o<s;o++)l=t.get(e,o)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[r])}(this,r),this;case"column":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[o])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let o=0;for(let e=0;e<t.columns;e++)o+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let o=0;for(let e=0;e<t.rows;e++)o+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[o])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let o=0;o<t.columns;o++)for(let s=0;s<t.rows;s++)r+=Math.pow(t.get(s,o),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return M(this,t)}}function C(t,e){return t-e}N.prototype.klass="Matrix","undefined"!=typeof Symbol&&(N.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return M(this)}),N.random=N.rand,N.randomInt=N.randInt,N.diagonal=N.diag,N.prototype.diagonal=N.prototype.diag,N.identity=N.eye,N.prototype.negate=N.prototype.neg,N.prototype.tensorProduct=N.prototype.kroneckerProduct;class A extends N{constructor(t,e){if(super(),A.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!m(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let o=0;o<t;o++){if(r[o].length!==e)throw new RangeError("Inconsistent array dimensions");if(!r[o].every((t=>"number"==typeof t)))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(r[o]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return E(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),E(this,t,!0),e=Float64Array.from(v(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){S(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let o=0;o<t;o++)r[o]=this.data[e][o];for(let o=t+1;o<this.columns;o++)r[o-1]=this.data[e][o];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),S(this,t,!0),e=k(this,e);for(let r=0;r<this.rows;r++){const o=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)o[s]=this.data[r][s];for(o[s++]=e[r];s<this.columns+1;s++)o[s]=this.data[r][s-1];this.data[r]=o}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(N,A);class P extends N{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}class V{constructor(t){let e,r,o,s,n,i,h,l,u,a=(t=P.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,o=0;o<u;o++)n+=a.get(e,o)*l[o];l[e]-=n,a.set(e,r,l[e])}for(s=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[s])&&(s=e);if(s!==r){for(o=0;o<f;o++)i=a.get(s,o),a.set(s,o,a.get(r,o)),a.set(r,o,i);h=m[s],m[s]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=A.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,o,s,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(s=0;s<h;s++)for(r=s+1;r<h;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s));for(s=h-1;s>=0;s--){for(o=0;o<n;o++)i.set(s,o,i.get(s,o)/e.get(s,s));for(r=0;r<s;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let o=0;o<r;o++)e*=t.get(o,o);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new A(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s>e?o.set(s,e,t.get(s,e)):s===e?o.set(s,e,1):o.set(s,e,0);return o}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new A(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s<=e?o.set(s,e,t.get(s,e)):o.set(s,e,0);return o}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function F(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class z{constructor(t){let e,r,o,s,n=(t=P.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(o=0;o<h;o++){let t=0;for(e=o;e<i;e++)t=F(t,n.get(e,o));if(0!==t){for(n.get(o,o)<0&&(t=-t),e=o;e<i;e++)n.set(e,o,n.get(e,o)/t);for(n.set(o,o,n.get(o,o)+1),r=o+1;r<h;r++){for(s=0,e=o;e<i;e++)s+=n.get(e,o)*n.get(e,r);for(s=-s/n.get(o,o),e=o;e<i;e++)n.set(e,r,n.get(e,r)+s*n.get(e,o))}}l[o]=-t}this.QR=n,this.Rdiag=l}solve(t){t=A.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let o,s,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(s=0;s<h;s++){for(i=0,o=n;o<r;o++)i+=e.get(o,n)*l.get(o,s);for(i=-i/e.get(n,n),o=n;o<r;o++)l.set(o,s,l.get(o,s)+i*e.get(o,n))}for(n=u-1;n>=0;n--){for(s=0;s<h;s++)l.set(n,s,l.get(n,s)/this.Rdiag[n]);for(o=0;o<n;o++)for(s=0;s<h;s++)l.set(o,s,l.get(o,s)-l.get(n,s)*e.get(o,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,o=r.columns,s=new A(o,o);for(t=0;t<o;t++)for(e=0;e<o;e++)t<e?s.set(t,e,r.get(t,e)):t===e?s.set(t,e,this.Rdiag[t]):s.set(t,e,0);return s}get orthogonalMatrix(){let t,e,r,o,s=this.QR,n=s.rows,i=s.columns,h=new A(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==s.get(r,r)){for(o=0,t=r;t<n;t++)o+=s.get(t,r)*h.get(t,e);for(o=-o/s.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+o*s.get(t,r))}}return h}}class j{constructor(t,e={}){if((t=P.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,o=t.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(s),u=Boolean(n),a=!1;if(r<o)if(i){h=t.transpose(),r=h.rows,o=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,o),f=Math.min(r+1,o),m=new Float64Array(f),g=new A(r,c),w=new A(o,o),p=new Float64Array(o),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,o),b=Math.max(0,Math.min(o-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=F(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<o;e++){if(t<M&&0!==m[t]){let o=0;for(let s=t;s<r;s++)o+=h.get(s,t)*h.get(s,e);o=-o/h.get(t,t);for(let s=t;s<r;s++)h.set(s,e,h.get(s,e)+o*h.get(s,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<o;e++)p[t]=F(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<o;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<o;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<o;e++){let o=-p[e]/p[t+1];for(let s=t+1;s<r;s++)h.set(s,e,h.get(s,e)+o*d[s])}}if(u)for(let e=t+1;e<o;e++)w.set(e,t,p[e])}}let E=Math.min(o,r+1);if(M<o&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let o=0;for(let s=t;s<r;s++)o+=g.get(s,t)*g.get(s,e);o=-o/g.get(t,t);for(let s=t;s<r;s++)g.set(s,e,g.get(s,e)+o*g.get(s,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=o-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<o;e++){let r=0;for(let s=t+1;s<o;s++)r+=w.get(s,t)*w.get(s,e);r=-r/w.get(t+1,t);for(let s=t+1;s<o;s++)w.set(s,e,w.get(s,e)+r*w.get(s,t))}for(let e=0;e<o;e++)w.set(e,t,0);w.set(t,t,1)}let S=E-1,v=0,k=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+k*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=k*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let s=F(m[r],e),n=m[r]/s,i=e/s;if(m[r]=s,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<o;t++)s=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,s)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let o=t;o<E;o++){let s=F(m[o],e),n=m[o]/s,i=e/s;if(m[o]=s,e=-i*p[o],p[o]=n*p[o],l)for(let e=0;e<r;e++)s=n*g.get(e,o)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,o)+n*g.get(e,t-1)),g.set(e,o,s)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),s=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+s)*(n-s)+i*i)/2,f=s*i*(s*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+s)*(h-s)+d,M=h*a;for(let e=t;e<E-1;e++){let s=F(y,M);0===s&&(s=Number.MIN_VALUE);let n=y/s,i=M/s;if(e!==t&&(p[e-1]=s),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<o;t++)s=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,s);if(s=F(y,M),0===s&&(s=Number.MIN_VALUE),n=y/s,i=M/s,m[e]=s,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)s=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,s)}p[E-2]=y,v+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=S;e++)w.set(e,t,-w.get(e,t));for(;t<S&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<o-1)for(let r=0;r<o;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let o=0;o<r;o++)e=g.get(o,t+1),g.set(o,t+1,g.get(o,t)),g.set(o,t,e);t++}v=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=o,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,o=this.s.length,s=A.zeros(o,o);for(let t=0;t<o;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(s),l=i.rows,u=n.rows,a=A.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let s=0;s<o;s++)r+=h.get(t,s)*n.get(e,s);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(A.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,o=t.columns,s=new A(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<o;r++)Math.abs(this.s[r])>e&&s.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new A(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let o=0;o<h;o++)r+=s.get(t,o)*n.get(e,o);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let o=0,s=r.length;o<s;o++)r[o]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return A.diag(this.s)}}function $(t,e=!1){return t=P.checkMatrix(t),e?new j(t).inverse():function(t,e,r=!1){return t=P.checkMatrix(t),e=P.checkMatrix(e),r?new j(t).solve(e):t.isSquare()?new V(t).solve(e):new z(t).solve(e)}(t,A.eye(t.rows))}const _=t=>{let e=0,r=0;for(const o of t)e+=o[0],r+=o[1];const o=e/t.length,s=r/t.length;let n=0;for(const e of t){const t=e[0]-o,r=e[1]-s;n+=Math.sqrt(t*t+r*r)}const i=Math.sqrt(2)*t.length/n,h=[];for(const e of t)h.push([(e[0]-o)*i,(e[1]-s)*i]);return{normPoints:h,param:{meanX:o,meanY:s,s:i}}},D=(t,e)=>{const{normPoints:r,param:o}=_(t),{normPoints:s,param:n}=_(e),i=s.length,h=[],l=[];for(let t=0;t<i;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*s[t][0],-r[t][1]*s[t][0]],o=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*s[t][1],-r[t][1]*s[t][1]];h.push(e),h.push(o),l.push([s[t][0]]),l.push([s[t][1]])}try{const t=new A(h),e=new A(l),r=t.transpose(),s=r.mmul(t),i=r.mmul(e),u=((t,e,r)=>{const o=r.s*r.meanX,s=r.s*r.meanY,n=[t[0]+o*t[6],t[1]+o*t[7],(t[0]+o*t[6])*-e.meanX+(t[1]+o*t[7])*-e.meanY+(t[2]+o)/e.s,t[3]+s*t[6],t[4]+s*t[7],(t[3]+s*t[6])*-e.meanX+(t[4]+s*t[7])*-e.meanY+(t[5]+s)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})($(s).mmul(i).to1DArray(),o,n);return u}catch(t){return null}},H=({H:t,testPoints:e,keyframe:r})=>{const o=a(t,1e-5);if(null===o)return!1;const s=[];for(const t of e)s.push(c(t,o));return!(((t,e,r,o)=>{const s=h(e,t),n=h(r,t),i=h(o,t),u=h(e,r),a=h(o,r),c=l(s,n),f=l(n,i),m=l(s,i),g=l(u,a);return Math.min(c,f,m,g)})(s[0],s[1],s[2],s[3])<r.width*r.height*1e-4||!((t,e,r,o)=>{const s=u(t,e,r)<=0;return u(e,r,o)<=0===s&&u(r,o,t)<=0===s&&u(o,t,e)<=0===s})(s[0],s[1],s[2],s[3]))},U=({inH:t})=>{const e=1/t[8],r=[];for(let o=0;o<8;o++)r[o]=t[o]*e;return r[8]=1,r},L=({H:t,srcPoint:e,dstPoint:r,oneOverScaleSqr:o})=>{const s=c(e,t),n=[s[0]-r[0],s[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*o)},X=({H:t,testPoints:e})=>{const r=[];for(const[o,s]of e.entries())r[o]=c(s,t);for(let t=0;t<e.length;t++){const a=t,c=(t+1)%e.length,f=(t+2)%e.length;if(o=e[a],s=e[c],n=e[f],i=r[a],h=r[c],l=r[f],u(o,s,n)>0!=u(i,h,l)>0)return!1}var o,s,n,i,h,l;return!0},O=t=>{const{dstPoints:e,keyframe:r,srcPoints:o,quickMode:s}=t,n=[[0,0],[r.width,0],[r.width,r.height],[0,r.height]];if(o.length<4)return null;const h=Math.min(10,o.length),l=i(),a=o.map(((t,e)=>e));l.arrayShuffle({arr:a,sampleSize:a.length});const c=s?10:20,f=2*c;let m=0;const g=[];for(;m<f&&g.length<c;){if(m+=1,l.arrayShuffle({arr:a,sampleSize:4}),w=o[a[0]],p=o[a[1]],d=o[a[2]],y=o[a[3]],M=e[a[0]],b=e[a[1]],x=e[a[2]],E=e[a[3]],u(w,p,d)>0!=u(M,b,x)>0||u(p,d,y)>0!=u(b,x,E)>0||u(d,y,w)>0!=u(x,E,M)>0||u(y,w,p)>0!=u(E,M,b)>0)continue;const t=D([o[a[0]],o[a[1]],o[a[2]],o[a[3]]],[e[a[0]],e[a[1]],e[a[2]],e[a[3]]]);null!==t&&X({H:t,testPoints:n})&&g.push(t)}var w,p,d,y,M,b,x,E;if(0===g.length)return null;const S=[];for(const t of g)S.push({H:t,cost:0});let v=h;for(let t=0;t<o.length&&S.length>2;t+=v){v=Math.min(h,o.length-t);const r=t+v;for(let s=0;s<S.length;s++)for(let n=t;n<r;n++){const t=L({H:S[s].H,srcPoint:o[n],dstPoint:e[n],oneOverScaleSqr:1e4});S[s].cost+=t}S.sort(((t,e)=>t.cost-e.cost)),S.splice(-Math.floor((S.length+1)/2))}let k=null;for(let t=0;t<S.length;t++){const e=U({inH:S[t].H});if(H({H:e,testPoints:n,keyframe:r})){k=e;break}}return k},Y=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(const e of t.pointIndexes)n.push(e);return}const h=[];for(const s of t.children){const t=s.centerPointIndex;if(null==t)continue;const n=o({v1:e[t].descriptors,v2:r.descriptors});h.push(n)}const l=Math.min(Number.MAX_SAFE_INTEGER,...h);for(const[e,r]of t.children.entries())h[e]!==l&&s.push({node:r,d:h[e]});for(const[o,u]of t.children.entries())h[o]===l&&Y({node:u,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const t=s.pop();if(t){const{node:o}=t;Y({node:o,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}}},G=t=>{const{H:e,matches:r,threshold:o}=t,s=o**2,n=[];for(const t of r){const{querypoint:r,keypoint:o}=t,i=c([o.x,o.y],e);(i[0]-r.x)*(i[0]-r.x)+(i[1]-r.y)*(i[1]-r.y)<=s&&n.push(t)}return n},W=e=>{const{keyframe:r,querypoints:s,querywidth:i,queryheight:h,debugMode:l}=e,u={},f=(e=>{const{keyframe:r,querypoints:s}=e,n=[];for(const e of s){const s=e.maxima?r.maximaPoints:r.minimaPoints;if(0===s.length)continue;const i=e.maxima?r.maximaPointsCluster.rootNode:r.minimaPointsCluster.rootNode,h=[],l=new t([],((t,e)=>t.d-e.d));Y({node:i,keypoints:s,querypoint:e,queue:l,keypointIndexes:h,numPop:0});let u=-1,a=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let t=0;t<h.length;t++){const r=s[h[t]],n=o({v1:r.descriptors,v2:e.descriptors});n<a?(c=a,a=n,u=h[t]):n<c&&(c=n)}-1!==u&&(c===Number.MAX_SAFE_INTEGER||1*a/c<.7)&&n.push({querypoint:e,keypoint:s[u]})}return n})({keyframe:r,querypoints:s});if(l&&(u.matches=f),f.length<6)return{debugExtra:u};const m=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:f});l&&(u.houghMatches=m);const g=O({srcPoints:m.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:m.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===g)return{debugExtra:u};const w=G({H:g,matches:m,threshold:3});if(l&&(u.inlierMatches=w),w.length<6)return{debugExtra:u};const p=a(g,1e-5);if(!p)return{debugExtra:u};const d=(t=>{const{keyframe:e,querypoints:r,HInv:s}=t,n=[];for(const t of r){const r=c([t.x,t.y],s);let i=-1,h=Number.MAX_SAFE_INTEGER,l=Number.MAX_SAFE_INTEGER;const u=t.maxima?e.maximaPoints:e.minimaPoints;for(const[e,s]of u.entries()){if((s.x-r[0])**2+(s.y-r[1])**2>100)continue;const n=o({v1:s.descriptors,v2:t.descriptors});n<h?(l=h,h=n,i=e):n<l&&(l=n)}-1!==i&&(l===Number.MAX_SAFE_INTEGER||1*h/l<.7)&&n.push({querypoint:t,keypoint:u[i]})}return n})({keyframe:r,querypoints:s,HInv:p});l&&(u.matches2=d);const y=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:d});l&&(u.houghMatches2=y);const M=O({srcPoints:y.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:y.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===M)return{debugExtra:u};const b=G({H:M,matches:y,threshold:3});return l&&(u.inlierMatches2=b),{H:M,matches:b,debugExtra:u}},Q=(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],J=(t,e,r,o=0)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]}),K=(t,e,r,o=0)=>{const s=J(t,e,r,o),{x:n,y:i,z:h}=s;return{x:n/h,y:i/h}},B=[[],[],[]],Z=[[],[]],tt=[[],[],[]],et=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o,inlierProb:s})=>{const n=s<1;let i=t,h=0,l=0;const u=new Array(r.length),a=new Array(r.length),c=new Array(r.length),f=new Array(r.length);for(let t=0;t<=10;t++){const m=Q(e,i);for(let t=0;t<r.length;t++){const e=K(m,r[t].x,r[t].y,r[t].z),s=o[t].x-e.x,n=o[t].y-e.y;c[t]=s,f[t]=n,u[t]=s**2+n**2}let g=0;if(l=0,n){const t=Math.max(3,Math.floor(r.length*s)-1);for(let t=0;t<r.length;t++)a[t]=u[t];a.sort(((t,e)=>t-e)),g=Math.max(4*a[t],16);for(let t=0;t<r.length;t++)a[t]>g?l+=g/6:l+=g/6*(1-(1-a[t]/g)*(1-a[t]/g)*(1-a[t]/g))}else l=u.reduce(((t,e)=>t+e),0);if(l/=r.length,l<.1)break;if(t>0&&l/h>.99)break;if(10===t)break;h=l;const w=[],p=[];for(let t=0;t<r.length;t++){if(n&&u[t]>g)continue;const o=st({modelViewProjectionTransform:m,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-u[t]/g)*(1-u[t]/g);for(let t=0;t<2;t++)for(let r=0;r<6;r++)o[t][r]*=e;w.push([c[t]*e]),w.push([f[t]*e])}else w.push([c[t]]),w.push([f[t]]);for(let t=0;t<o.length;t++)p.push(o[t])}const d=ot({dU:w,J_U_S:p});if(null===d)break;i=rt({modelViewTransform:i,dS:d})}return{modelViewTransform:i,err:l}},rt=({modelViewTransform:t,dS:e})=>{let r,o,s,n=e[0]**2+e[1]**2+e[2]**2;n<1e-6?(r=1,o=0,s=0,n=0):(n=Math.sqrt(n),r=e[0]/n,o=e[1]/n,s=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;B[0][0]=r*r*l+i,B[0][1]=r*o*l-s*h,B[0][2]=r*s*l+o*h,B[0][3]=e[3],B[1][0]=o*r*l+s*h,B[1][1]=o*o*l+i,B[1][2]=o*s*l-r*h,B[1][3]=e[4],B[2][0]=s*r*l-o*h,B[2][1]=s*o*l+r*h,B[2][2]=s*s*l+i,B[2][3]=e[5];const u=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)u[e][r]=t[e][0]*B[0][r]+t[e][1]*B[1][r]+t[e][2]*B[2][r];u[e][3]+=t[e][3]}return u},ot=({dU:t,J_U_S:e})=>{const r=new A(e),o=new A(t),s=r.transpose(),n=s.mmul(r),i=s.mmul(o);let h;try{h=$(n)}catch(t){return null}return h.mmul(i).to1DArray()},st=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:o})=>{const s=e,{x:n,y:i,z:h}=o,l=J(t,n,i,h),u=l.z*l.z;Z[0][0]=r[0][0]*l.z/u,Z[0][1]=r[0][1]*l.z/u,Z[0][2]=(r[0][2]*l.z-r[2][2]*l.x)/u,Z[1][0]=r[1][0]*l.z/u,Z[1][1]=r[1][1]*l.z/u,Z[1][2]=(r[1][2]*l.z-r[2][2]*l.y)/u,tt[0][0]=s[0][2]*i,tt[0][1]=-s[0][2]*n,tt[0][2]=s[0][1]*n-s[0][0]*i,tt[0][3]=s[0][0],tt[0][4]=s[0][1],tt[0][5]=s[0][2],tt[1][0]=s[1][2]*i,tt[1][1]=-s[1][2]*n,tt[1][2]=s[1][1]*n-s[1][0]*i,tt[1][3]=s[1][0],tt[1][4]=s[1][1],tt[1][5]=s[1][2],tt[2][0]=s[2][2]*i,tt[2][1]=-s[2][2]*n,tt[2][2]=s[2][1]*n-s[2][0]*i,tt[2][3]=s[2][0],tt[2][4]=s[2][1],tt[2][5]=s[2][2];const a=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){a[t][e]=0;for(let r=0;r<3;r++)a[t][e]+=Z[t][r]*tt[r][e]}return a};let nt,it,ht=[],lt=!1;onmessage=t=>{const{data:e}=t;switch(e.type){case"setup":(t=>{ht=t.matchingDataList,lt=t.debugMode,nt=new class{queryWidth;queryHeight;debugMode;constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){const r={frames:[]};let o=null;for(const[s,n]of t.entries()){const t=W({keyframe:n,querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});if(!t)continue;const{H:i,matches:h,debugExtra:l}=t;r.frames.push(l),i&&(null===o||(o?.matches?.length??0<h.length))&&(o={keyframeIndex:s,matches:h,H:i})}if(null===o||!o.matches)return{keyframeIndex:-1,debugExtra:r};const s=[],n=[],i=t[o.keyframeIndex];for(const t of o.matches){const e=t.querypoint,r=t.keypoint;s.push({x:e.x,y:e.y}),n.push({x:(r.x+.5)/i.scale,y:(r.y+.5)/i.scale,z:0})}return{keyframeIndex:o.keyframeIndex,screenCoords:s,worldCoords:n,debugExtra:r}}}(t.inputWidth,t.inputHeight,lt),it=new class{projectionTransform;constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return(t=>{const{projectionTransform:e,screenCoords:r,worldCoords:o}=t,s=D(o.map((t=>[t.x,t.y])),r.map((t=>[t.x,t.y])));if(!s)return null;const n=new A([[s[0],s[1],s[2]],[s[3],s[4],s[5]],[s[6],s[7],s[8]]]),i=$(new A(e)).mmul(n).to1DArray(),h=Math.sqrt(i[0]*i[0]+i[3]*i[3]+i[6]*i[6]),l=Math.sqrt(i[1]*i[1]+i[4]*i[4]+i[7]*i[7]),u=(h+l)/2,a=[];a[0]=i[0]/h,a[3]=i[3]/h,a[6]=i[6]/h,a[1]=i[1]/l,a[4]=i[4]/l,a[7]=i[7]/l,a[2]=a[3]*a[7]-a[6]*a[4],a[5]=a[6]*a[1]-a[0]*a[7],a[8]=a[0]*a[4]-a[1]*a[3];const c=Math.sqrt(a[2]*a[2]+a[5]*a[5]+a[8]*a[8]);a[2]/=c,a[5]/=c,a[8]/=c;const f=[];return f[0]=i[2]/u,f[1]=i[5]/u,f[2]=i[8]/u,[[a[0],a[1],a[2],f[0]],[a[3],a[4],a[5],f[1]],[a[6],a[7],a[8],f[2]]]})({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return(({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o})=>{const s=r.reduce(((t,e)=>t+e.x),0)/r.length,n=r.reduce(((t,e)=>t+e.y),0)/r.length,i=[];for(const t of r)i.push({x:t.x-s,y:t.y-n,z:t.z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*s+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*s+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*s+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(const t of l){const r=et({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:o,inlierProb:t});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*s-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*s-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*s-a[2][1]*n,a)})({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}(t.projectionTransform)})(e);break;case"match":(t=>{const e=t.targetIndexes;let r=-1,o=null,s=null;for(const n of e){const{keyframeIndex:e,screenCoords:i,worldCoords:h,debugExtra:l}=nt.matchDetection(ht[n],t.featurePoints);if(s=l,-1!==e){const t=it.estimate({screenCoords:i,worldCoords:h});t&&(r=n,o=t);break}}postMessage({type:"matchDone",targetIndex:r,modelViewTransform:o,debugExtra:s})})(e);break;case"trackUpdate":(t=>{const{modelViewTransform:e,worldCoords:r,screenCoords:o}=t,s=it.refineEstimate({initialModelViewTransform:e,screenCoords:o,worldCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})})(e)}}})();',"Worker",void 0,void 0)}const EY="updateMatrix";var AY=n(379),NY=n.n(AY),RY=n(795),DY=n.n(RY),LY=n(569),FY=n.n(LY),$Y=n(565),PY=n.n($Y),OY=n(216),zY=n.n(OY),BY=n(589),UY=n.n(BY),WY=n(485),VY={};VY.styleTagTransform=UY(),VY.setAttributes=PY(),VY.insert=FY().bind(null,"head"),VY.domAPI=DY(),VY.insertStyleElement=zY(),NY()(WY.Z,VY),WY.Z&&WY.Z.locals&&WY.Z.locals;const GY="yes",HY="hidden",jY=new Br;jY.compose(new ur,new lr,new ur(.001,.001,.001));window.MINDAR.IMAGE.MindARThree||(window.MINDAR.IMAGE.MindARThree=class{container;imageTargetSrc;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;ui;scene;cssScene;renderer;cssRenderer;camera;anchors;controller;video;postMatrixs;constructor({container:t,imageTargetSrc:e,maxTrack:n,uiLoading:r="yes",uiScanning:i="yes",uiError:s="yes",filterMinCF:a=null,filterBeta:o=null,warmupTolerance:l=null,missTolerance:u=null}){this.container=t,this.imageTargetSrc=e,this.maxTrack=n,this.filterMinCF=a,this.filterBeta=o,this.warmupTolerance=l,this.missTolerance=u,this.ui=new class{loadingModal;compatibilityModal;scanningMask;constructor({uiLoading:t,uiScanning:e,uiError:n}){this.loadingModal=t===GY?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '):document.querySelector(t),this.compatibilityModal=n===GY?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '):document.querySelector(n),this.scanningMask=e===GY?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '):document.querySelector(e),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove(HY)}hideLoading(){this.loadingModal&&this.loadingModal.classList.add(HY)}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove(HY)}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add(HY)}showScanning(){this.scanningMask&&this.scanningMask.classList.remove(HY)}hideScanning(){this.scanningMask&&this.scanningMask.classList.add(HY)}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.querySelector("a-scene").appendChild(n),n}}({uiLoading:r,uiScanning:i,uiError:s}),this.scene=new pl,this.cssScene=new pl,this.renderer=new ul({antialias:!0,alpha:!0}),this.cssRenderer=new Yp,this.renderer.outputEncoding=$e,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new ys,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo();const{srcObject:t}=this.video;t&&(t.getTracks().forEach((t=>{t.stop()})),this.video.remove())}addAnchor(t){const e=new nl;e.visible=!1,e.matrixAutoUpdate=!1;const n={group:e,targetIndex:t,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(e),n}addCSSAnchor(t){const e=new nl;e.visible=!1,e.matrixAutoUpdate=!1;const n={group:e,targetIndex:t,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(e),n}_startVideo(){return new Promise((async(t,e)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void e();try{const e=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}});this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth.toString()),this.video.setAttribute("height",this.video.videoHeight.toString()),t()})),this.video.srcObject=e}catch(t){console.log("getUserMedia error",t),e()}}))}_startAR(){return new Promise((async t=>{this.controller=new class{inputWidth;inputHeight;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;cropDetector;inputLoader;markerDimensions;onUpdate;debugMode;processingVideo;interestedTargetIndex;projectionTransform;projectionMatrix;worker;workerMatchDone;workerTrackDone;trackingStates;tracker;constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:i=1,warmupTolerance:s=null,missTolerance:a=null,filterMinCF:o=null,filterBeta:l=null}){this.inputHeight=e,this.inputWidth=t,this.maxTrack=i,this.filterMinCF=EK(o)?.001:o,this.filterBeta=EK(l)?1e3:l,this.warmupTolerance=EK(s)?5:s,this.missTolerance=EK(a)?5:a,this.cropDetector=new class{width;height;debugMode;cropSize;lastRandomIndex;detector;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n,this.cropSize=this._getCropSize(t,e),this.detector=new NK(t,e,n),this.lastRandomIndex=4}_getCropSize(t,e){const n=Math.min(t,e)/2;return Math.pow(2,Math.round(Math.log(n)/Math.log(2)))}async detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=await this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return i<0&&(i=0),r<0&&(r=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,i,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:s}=this.detector.detect(r);return i.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(s.projectedImage=r.arraySync()),r.dispose(),{featurePoints:i,debugExtra:s}}}(this.inputWidth,this.inputHeight,r),this.inputLoader=new class{width;height;texShape;context;program;tempPixelHandle;constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const r=Db();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=gB.PIXELS}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=Db();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===Bf().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=Db().compileAndRun(t,e);return Tb().makeTensorFromTensorInfo(n)}}(this.inputWidth,this.inputHeight),this.markerDimensions=[],this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,c=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new CY,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{switch(t.data.type){case"matchDone":this.workerMatchDone?.(t.data);break;case"trackUpdateDone":this.workerTrackDone?.(t.data)}}}showTFStats(){console.log(Cb().numTensors),console.table(Cb())}addImageTargets(t){return new Promise((async e=>{const n=await fetch(t),r=await n.arrayBuffer();e(this.addImageTargetsFromBuffer(r))}))}addImageTargetsFromBuffer(t){const e=(new class{data;constructor(){this.data=[]}compileImageTargets(t,e){return new Promise((async n=>{const r=[];for(const e of t){const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=new Uint8Array(e.width*e.height);for(let t=0;t<s.length;t++){const e=4*t;s[t]=Math.floor((i.data[e]+i.data[e+1]+i.data[e+2])/3)}r.push({data:s,width:e.width,height:e.height})}const i=50/r.length;let s=0;this.data=[];for(let t=0;t<r.length;t++){const n=r[t],a=yY(n),o=i/a.length,l={targetImage:n,imageList:a,matchingData:await this._extractMatchingFeatures(a,(()=>{s+=o,e(s)}))};this.data.push(l)}for(const[t,e]of r.entries()){const n=vY(e);this.data[t].trackingImageList=n}const a=await new Promise((t=>{const n=new gY;n.onmessage=n=>{switch(n.data.type){case"progress":e(50+n.data.percent);break;case"compileDone":t(n.data.list)}},n.postMessage({type:"compile",targetImages:r})}));for(const[t,e]of a.entries())this.data[t].trackingData=e;n(this.data)}))}exportData(){const t=[];for(const e of this.data)t.push({targetImage:{width:e.targetImage.width,height:e.targetImage.height},trackingData:e.trackingData,matchingData:e.matchingData});const e=function(t,e){return void 0===e&&(e=tY),new QK(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat).encodeSharedRef(t)}({v:2,dataList:t});return e}importData(t){const e=function(t,e){return void 0===e&&(e=pY),new dY(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decode(t)}(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(const t of n)this.data.push({targetImage:t.targetImage,trackingData:t.trackingData,matchingData:t.matchingData});return this.data}async _extractMatchingFeatures(t,e){const n=[];for(const[r,i]of t.entries()){const t=new NK(i.width,i.height);await ok(),Eb((()=>{const s=mv(i.data,[i.data.length],"float32").reshape([i.height,i.width]),{featurePoints:a}=t.detect(s),o=a.filter((t=>t.maxima)),l=a.filter((t=>!t.maxima)),u=kY({points:o}),c=kY({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:i.width,height:i.height,scale:i.scale}),e(r)}))}return n}}).importData(t),n=[],r=[],i=[];for(const t of e)r.push(t.matchingData),n.push(t.trackingData),i.push([t.targetImage.width,t.targetImage.height]);return this.tracker=new class{projectionTransform;trackingKeyframeList;debugMode;kernelCaches;featurePointsListT;imagePixelsListT;imagePropertiesListT;constructor(t,e,n,r,i,s=!1){this.projectionTransform=n,this.debugMode=s,this.trackingKeyframeList=e.map((t=>t[0]));const a=Math.max(...this.trackingKeyframeList.map((({points:t})=>t.length)));this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(const[t,e]of this.trackingKeyframeList.entries()){const{featurePoints:n,imagePixels:r,imageProperties:i}=this._prebuild(e,a);this.featurePointsListT[t]=n,this.imagePixelsListT[t]=r,this.imagePropertiesListT[t]=i}this.kernelCaches={}}dummyRun(t){const e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const i=(a=e,[[(s=this.projectionTransform)[0][0]*a[0][0]+s[0][2]*a[2][0],s[0][0]*a[0][1]+s[0][2]*a[2][1],s[0][0]*a[0][2]+s[0][2]*a[2][2],s[0][0]*a[0][3]+s[0][2]*a[2][3]],[s[1][1]*a[1][0]+s[1][2]*a[2][0],s[1][1]*a[1][1]+s[1][2]*a[2][1],s[1][1]*a[1][2]+s[1][2]*a[2][2],s[1][1]*a[1][3]+s[1][2]*a[2][3]],[a[2][0],a[2][1],a[2][2],a[2][3]]]);var s,a;const o=this._buildAdjustedModelViewTransform(i),l=this.featurePointsListT[n],u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,t,n),{matchingPointsT:d,simT:p}=this._computeMatching(l,u,c,h),f=d.arraySync(),m=p.arraySync(),g=this.trackingKeyframeList[n],x=[],y=[],v=[];for(const[t,e]of f.entries())if(m[t]>.8&&t<g.points.length){v.push(t);const n=fK(i,e[0],e[1]);y.push(n),x.push({x:g.points[t].x/g.scale,y:g.points[t].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:f,trackedPoints:y,goodTrack:v}),o.dispose(),h.dispose(),d.dispose(),p.dispose(),{worldCoords:x,screenCoords:y,debugExtra:r}}_prebuild(t,e){return Eb((()=>{const n=t.scale,r=[];for(let i=0;i<e;i++)i<t.points.length?r.push([t.points[i].x/n,t.points[i].y/n]):r.push([-1,-1]);const i=mv(t.data,[t.width*t.height]),s=mv([t.width,t.height,t.scale],[3]);return{featurePoints:mv(r,[r.length,2],"float32"),imagePixels:i,imageProperties:s}}))}_computeMatching(t,e,n,r){const i=r.shape[0],s=r.shape[1],a=t.shape[0];return this.kernelCaches.computeMatching||(this.kernelCaches.computeMatching=((t,e,n,r,i,s,a,o)=>[mK(6,13,n,r,i,s,a,o),gK(n,r,i,o),xK(o)])(0,0,10,1,21,i,s,a)),Eb((()=>{const i=this.kernelCaches.computeMatching,s=this._compileAndRun(i[0],[t,e,n,r]),a=s.argMax(1);return{matchingPointsT:this._compileAndRun(i[1],[t,n,a]),simT:this._compileAndRun(i[2],[s,a])}}))}_computeProjection(t,e,n){const r=this.trackingKeyframeList[n].width,i=this.trackingKeyframeList[n].height,s=this.trackingKeyframeList[n].scale,a=r+"-"+i+"-"+s;return this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),this.kernelCaches.computeProjection[a]||(this.kernelCaches.computeProjection[a]=((t,e,n)=>({variableNames:["M","pixel"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${n});\n\t      float x = float(coords[1]) / float(${n});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`}))(i,r,s)),Eb((()=>{const n=this.kernelCaches.computeProjection[a];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return Eb((()=>mv(t.map((t=>t.map((t=>t/1e3)))),[3,4])))}_compileAndRun(t,e){const n=Db().compileAndRun(t,e);return Tb().makeTensorFromTensorInfo(n)}}(i,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=i,{dimensions:i,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:i}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:i}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:i}=await this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:i})}_glProjectionMatrix(t){const{projectionTransform:e,width:n,height:r,near:i,far:s}=t,a=[[2*e[0][0]/n,0,-(2*e[0][2]/n-1),0],[0,2*e[1][1]/r,-(2*e[1][2]/r-1),0],[0,0,-(s+i)/(s-i),-2*s*i/(s-i)],[0,0,-1,0]],o=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)o.push(a[e][t]);return o}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}async _matchImageTarget(t,e){if(t>=this.maxTrack)return;const n=[];for(const[t,e]of this.trackingStates.entries())e.isTracking||-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||n.push(t);const{targetIndex:r,modelViewTransform:i}=await this._detectAndMatch(e,n);-1!==r&&(this.trackingStates[r].isTracking=!0,this.trackingStates[r].currentModelViewTransform=i)}async _updateTrackingState(t,e){const n=this.trackingStates[e];if(!n.isTracking||!n.currentModelViewTransform)return;const r=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null!==r?n.currentModelViewTransform=r:n.isTracking=!1}_showAfterWarmup(t){const e=this.trackingStates[t];!e.showing&&e.isTracking&&(e.trackMiss=0,e.trackCount++,e.trackCount<=this.warmupTolerance||(e.showing=!0,e.trackingMatrix=null,e.filter.reset()))}_hideAfterMiss(t){const e=this.trackingStates[t];e.showing&&(e.isTracking?e.trackMiss=0:(e.trackCount=0,e.trackMiss++,e.trackMiss<this.missTolerance||(e.showing=!1,e.trackingMatrix=null,this.onUpdate?.({type:EY,targetIndex:t,worldMatrix:null}))))}_onTrackShow(t){const e=this.trackingStates[t];if(!e.showing||!e.currentModelViewTransform)return;const n=this._glModelViewMatrix(e.currentModelViewTransform,t);e.trackingMatrix=e.filter.filter(Date.now(),n),this.onUpdate?.({type:EY,worldMatrix:AK(e.trackingMatrix),targetIndex:t})}async _doVideoProcessing(t){for(;this.processingVideo;){const e=this.inputLoader.loadInput(t),n=this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0);await this._matchImageTarget(n,e);for(const[t]of this.trackingStates.entries())await this._updateTrackingState(e,t),this._showAfterWarmup(t),this._hideAfterMiss(t),this._onTrackShow(t);e.dispose(),this.onUpdate?.({type:"processDone"}),await ok()}}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.maxTrack;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new TY({minCutOff:this.filterMinCF,beta:this.filterBeta})});this._doVideoProcessing(t)}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async _workerMatch(t,e){return new Promise((async n=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}async track(t,e,n){const r=this.inputLoader.loadInput(t),i=this.tracker.track(r,e,n);return r.dispose(),i}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}async _workerTrackUpdate(t,e){return new Promise((async n=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:r,screenCoords:i}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,screenCoords:i,worldCoords:r})}))}}({inputWidth:this.video.videoWidth,inputHeight:this.video.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:t=>{if(t.type===EY){const{targetIndex:e,worldMatrix:n}=t;for(let t=0;t<this.anchors.length;t++)if(this.anchors[t].targetIndex===e){if(this.anchors[t].css?this.anchors[t].group.children.forEach((t=>{t.element.style.visibility=n?"visible":"hidden"})):this.anchors[t].group.visible=!!n,n){const r=new Br;r.elements=[...n],r.multiply(this.postMatrixs[e]),this.anchors[t].css&&r.multiply(jY),this.anchors[t].group.matrix=r}this.anchors[t].visible&&!n&&(this.anchors[t].visible=!1,this.anchors[t].onTargetLost?.()),!this.anchors[t].visible&&n&&(this.anchors[t].visible=!0,this.anchors[t].onTargetFound?.()),n&&this.ui.hideScanning()}}}}),this.resize();const{dimensions:e}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let t=0;t<e.length;t++){const n=new ur,r=new lr,i=new ur,[s,a]=e[t];n.x=s/2,n.y=s/2+(a-s)/2,i.x=s,i.y=s,i.z=s;const o=new Br;o.compose(n,r,i),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),t()}))}resize(){const{renderer:t,cssRenderer:e,camera:n,container:r,video:i,controller:s}=this;if(!i||!s)return;let a,o;const l=i.videoWidth/i.videoHeight;l>r.clientWidth/r.clientHeight?(o=r.clientHeight,a=o*l):(a=r.clientWidth,o=a/l);const u=s.getProjectionMatrix(),c=2*Math.atan(1/u[5]/o*r.clientHeight)*180/Math.PI,h=u[14]/(u[10]-1),d=u[14]/(u[10]+1);n.fov=c,n.near=h,n.far=d,n.aspect=r.clientWidth/r.clientHeight,n.updateProjectionMatrix(),i.style.top=-(o-r.clientHeight)/2+"px",i.style.left=-(a-r.clientWidth)/2+"px",i.style.width=a+"px",i.style.height=o+"px";const p=t.domElement,f=e.domElement;p.style.position="absolute",p.style.left="0",p.style.top="0",p.style.width=r.clientWidth+"px",p.style.height=r.clientHeight+"px",f.style.position="absolute",f.style.left="0",f.style.top="0",f.style.width=r.clientWidth+"px",f.style.height=r.clientHeight+"px",t.setSize(r.clientWidth,r.clientHeight),e.setSize(r.clientWidth,r.clientHeight)}}),window.MINDAR.IMAGE.THREE||(window.MINDAR.IMAGE.THREE=t)})()})();