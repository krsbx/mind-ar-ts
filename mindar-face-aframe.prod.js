(()=>{"use strict";const t="mindar-face-system",e="mindar-face-default-face-occluder",i="camera",s="mesh",n="arError",a=t=>null==t;AFRAME.registerComponent("mindar-face",{dependencies:[t],el:null,schema:{autoStart:{type:"boolean",default:!0},faceOccluder:{type:"boolean",default:!0},uiLoading:{type:"string",default:"yes"},uiScanning:{type:"string",default:"yes"},uiError:{type:"string",default:"yes"},filterMinCF:{type:"number",default:-1},filterBeta:{type:"number",default:-1},shouldFaceUser:{type:"boolean",default:!0},_positionSettings:{type:"string",default:"absolute"},_positionZIndex:{type:"int",default:-2}},init:function(){if(!this.el.sceneEl)return;const t=this.el.sceneEl.systems["mindar-face-system"];if(this.data.faceOccluder){const t=document.createElement("a-entity");t.setAttribute(e,!0),this.el.sceneEl.appendChild(t)}t.setup({uiLoading:this.data.uiLoading,uiScanning:this.data.uiScanning,uiError:this.data.uiError,filterMinCF:-1===this.data.filterMinCF?null:this.data.filterMinCF,filterBeta:-1===this.data.filterBeta?null:this.data.filterBeta,shouldFaceUser:this.data.shouldFaceUser,_positionSettings:this.data._positionSettings,_positionZIndex:this.data._positionZIndex}),this.data.autoStart&&this.el.sceneEl.addEventListener("renderstart",(()=>{t.start()}))}}),AFRAME.registerComponent(e,{el:null,init:function(){this.el.sceneEl&&(this.el.sceneEl.systems["mindar-face-system"].registerFaceMesh(this),this.el.object3D.matrixAutoUpdate=!1)},updateVisibility(t){this.el.object3D.visible=t},updateMatrix(t){t&&this.el.object3D.matrix.set(...t)},addFaceMesh(t){const e=new AFRAME.THREE.MeshBasicMaterial({colorWrite:!1}),i=new AFRAME.THREE.Mesh(t,e);this.el.setObject3D(s,i)}}),AFRAME.registerComponent("mindar-face-occluder",{el:null,init:function(){this.el.addEventListener("model-loaded",this.onModelLoaded.bind(this)),this.el.addEventListener("model-error",this.onModelError.bind(this))},onModelLoaded:function(){this.el.getObject3D(s).traverse((t=>{if(t.isMesh){const e=new AFRAME.THREE.MeshStandardMaterial({colorWrite:!1});t.material=e}}))},onModelError:function(){console.warn("Model failed to load.")}}),AFRAME.registerComponent("mindar-face-target",{dependencies:[t],el:null,schema:{anchorIndex:{type:"number"}},init:function(){if(!this.el.sceneEl)return;this.el.sceneEl.systems["mindar-face-system"].registerAnchor(this,this.data.anchorIndex);const t=this.el.object3D;t.visible=!1,t.matrixAutoUpdate=!1},updateVisibility(t){this.el.object3D.visible=t},updateMatrix(t){t&&this.el.object3D.matrix.set(...t)}});const{Controller:o,UI:r}=window.MINDAR.FACE;AFRAME.registerSystem(t,{container:null,video:null,anchorEntities:[],faceMeshEntities:[],filterMinCF:-1/0,filterBeta:1/0,controller:null,ui:null,el:null,shouldFaceUser:!0,lastHasFace:!1,_positionSettings:"absolute",_positionZIndex:-2,init:function(){this.anchorEntities=[],this.faceMeshEntities=[]},setup:function({uiLoading:t,uiScanning:e,uiError:i,filterMinCF:s,filterBeta:n,shouldFaceUser:o,_positionSettings:l,_positionZIndex:h}){this.ui=new r({uiLoading:t,uiScanning:e,uiError:i}),this.filterMinCF=s,this.filterBeta=n,this.shouldFaceUser=o,a(l)||(this._positionSettings=l),a(h)||(this._positionZIndex=h)},registerFaceMesh:function(t){this.faceMeshEntities.push({el:t})},registerAnchor:function(t,e){this.anchorEntities.push({el:t,targetIndex:e})},start:function(){this.el.sceneEl&&this.el.sceneEl.parentNode&&(this.container=this.el.sceneEl.parentNode,this.ui.showLoading(),this._startVideo())},stop:function(){if(this.pause(),!this.video)return;const{srcObject:t}=this.video;t&&(t.getTracks().forEach((function(t){t.stop()})),this.video.remove())},switchCamera:function(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()},pause:function(t=!1){t||this.video.pause(),this.controller.stopProcessVideo()},unpause:function(){this.video.play(),this.controller.processVideo(this.video)},_startVideo:async function(){if(this.video=document.createElement("video"),this.video.id="mindar-video",this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position=this._positionSettings,this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex=`${this._positionZIndex}`,this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.el.emit(n,{error:"VIDEO_FAIL"}),void this.ui.showCompatibility();try{const t=(await navigator.mediaDevices.enumerateDevices()).filter((t=>"videoinput"===t.kind));let e="environment";t.length>1&&(e=this.shouldFaceUser?"user":"environment");const i=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:e}});this.video.addEventListener("loadedmetadata",(async()=>{this.video.setAttribute("width",this.video.videoWidth.toString()),this.video.setAttribute("height",this.video.videoHeight.toString()),await this._setupAR(),this._processVideo(),this.ui.hideLoading()})),this.video.srcObject=i}catch(t){console.log("getUserMedia error",t),this.el.emit(n,{error:"VIDEO_FAIL"})}},_processVideo:function(){this.controller.onUpdate=({hasFace:t,estimateResult:e})=>{if(t&&!this.lastHasFace&&this.el.emit("face-targetFound"),!t&&this.lastHasFace&&this.el.emit("face-targetLost"),this.lastHasFace=!!t,t&&e){const{faceMatrix:t}=e;for(let t=0;t<this.anchorEntities.length;t++){const e=this.controller.getLandmarkMatrix(this.anchorEntities[t].targetIndex);this.anchorEntities[t].el.updateVisibility(!0),this.anchorEntities[t].el.updateMatrix(e)}for(let e=0;e<this.faceMeshEntities.length;e++)this.faceMeshEntities[e].el.updateVisibility(!0),this.faceMeshEntities[e].el.updateMatrix(t)}else{for(let t=0;t<this.anchorEntities.length;t++)this.anchorEntities[t].el.updateVisibility(!1);for(let t=0;t<this.faceMeshEntities.length;t++)this.faceMeshEntities[t].el.updateVisibility(!1)}},this.controller.processVideo(this.video)},_setupAR:async function(){this.controller=new o({filterMinCF:this.filterMinCF,filterBeta:this.filterBeta}),this._resize(),await this.controller.setup(this.video),await this.controller.dummyRun(this.video);const{fov:t,aspect:e,near:s,far:n}=this.controller.getCameraParams(),a=new AFRAME.THREE.PerspectiveCamera;a.fov=t,a.aspect=e,a.near=s,a.far=n,a.updateProjectionMatrix();const r=this.container.getElementsByTagName("a-camera")[0];r.setObject3D(i,a),r.setAttribute(i,"active",!0);for(let t=0;t<this.faceMeshEntities.length;t++)this.faceMeshEntities[t].el.addFaceMesh(this.controller.createThreeFaceGeometry());this._resize(),window.addEventListener("resize",this._resize.bind(this)),this.el.emit("arReady")},_resize:function(){((t,e)=>{let i,s;const n=t.videoWidth/t.videoHeight;n>e.clientWidth/e.clientHeight?(s=e.clientHeight,i=s*n):(i=e.clientWidth,s=i/n),t.style.top=-(s-e.clientHeight)/2+"px",t.style.left=-(i-e.clientWidth)/2+"px",t.style.width=i+"px",t.style.height=s+"px"})(this.video,this.container);const t=this.container.getElementsByTagName("a-scene")[0];t.style.top=this.video.style.top,t.style.left=this.video.style.left,t.style.width=this.video.style.width,t.style.height=this.video.style.height}})})();