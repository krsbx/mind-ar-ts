/*! For license information please see mindar-image.prod.js.LICENSE.txt */
(()=>{var t={485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var s=n(81),r=n.n(s),i=n(645),a=n.n(i)()(r());a.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0)}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const o=a},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",s=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),s&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),s&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,s,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(s)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(a[l]=!0)}for(var u=0;u<t.length;u++){var h=[].concat(t[u]);s&&a[h[0]]||(void 0!==i&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=i),n&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=n):h[2]=n),r&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=r):h[4]="".concat(r)),e.push(h))}},e}},81:t=>{"use strict";t.exports=function(t){return t[1]}},720:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function s(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},i={};function a(t,e){var n,s,a;return e?(a=0<=(t>>>=0)&&t<256)&&(s=i[t])?s:(n=l(t,(0|t)<0?-1:0,!0),a&&(i[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(s=r[t])?s:(n=l(t,t<0?-1:0,!1),a&&(r[t]=n),n)}function o(t,e){if(isNaN(t))return e?b:g;if(e){if(t<0)return b;if(t>=p)return k}else{if(t<=-f)return I;if(t+1>=f)return v}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,s){return new n(t,e,s)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function h(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return h(t.substring(1),e,n).neg();for(var r=o(u(n,8)),i=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(c))}else i=(i=i.mul(r)).add(o(c))}return i.unsigned=e,i}function c(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?h(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=h,n.fromValue=c;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var b=a(0,!0);n.UZERO=b;var x=a(1);n.ONE=x;var y=a(1,!0);n.UONE=y;var w=a(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=o(t),n=this.div(e),s=n.mul(e).sub(this);return n.toString(t)+s.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var r=o(u(t,6),this.unsigned),i=this,a="";;){var l=i.div(r),h=(i.sub(l.mul(r)).toInt()>>>0).toString(t);if((i=l).isZero())return h+a;for(;h.length<6;)h="0"+h;a=""+h+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(t){return s(t)||(t=c(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(s(t)||(t=c(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(t){s(t)||(t=c(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,h=0,d=0,p=0,f=0;return p+=(f+=i+(65535&t.low))>>>16,d+=(p+=r+u)>>>16,h+=(d+=n+o)>>>16,h+=e+a,l((p&=65535)<<16|(f&=65535),(h&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(t){return s(t)||(t=c(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(s(t)||(t=c(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,i=this.low>>>16,a=65535&this.low,u=t.high>>>16,h=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,b=0,x=0,y=0;return x+=(y+=a*p)>>>16,b+=(x+=i*p)>>>16,x&=65535,b+=(x+=a*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=i*d)>>>16,b&=65535,f+=(b+=a*h)>>>16,f+=n*p+r*d+i*h+a*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(s(t)||(t=c(t)),t.isZero())throw Error("division by zero");var n,r,i;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return b;if(t.gt(this.shru(1)))return y;i=b}else{if(this.eq(I))return t.eq(x)||t.eq(w)?I:t.eq(I)?x:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?x:w:(r=this.sub(t.mul(n)),i=n.add(r.div(t)));if(t.eq(I))return this.unsigned?b:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=g}for(r=this;r.gte(t);){n=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),h=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(r);)p=(d=o(n-=h,this.unsigned)).mul(t);d.isZero()&&(d=x),i=i.add(d),r=r.sub(p)}return i},S.div=S.divide,S.modulo=function(t){return s(t)||(t=c(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(t){return s(t)||(t=c(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return s(t)||(t=c(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return s(t)||(t=c(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return s(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return s(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(s(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,s){return s?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},377:(t,e,n)=>{var s=n(832),r=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:function(t,e,n){var s;!function(r,i,a){var o,l=256,u=a.pow(l,6),h=a.pow(2,52),c=2*h,d=255;function p(t,e,n){var s=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(i)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=r.navigator,n=e&&e.plugins;return[+new Date,r,n,r.screen,x(i)]}}():t,3),s),p=new f(s),y=function(){for(var t=p.g(6),e=u,n=0;t<h;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=c;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),i),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,p),t.state=function(){return m(p,{})}),n?(a.random=t,e):t})(y,d,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(g(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(b(a.random(),i),t.exports){t.exports=p;try{o=n(42)}catch(t){}}else void 0===(s=function(){return p}.call(e,n,e,t))||(t.exports=s)}("undefined"!=typeof self?self:this,[],Math)},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,s=0;s<e.length;s++)if(e[s].identifier===t){n=s;break}return n}function s(t,s){for(var i={},a=[],o=0;o<t.length;o++){var l=t[o],u=s.base?l[0]+s.base:l[0],h=i[u]||0,c="".concat(u," ").concat(h);i[u]=h+1;var d=n(c),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=r(p,s);s.byIndex=o,e.splice(o,0,{identifier:c,updater:f,references:1})}a.push(c)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=s(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var o=n(i[a]);e[o].references--}for(var l=s(t,r),u=0;u<i.length;u++){var h=n(i[u]);0===e[h].references&&(e[h].updater(),e.splice(h,1))}i=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var s=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},477:t=>{"use strict";t.exports=function(t,e,n,s){var r=self||window;try{try{var i;try{i=new r.Blob([t])}catch(e){(i=new(r.BlobBuilder||r.WebKitBlobBuilder||r.MozBlobBuilder||r.MSBlobBuilder)).append(t),i=i.getBlob()}var a=r.URL||r.webkitURL,o=a.createObjectURL(i),l=new r[e](o,n);return a.revokeObjectURL(o),l}catch(s){return new r[e]("data:application/javascript,".concat(encodeURIComponent(t)),n)}}catch(t){if(!s)throw Error("Inline worker is not supported");return new r[e](s,n)}}},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var i=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.nc=void 0,(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>mi,computeFlatOffset:()=>$i,computeOutShape:()=>bi,getNormalizedAxes:()=>vi,isSliceContinous:()=>Ti,maskToAxes:()=>gi,parseSliceParams:()=>Ei,sliceInfo:()=>Ri,startForAxis:()=>Ci,startIndicesWithElidedDims:()=>ki,stopForAxis:()=>Ni,stopIndicesWithElidedDims:()=>Ii,stridesForAxis:()=>Si,stridesWithElidedDims:()=>xi});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>wh,computeOutShape:()=>yh,segOpComputeOptimalWindowSize:()=>xh});var s={};n.r(s),n.d(s,{ERF_A1:()=>Pu,ERF_A2:()=>Bu,ERF_A3:()=>Wu,ERF_A4:()=>Uu,ERF_A5:()=>Vu,ERF_P:()=>zu,PARALLELIZE_THRESHOLD:()=>Su,RowPartitionType:()=>yu,SELU_SCALE:()=>Lu,SELU_SCALEALPHA:()=>Ou,applyActivation:()=>cl,assertAndGetBroadcastShape:()=>fi,assertAxesAreInnerMostDims:()=>ho,assertParamsConsistent:()=>bu,assignToTypedArray:()=>Xu,axesAreInnerMostDims:()=>ao,calculateShapes:()=>_u,checkEinsumDimSizes:()=>eh,checkPadOnDimRoundingMode:()=>ua,combineLocations:()=>oo,combineRaggedTensorToTensorShapes:()=>wu,complexWithEvenIndex:()=>ju,complexWithOddIndex:()=>qu,computeConv2DInfo:()=>Qi,computeConv3DInfo:()=>ta,computeDefaultPad:()=>ea,computeDilation2DInfo:()=>Yi,computeOptimalWindowSize:()=>Cu,computeOutAndReduceShapes:()=>lo,computeOutShape:()=>xu,computePool2DInfo:()=>Zi,computePool3DInfo:()=>Ji,convertConv2DDataFormat:()=>la,decodeEinsumEquation:()=>Qu,eitherStridesOrDilationsAreOne:()=>oa,expandShapeToKeepDim:()=>uo,exponent:()=>Zu,exponents:()=>Yu,fromStringArrayToUint8:()=>kh,fromUint8ToStringArray:()=>vh,getAxesPermutation:()=>co,getBroadcastDims:()=>di,getComplexWithIndex:()=>Ku,getEinsumComputePath:()=>nh,getEinsumPermutation:()=>th,getFusedBiasGradient:()=>hl,getFusedDyActivation:()=>ul,getImageCenter:()=>Nu,getInnerMostAxes:()=>fo,getPermuted:()=>$u,getRaggedRank:()=>ku,getReductionAxes:()=>pi,getReshaped:()=>Tu,getReshapedPermuted:()=>Eu,getRowPartitionTypesHelper:()=>vu,getSliceBeginCoords:()=>Ru,getSliceSize:()=>Au,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ah,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>oh,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>lh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ch,getSparseReshapeInputOutputMismatchErrorMessage:()=>ph,getSparseReshapeInputOutputMultipleErrorMessage:()=>dh,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>uh,getSparseReshapeNegativeOutputDimErrorMessage:()=>hh,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>bh,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>fh,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>mh,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>gh,getUndoAxesPermutation:()=>po,isIdentityPermutation:()=>sh,log:()=>is,mergeRealAndImagArrays:()=>Gu,prepareAndValidate:()=>Fu,prepareSplitSize:()=>ih,segment_util:()=>e,shouldFuse:()=>dl,slice_util:()=>t,splitRealAndImagArrays:()=>Hu,tupleValuesAreOne:()=>aa,upcastType:()=>tr,validateDefaultValueShape:()=>Iu,validateInput:()=>Du,validateUpdateShape:()=>Mu,warn:()=>rs});var r={};n.r(r),n.d(r,{addImpl:()=>Py,bincountImpl:()=>Aw,bincountReduceImpl:()=>Fw,castImpl:()=>Dy,ceilImpl:()=>_w,concatImpl:()=>Ww,equalImpl:()=>Sv,expImpl:()=>_v,expm1Impl:()=>Bv,floorImpl:()=>sk,gatherNdImpl:()=>ck,gatherV2Impl:()=>pk,greaterEqualImpl:()=>xk,greaterImpl:()=>mk,lessEqualImpl:()=>Ak,lessImpl:()=>$k,linSpaceImpl:()=>Dk,logImpl:()=>Ok,maxImpl:()=>Zk,maximumImpl:()=>tI,minimumImpl:()=>hI,multiplyImpl:()=>gv,negImpl:()=>wI,notEqualImpl:()=>$I,prodImpl:()=>WI,raggedGatherImpl:()=>GI,raggedTensorToTensorImpl:()=>YI,rangeImpl:()=>JI,rsqrtImpl:()=>hS,scatterImpl:()=>pS,sigmoidImpl:()=>Cy,simpleAbsImpl:()=>Ky,sliceImpl:()=>Tw,sparseFillEmptyRowsImpl:()=>MS,sparseReshapeImpl:()=>_S,sparseSegmentReductionImpl:()=>LS,sqrtImpl:()=>US,squaredDifferenceImpl:()=>jS,stridedSliceImpl:()=>ZS,stringNGramsImpl:()=>tC,stringSplitImpl:()=>sC,stringToHashBucketFastImpl:()=>iC,subImpl:()=>jv,tileImpl:()=>hC,topKImpl:()=>pC,transposeImpl:()=>ew,uniqueImpl:()=>yC});class i{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{refCount(t){return o("refCount")}incRef(t){return o("incRef")}timerAvailable(){return!0}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}readToGPU(t,e){return o("readToGPU")}numDataIds(){return o("numDataIds")}disposeData(t,e){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,s,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,c(t,e,n)}function u(t,e,n){return Math.max(t,Math.min(e,n))}function h(t){return t%2==0?t:t+1}function c(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function d(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function p(t,e,n=""){d(b(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function f(t){d(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function m(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||$(t)&&!n)for(let s=0;s<t.length;++s)m(t[s],e,n);else e.push(t);return e}function g(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function b(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function x(t){return t%1==0}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function v(t,e=(t=>0),n,s=setTimeout){return new Promise(((r,i)=>{let a=0;const o=()=>{if(t())return void r();a++;const l=e(a);null!=n&&a>=n?i():s(o,l)};o()}))}function k(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function I(t,e){const n=e.length;return d((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),d(t.every((t=>x(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function S(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||r?null:I(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function C(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function T(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function $(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function R(t){return"string"==typeof t||t instanceof String}function A(t){return"number"==typeof t}function F(t){return Array.isArray(t)?F(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":A(t)?"float32":R(t)?"string":"boolean"==typeof t?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function D(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function _(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function O(t,e,n,s=!1){const r=new Array;if(1===e.length){const i=e[0]*(s?2:1);for(let e=0;e<i;e++)r[e]=n[t+e]}else{const i=e[0],a=e.slice(1),o=a.reduce(((t,e)=>t*e))*(s?2:1);for(let e=0;e<i;e++)r[e]=O(t+e*o,a,n,s)}return r}function L(t,e,n=!1){if(0===t.length)return e[0];const s=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===s)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return O(0,t,e,n)}function z(t,e){const n=P(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function P(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function B(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return L(t,new Float32Array(n));if("int32"===e)return L(t,new Int32Array(n));if("bool"===e)return L(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function W(t){t.forEach((e=>{d(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function U(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function V(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}function G(t){return t&&t.then&&"function"==typeof t.then}class H{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=j,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(G(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function j(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function q(){return X}let K,X=null;function Y(){if(null==K){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}K=t}return K}function Z(t,e){const n=function(){const t=Y();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const J="Abs",Q="Acos",tt="Acosh",et="Add",nt="AddN",st="All",rt="Any",it="ArgMax",at="ArgMin",ot="Asin",lt="Asinh",ut="Atan",ht="Atanh",ct="Atan2",dt="AvgPool",pt="AvgPoolGrad",ft="AvgPool3D",mt="AvgPool3DGrad",gt="BatchMatMul",bt="BatchToSpaceND",xt="Bincount",yt="BroadcastArgs",wt="Cast",vt="Ceil",kt="ClipByValue",It="Complex",St="ComplexAbs",Ct="Concat",Nt="Conv2D",Tt="Conv2DBackpropFilter",$t="Conv2DBackpropInput",Et="Conv3D",Rt="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",Ft="Cos",Mt="Cosh",Dt="Cumprod",_t="Cumsum",Ot="CropAndResize",Lt="DenseBincount",zt="DepthToSpace",Pt="DepthwiseConv2dNative",Bt="DepthwiseConv2dNativeBackpropFilter",Wt="DepthwiseConv2dNativeBackpropInput",Ut="Diag",Vt="Dilation2D",Gt="Dilation2DBackpropInput",Ht="Dilation2DBackpropFilter",jt="RealDiv",qt="Einsum",Kt="Elu",Xt="EluGrad",Yt="Erf",Zt="Equal",Jt="Exp",Qt="ExpandDims",te="Expm1",ee="FFT",ne="Fill",se="FlipLeftRight",re="Floor",ie="FloorDiv",ae="FusedBatchNorm",oe="GatherV2",le="GatherNd",ue="Greater",he="GreaterEqual",ce="Identity",de="IFFT",pe="Imag",fe="IsFinite",me="IsInf",ge="IsNan",be="LeakyRelu",xe="Less",ye="LessEqual",we="LinSpace",ve="Log",ke="Log1p",Ie="LogicalAnd",Se="LogicalNot",Ce="LogicalOr",Ne="LRN",Te="LRNGrad",$e="Max",Ee="Maximum",Re="MaxPool",Ae="MaxPoolGrad",Fe="MaxPool3D",Me="MaxPool3DGrad",De="MaxPoolWithArgmax",_e="Mean",Oe="Min",Le="Minimum",ze="MirrorPad",Pe="Mod",Be="Multinomial",We="Multiply",Ue="Neg",Ve="NotEqual",Ge="NonMaxSuppressionV3",He="NonMaxSuppressionV4",je="NonMaxSuppressionV5",qe="OnesLike",Ke="OneHot",Xe="Pack",Ye="PadV2",Ze="Pow",Je="Prelu",Qe="Prod",tn="RaggedGather",en="RaggedTensorToTensor",nn="Range",sn="Real",rn="Reciprocal",an="Relu",on="Reshape",ln="ResizeNearestNeighbor",un="ResizeNearestNeighborGrad",hn="ResizeBilinear",cn="ResizeBilinearGrad",dn="Relu6",pn="Reverse",fn="Round",mn="Rsqrt",gn="ScatterNd",bn="SearchSorted",xn="Select",yn="Selu",wn="Slice",vn="Sin",kn="Sinh",In="Sign",Sn="Sigmoid",Cn="Softplus",Nn="Sqrt",Tn="Sum",$n="SpaceToBatchND",En="SplitV",Rn="Softmax",An="SparseFillEmptyRows",Fn="SparseReshape",Mn="SparseSegmentMean",Dn="SparseSegmentSum",_n="SparseToDense",On="SquaredDifference",Ln="Square",zn="StridedSlice",Pn="StringNGrams",Bn="StringSplit",Wn="StringToHashBucketFast",Un="Sub",Vn="Tan",Gn="Tanh",Hn="Tile",jn="TopK",qn="Transform",Kn="Transpose",Xn="Unique",Yn="Unpack",Zn="UnsortedSegmentSum",Jn="ZerosLike",Qn="Step",ts="RotateWithOffset",es="_FusedMatMul",ns="FusedConv2D",ss="FusedDepthwiseConv2D";function rs(...t){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...t)}function is(...t){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...t)}const as=Z("kernelRegistry",(()=>new Map)),os=Z("gradRegistry",(()=>new Map));function ls(t,e){const n=ps(t,e);return as.get(n)}function us(t){return os.get(t)}function hs(t){const e=as.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function cs(t){const{kernelName:e,backendName:n}=t,s=ps(e,n);as.has(s)&&rs(`The kernel '${e}' for backend '${n}' is already registered`),as.set(s,t)}function ds(t){const{kernelName:e}=t;os.has(e)&&q().getBool("DEBUG")&&rs(`Overriding the gradient for '${e}'`),os.set(e,t)}function ps(t,e){return`${e}_${t}`}var fs=n(720);const ms=n.n(fs)()||fs;function gs(t){return ms.fromString(t,!0,16)}const bs=gs("c3a5c85c97cb3127"),xs=gs("b492b66fbe98f273"),ys=gs("9ae16a3b2f90404f");function ws(t){return t.xor(t.shru(47))}function vs(t,e,n){const s=t.slice(e,e+n);return ms.fromBytes(Array.from(s),!0,!0)}function ks(t,e){return vs(t,e,8)}function Is(t,e){return vs(t,e,4)}function Ss(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Cs(t,e,n=gs("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let r=e.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Ns(t,e,n,s){return function(t,e,n,s,r,i){r=r.add(t),i=Ss(i.add(r).add(s),21);const a=r;return r=(r=r.add(e)).add(n),i=i.add(Ss(r,44)),[r.add(s),i.add(a)]}(ks(t,e),ks(t,e+8),ks(t,e+16),ks(t,e+24),n,s)}function Ts(t,e=t.length){const n=ms.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=ys.add(2*e),s=ks(t,0).add(ys),r=ks(t,e-8);return Cs(Ss(r,37).mul(n).add(s),Ss(s,25).add(r).mul(n),n)}if(e>=4){const n=ys.add(2*e);return Cs(Is(t,0).shl(3).add(e),Is(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),s=e+(t[e-1]<<2);return ws(ys.mul(n).xor(bs.mul(s))).mul(ys)}return ys}(t,e):function(t,e=t.length){const n=ys.add(2*e),s=ks(t,0).mul(xs),r=ks(t,8),i=ks(t,e-8).mul(n),a=ks(t,e-16).mul(ys);return Cs(Ss(s.add(r),43).add(Ss(i,30)).add(a),s.add(Ss(r.add(ys),18)).add(i),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=ys.add(2*e),s=ks(t,0).mul(ys),r=ks(t,8),i=ks(t,e-8).mul(n),a=ks(t,e-16).mul(ys),o=Ss(s.add(r),43).add(Ss(i,30)).add(a),l=Cs(o,s.add(Ss(r.add(ys),18)).add(i),n),u=ks(t,16).mul(n),h=ks(t,24),c=o.add(ks(t,e-32)).mul(n),d=l.add(ks(t,e-24)).mul(n);return Cs(Ss(u.add(h),43).add(Ss(c,30)).add(d),u.add(Ss(h.add(s),18)).add(c),n)}(t,e);let s=n,r=n.mul(xs).add(113),i=ws(r.mul(ys).add(113)).mul(ys),a=[ms.UZERO,ms.UZERO],o=[ms.UZERO,ms.UZERO];s=s.mul(ys).add(ks(t,0));let l=0;const u=64*(e-1>>6),h=u+(e-1&63)-63;do{s=Ss(s.add(r).add(a[0]).add(ks(t,l+8)),37).mul(xs),r=Ss(r.add(a[1]).add(ks(t,l+48)),42).mul(xs),s=s.xor(o[1]),r=r.add(a[0]).add(ks(t,l+40)),i=Ss(i.add(o[0]),33).mul(xs),a=Ns(t,l,a[1].mul(xs),s.add(o[0])),o=Ns(t,l+32,i.add(o[1]),r.add(ks(t,l+16))),[i,s]=[s,i],l+=64}while(l!==u);const c=xs.add(i.and(255).shl(1));return l=h,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=Ss(s.add(r).add(a[0]).add(ks(t,l+8)),37).mul(c),r=Ss(r.add(a[1]).add(ks(t,l+48)),42).mul(c),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(ks(t,l+40))),i=Ss(i.add(o[0]),33).mul(c),a=Ns(t,l,a[1].mul(c),s.add(o[0])),o=Ns(t,l+32,i.add(o[1]),r.add(ks(t,l+16))),[i,s]=[s,i],Cs(Cs(a[0],o[0],c).add(ws(r).mul(bs)).add(i),Cs(a[1],o[1],c).add(s),c)}function $s(t,e){return"string"===e?As(t):Es([t],e)}function Es(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=m(t)),q().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Rs(){return q().platform.now()}function As(t,e="utf-8"){return e=e||"utf-8",q().platform.encode(t,e)}function Fs(t,e="utf-8"){return e=e||"utf-8",q().platform.decode(t,e)}class Ms{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new _s)}profileKernel(t,e,n){let s;const r=()=>{s=n()};let i;const a=Rs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const t of s)t.dataSync();i=Promise.resolve({kernelMs:Rs()-a})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{Ds(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),s,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function Ds(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class _s{logKernelProfile(t,e,n,s,r,i){const a="number"==typeof s?w(`${s}ms`,9):s.error,o=w(t,25),l=e.rank,u=e.size,h=w(e.shape.toString(),14);let c="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;c+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${h}\t%c${u}\t%c${c}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Os(t,e,n,s){const r=_(e),i=function(t,e,n,s){const r=g(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?Bs(t):t;if(o>1)for(let t=0;t<r/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Ls(l[e+t],0,n).length)}return a}(t,e,n,r),a=e.length,o=Ps(t,e,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Ls(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:R(t)?`'${t}'`:"bool"===n?zs(t):parseFloat(t.toFixed(7)).toString(),w(s,e)}function zs(t){return 0===t?"false":"true"}function Ps(t,e,n,s,r,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Ls(Bs(t)[0],0,n)]:"bool"===n?[zs(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let s=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(s=Bs(s),i=Bs(i)),["["+s.map(((t,e)=>Ls(t,r[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Ls(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Bs(t):Array.from(t)).map(((t,e)=>Ls(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),h=s.slice(1),c=s[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const s=e*c,i=s+c;d.push(...Ps(t.slice(s,i),u,n,h,r,!1))}d.push("...");for(let e=o-3;e<o;e++){const s=e*c,i=s+c;d.push(...Ps(t.slice(s,i),u,n,h,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*c,i=s+c;d.push(...Ps(t.slice(s,i),u,n,h,r,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Bs(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ws{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=g(t),null!=n){const t=n.length;d(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||N(e,this.size),this.strides=_(t)}set(t,...e){0===e.length&&(e=[0]),d(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Us().makeTensor(this.values,this.shape,this.dtype)}}let Us=null,Vs=null,Gs=null;class Hs{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=g(t),this.strides=_(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Vs.buffer(this.shape,this.dtype,t)}bufferSync(){return Vs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return L(this.shape,t,"complex64"===this.dtype)}arraySync(){return L(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Us().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Fs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Us().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Us().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Fs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Us().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Us().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Vs.print(this,t)}clone(){return this.throwIfDisposed(),Vs.clone(this)}toString(t=!1){return Os(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Vs.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Us().makeVariable(this,t,e,n)}}function js(){return Z("Tensor",(()=>Hs))}Object.defineProperty(Hs,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),js();class qs extends Hs{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!b(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Us().disposeTensor(this),this.dataId=t.dataId,Us().incRef(this,null)}dispose(){Us().disposeVariable(this),this.isDisposedInternal=!0}}var Ks,Xs,Ys,Zs,Js;Object.defineProperty(qs,Symbol.hasInstance,{value:t=>t instanceof Hs&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Ks||(Ks={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Xs||(Xs={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Ys||(Ys={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Zs||(Zs={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Js||(Js={}));const Qs={float32:Zs,int32:Xs,bool:Ys,complex64:Js};function tr(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Qs[t][e]}function er(t){return tr(t,"int32")}function nr(t,e){if(t.dtype===e.dtype)return[t,e];const n=tr(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function sr(t,e){return e.some((e=>e.id===t.id))}function rr(t){const e=[];return ir(t,e,new Set),e}function ir(t,e,n){if(null==t)return;if(t instanceof Hs)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),ir(s,e,n))}}function ar(t){return null!=t.kernelName}class or{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class lr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new or}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(rs(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ms(this.backendInstance),!0}setupRegisteredKernels(){hs(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){hs(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof a||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,rs(`Initialization of backend ${t} failed`),rs(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return rs(`Initialization of backend ${t} failed`),rs(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e),i=s.refCount(e);s.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return lr.nextTensorId++}nextVariableId(){return lr.nextVariableId++}clone(t){const e=hr.runKernel(ce,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return hr.runKernel(wt,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==ls(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-e-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ar(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ar(t)){const{kernelName:e,inputs:r,attrs:i}=t;null==this.backendName&&this.backend;const l=ls(e,this.backendName);d(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(s){const t=this.getTensorsForGradient(e,r,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,r=t=>{s&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:h}=t,c=ar(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=a()})),s&&this.addTapeNode(l,u,e,c,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=us(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(d(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>r[e]));return i.concat(a)}return[]}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&R(t[0])&&(r=t.map((t=>As(t))));const i=s.write(r,e,n),a=new Hs(e,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,s){const r={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:s,dtype:r}=t,i=new Hs(s,r,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new qs(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*E(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof qs||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*E(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=us(t);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=P(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=rr(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(d(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));d(r instanceof Hs,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){i.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in s)i[s[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=z(g(t),"float32");return hr.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[e];if(!b(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=s(e,r),e.dispose()}}}}(t,i,(t=>this.tidy(t)),cr);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return d(M(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;d(e.every((t=>t instanceof Hs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc({forwardFunc:(s,r)=>(n=t(...e,r),d(n.value instanceof Hs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d(M(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,s)=>{const r=n.gradFunc(t,s),i=Array.isArray(r)?r:[r];d(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d(i.every((t=>t instanceof Hs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Rs(),n=await this.backend.time(t);return n.wallMs=Rs()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new or;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ur(){const t=Y();if(null==t._tfengine){const e=new H(t);t._tfengine=new lr(e)}var e;return e=t._tfengine.ENV,X=e,Us=()=>t._tfengine,t._tfengine}lr.nextTensorId=0,lr.nextVariableId=0;const hr=ur();function cr(t,e){const n={a:t,b:e};return hr.runKernel(et,n)}function dr(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function pr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const fr=q();function mr(t,e){let n=t;if($(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||$(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&gr(t,s,[]),s}function gr(t,e,n){if(n=n||[],!Array.isArray(t)&&!$(t))return void d(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));d(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),d(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)gr(t[e],s,n.concat(e))}function br(t,e,n,s){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function xr(t,e,n,s="numeric"){if(t instanceof Hs)return br(s,t.dtype,e,n),t;let r=F(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),br(s,r,e,n),null==t||!$(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=mr(t,r);$(t)||Array.isArray(t)||(t=[t]);const a="string"!==r?Es(t,r):m(t,[],!0);return hr.makeTensor(a,i,r)}function yr(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>xr(t,`${e}[${r}]`,n,s)))}function wr(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{hr.startScope(n);try{const e=s(...t);return G(e)&&console.error("Cannot return a Promise inside of tidy."),hr.endScope(e),e}catch(t){throw hr.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}fr.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),fr.registerFlag("IS_BROWSER",(()=>pr())),fr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),fr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),fr.registerFlag("PROD",(()=>!1)),fr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>fr.getBool("DEBUG"))),fr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),fr.registerFlag("IS_TEST",(()=>!1)),fr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),fr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),fr.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),fr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),fr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const vr=wr({complex_:function(t,e){const n=xr(t,"real","complex"),s=xr(e,"imag","complex");p(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return hr.runKernel(It,r)}});function kr(t,e,n,s){if(null==s&&(s=F(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){W(e);const t=g(e),s=g(n);d(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==g(e.slice(t));d(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return $(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Es(t,s):m(t,[],!0),hr.makeTensor(t,e,s)}function Ir(t,e,n){return kr(t,e,mr(t,n),n)}async function Sr(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<r.length;++i){const a=r[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(i,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Cr(await Promise.all(s)),specs:n}}function Cr(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const Nr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Tr(t){return Nr?Buffer.byteLength(t):new Blob([t]).size}function $r(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function Er(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Rr(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Tr(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Tr(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Ar{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ar.instance&&(Ar.instance=new Ar),Ar.instance}static registerSaveRouter(t){Ar.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ar.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ar.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ar.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?Ar.getInstance().loadRouters:Ar.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const Fr="tensorflowjs",Mr="models_store",Dr="model_info_store";function _r(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Or(t){const e=t.result;e.createObjectStore(Mr,{keyPath:"modelPath"}),e.createObjectStore(Dr,{keyPath:"modelPath"})}class Lr{constructor(t){if(this.indexedDB=_r(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(Fr,1);s.onupgradeneeded=()=>Or(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(Mr,"readonly"),s=e.objectStore(Mr).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=Rr(e),i=r.transaction(Dr,"readwrite");let a=i.objectStore(Dr);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Mr,"readwrite");const o=l.objectStore(Mr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{a=i.objectStore(Dr);const e=a.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Lr.URL_SCHEME="indexeddb://";const zr=t=>{return q().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Lr.URL_SCHEME)?(e=t.slice(Lr.URL_SCHEME.length),new Lr(e)):null;var e};Ar.registerSaveRouter(zr),Ar.registerLoadRouter(zr);class Pr{constructor(){this.indexedDB=_r()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Fr,1);n.onupgradeneeded=()=>Or(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Dr,"readonly"),i=r.objectStore(Dr).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(s.close(),e(i.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Lr.URL_SCHEME)?e.slice(Lr.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(Fr,1);s.onupgradeneeded=()=>Or(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Dr,"readwrite"),a=i.objectStore(Dr),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=a.delete(t),i=()=>{l=r.transaction(Mr,"readwrite");const s=l.objectStore(Mr).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=i,s.onerror=t=>(i(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const Br="/",Wr="tensorflowjs_models",Ur="info",Vr="model_topology",Gr="weight_specs",Hr="weight_data",jr="model_metadata";function qr(t){return{info:[Wr,t,Ur].join(Br),topology:[Wr,t,Vr].join(Br),weightSpecs:[Wr,t,Gr].join(Br),weightData:[Wr,t,Hr].join(Br),modelMetadata:[Wr,t,jr].join(Br)}}function Kr(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Xr(t){const e=t.split(Br);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Br)}class Yr{constructor(t){if(!q().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=qr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=Rr(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Nr)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(t){throw Kr(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Nr){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Yr.URL_SCHEME="localstorage://";const Zr=t=>{return q().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Yr.URL_SCHEME)?(e=t.slice(Yr.URL_SCHEME.length),new Yr(e)):null;var e};Ar.registerSaveRouter(Zr),Ar.registerLoadRouter(Zr);class Jr{constructor(){d(q().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),d("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Wr+Br,n=Br+Ur;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[Xr(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=qr(t=(e=t).startsWith(Yr.URL_SCHEME)?e.slice(Yr.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return Kr(n),s}}class Qr{constructor(){this.managers={}}static getInstance(){return null==Qr.instance&&(Qr.instance=new Qr),Qr.instance}static registerManager(t,e){d(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),d(t.length>0,(()=>"scheme must not be an empty string."));const n=Qr.getInstance();d(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=Qr.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Qr.getInstance().managers)}}class ti{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&q().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(t,e)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new ti);try{Qr.registerManager(Yr.URL_SCHEME,new Jr)}catch(t){}try{Qr.registerManager(Lr.URL_SCHEME,new Pr)}catch(t){}}let ei;function ni(t,e="float32",n){return e=e||"float32",W(t),new Ws(t,e,n)}q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=q().global.fetch?q().global.fetch(t,e):(null==ei&&(ei=n(410)),ei(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const si=wr({cast_:function(t,e){const n=xr(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return hr.runKernel(wt,s,r)}}),ri=wr({clone_:function(t){const e={x:xr(t,"x","clone","string_or_numeric")};return hr.runKernel(ce,e)}});function ii(t){return new Promise((t=>setTimeout(t))).then(t)}ur(),Vs={buffer:ni,cast:si,clone:ri,print:function(t,e=!1){console.log(t.toString(e))}};class ai{constructor(t){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ai.URL_SCHEME)&&(t=t.slice(ai.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Er(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await ii((()=>r.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ii((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Rr(t)}}}}function oi(t,e,n,s){!function(t){d(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){d(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),d(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),d(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++r/t.length*(s-n);return e(a),i})),i))))}async function li(t,e){null==e&&(e={});const n=null==e.fetchFunc?q().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await oi(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await oi(r,e.onProgress,.5,1)}ai.URL_SCHEME="downloads://",Ar.registerSaveRouter((t=>q().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ai.URL_SCHEME)?function(t="model"){return new ai(t)}(t.slice(ai.URL_SCHEME.length)):null));class ui{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(d("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=q().platform.fetch,d(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&d(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=Er(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Rr(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(t,e){let n,s;return null!=t.weightsManifest&&([n,s]=await e(t.weightsManifest)),function(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(s.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),s}(t,n,s)}(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,i=function(t){const e=[];for(const n of t)e.push(...n.weights);return e}(t),a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(r+t+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,$r(await li(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function hi(t){return null!=t.match(ui.URL_SCHEME_REGEX)}ui.URL_SCHEME_REGEX=/^https?:\/\//;const ci=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>hi(t))):hi(t),n)return function(t,e){return new ui(t,e)}(t,e)}return null};function di(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=t[i]||1;(e[e.length-1-r]||1)>1&&1===a&&s.unshift(i)}return s}function pi(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function fi(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let i=e[e.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}function mi(t,e,n){const s=t.shape.length;d(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),d(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)d(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function gi(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function bi(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function xi(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function yi(t,e,n){return n<=t?n:n-(e-1)}function wi(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function vi(t,e,n,s,r,i,a,o,l){const u=t.length;let h=new Array(u),c=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;h=ki(a,l,u,s,t),c=Ii(o,l,u,r,t),d=xi(i,l,u,t)}else for(let e=0;e<u;e++)h[e]=Ci(a,s,i,t,e,l),c[e]=Ni(o,r,i,t,e,l),d[e]=Si(i,e,l);return{begin:h,end:c,strides:d}}function ki(t,e,n,s,r){const i=[...r],a=wi(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=0;else{const a=yi(e,n,r);let o=s[a];t&1<<a&&(o=0),i[r]=o}return i}function Ii(t,e,n,s,r){const i=[...r],a=wi(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=yi(e,n,r);let o=s[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let t=0;t<i.length;t++){const e=r[t];i[t]<0&&(i[t]+=e),i[t]=u(0,i[t],r[t])}return i}function Si(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function Ci(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=u(0,a,l-1),a}function Ni(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?u(0,a,l):u(-1,a,l-1),a}function Ti(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function $i(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function Ei(t,e,n){let s;const r=t.shape.length;let i;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{d(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(d(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,i]}function Ri(t,e,n,s,r,i,a,o,l){let u;if(null==s?(u=new Array(e.length),u.fill(1)):u=s,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const c={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<c.dims;t++)h&&0!=(1<<t&o)&&c.numAddAxisAfterEllipsis++,1<<t&a&&(h=!0);h||(c.ellipsisMask|=1<<c.dims,c.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const r=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<r;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[s]),null!=t.end&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}(c,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let e=0;e<t.length;++e){if(0===d.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<e),s=t[e];if(-1===s){g.push(n?1:-1);continue}const r=[d.beginMask&1<<e,d.endMask&1<<e],i=[d.strides[e]>0?0:-1,d.strides[e]>0?s:s-1];if(n&&d.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[e];const a=!!(d.beginMask&1<<e&&d.endMask&1<<e);if(d.beginValid&&d.endValid){if(n){const t=d.begin[e]<0?s+d.begin[e]:d.begin[e];if(d.begin[e]=t,d.end[e]=d.begin[e]+1,t<0||t>=s)throw Error(`slice index ${d.begin[e]} of dimension ${e} out of bounds.`)}else d.begin[e]=Ai(d.begin[e],0,d.strides[e],s,r,i),d.end[e]=Ai(d.end[e],1,d.strides[e],s,r,i);const t=1===d.strides[e]&&0===d.begin[e]&&d.end[e]===s;p=p&&t,f=f&&(0===e&&1===d.strides[e]||t)}else p=p&&1===d.strides[e]&&a,f=f&&(0===e&&1===d.strides[e]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[e]-d.begin[e],l=!0):n?(o=1,l=!0):a&&s>=0&&(o=d.strides[e]<0?-s:s,l=!0),l){let t;t=0===o||o<0!=d.strides[e]<0?0:Math.trunc(o/d.strides[e])+(o%d.strides[e]!=0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<d.finalShapeGatherIndices.length;++t){const e=d.finalShapeGatherIndices[t];e>=0?b.push(g[e]):-2===e&&b.push(1)}return{finalShapeSparse:b.filter(((t,e)=>-2!==d.finalShapeGatherIndices[e])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Ai(t,e,n,s,r,i){if(r[e])return n>0?i[e]:i[e+1&1];{const e=t<0?s+t:t;return e<i[0]?i[0]:e>i[1]?i[1]:e}}Ar.registerSaveRouter(ci),Ar.registerLoadRouter(ci);class Fi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Mi{constructor(){this.classNameMap={}}static getMap(){return null==Mi.instance&&(Mi.instance=new Mi),Mi.instance}static register(t){Mi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Di(t){d(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),d("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),d(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Mi.register(t)}function _i(){return hr}function Oi(){return hr.memory()}function Li(t,e){return hr.tidy(t,e)}function zi(t){rr(t).forEach((t=>t.dispose()))}function Pi(t){return hr.keep(t)}function Bi(t,e,n=1){return hr.registerBackend(t,e,n)}function Wi(){return hr.backend}function Ui(t){return hr.customGrad(t)}function Vi(t,e){if(($(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&$(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return kr(t,[],[],e)}Gs=function(t){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Gi extends Fi{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return zi(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){d(M(t),(()=>"The f passed in variableGrads(f) must be a function")),d(null==e||Array.isArray(e)&&e.every((t=>t instanceof qs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in hr.registeredVariables)e.push(hr.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;d((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=hr.gradients(t,e,null,!0);d(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),d(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&zi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Vi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Gi,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Hi=wr({abs_:function(t){const e=xr(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return hr.runKernel(St,t)}{const t={x:e};return hr.runKernel(J,t)}}}),ji=wr({add_:function(t,e){let n=xr(t,"a","add"),s=xr(e,"b","add");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(et,r)}}),qi=wr({all_:function(t,e=null,n=!1){const s={x:xr(t,"x","all","bool")},r={axis:e,keepDims:n};return hr.runKernel(st,s,r)}}),Ki=wr({any_:function(t,e=null,n=!1){const s={x:xr(t,"x","any","bool")},r={axis:e,keepDims:n};return hr.runKernel(rt,s,r)}}),Xi=wr({argMax_:function(t,e=0){const n={x:xr(t,"x","argMax")},s={axis:e};return hr.runKernel(it,n,s)}});function Yi(t,e,n,s,r="NHWC",i){return Qi(t,[...e,t[3]],n,i,s,null,null,la(r))}function Zi(t,e,n,s,r,i,a="channelsLast"){const[o,l]=na(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Qi(t,u,n,s,r,i,!1,a)}function Ji(t,e,n,s,r,i,a="NDHWC"){const[o,l,u]=sa(e);let h,c;if("NDHWC"===a)c="channelsLast",h=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);c="channelsFirst",h=[o,l,u,t[1],t[1]]}return ta(t,h,n,s,r,!1,c,i)}function Qi(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,h,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,c]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,h]=t}const[d,p,,f]=e,[m,g]=na(n),[b,x]=na(s),y=ra(d,b),w=ra(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,s,r,i,a,o,l){let u,h,c;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=ea(t,e,n));const i=t[1];return[ia((t[0]-e+2*s)/n+1,r),ia((i-e+2*s)/n+1,r)]}([e,n],i,s,t,o);h=r[0],c=r[1]}else if("same"===t){h=Math.ceil(e/s),c=Math.ceil(n/r);const t=Math.max(0,(h-1)*s+i-e),o=Math.max(0,(c-1)*r+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/s),c=Math.ceil((n-a+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},h=ia((e-i+d+p)/s+1,o),c=ia((n-a+f+m)/r+1,o)}}return{padInfo:u,outHeight:h,outWidth:c}}(r,u,h,m,g,y,w,i,o),S=a?f*c:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:c,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:t,outShape:C,filterShape:e}}function ta(t,e,n,s,r,i=!1,a="channelsLast",o){let[l,u,h,c,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,h,c,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,h,c]=t}const[p,f,m,,g]=e,[b,x,y]=sa(n),[w,v,k]=sa(s),I=ra(p,w),S=ra(f,v),C=ra(m,k),{padInfo:N,outDepth:T,outHeight:$,outWidth:E}=function(t,e,n,s,r,i,a,o,l,u,h){let c,d,p,f;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,s,r,i){null==r&&(r=ea(t,e,s));const a=t[1],o=t[2];return[ia((t[0]-e+2*r)/s+1,i),ia((a-e+2*r)/s+1,i),ia((o-e+2*r)/s+1,i),1]}([e,n,s,1],o,0,r,t,h);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const t=(d-1)*r+o-e,h=(p-1)*i+l-n,m=(f-1)*a+u-s,g=Math.floor(t/2),b=t-g,x=Math.floor(h/2),y=h-x,w=Math.floor(m/2);c={top:x,bottom:y,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-l+1)/i),f=Math.ceil((s-u+1)/a)}return{padInfo:c,outDepth:d,outHeight:p,outWidth:f}}(r,u,h,c,b,x,y,I,S,C,o),R=i?g*d:g;let A;return"channelsFirst"===a?A=[l,R,T,$,E]:"channelsLast"===a&&(A=[l,T,$,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:h,inWidth:c,inChannels:d,outDepth:T,outHeight:$,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function ea(t,e,n,s=1){const r=ra(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function na(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function sa(t){return"number"==typeof t?[t,t,t]:t}function ra(t,e){return e<=1?t:t+(t-1)*(e-1)}function ia(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function aa(t){const[e,n,s]=na(t);return 1===e&&1===n&&1===s}function oa(t,e){return aa(t)||aa(e)}function la(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function ua(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)d(x(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{d(x(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const ha=wr({reshape_:function(t,e){const n={x:xr(t,"x","reshape","string_or_numeric")},s={shape:e};return hr.runKernel(on,n,s)}}),ca=wr({avgPool_:function(t,e,n,s,r){const i=xr(t,"x","avgPool","float32");d(oa(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=ha(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),ua("avgPool",s,r);const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=hr.runKernel(dt,l,u);return h=si(h,i.dtype),o?ha(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),da=wr({avgPool3d_:function(t,e,n,s,r,i="NDHWC"){const a=xr(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=ha(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ua("avgPool3d",s,r);const u={x:o},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let c=hr.runKernel(ft,u,h);return c=si(c,o.dtype),l?ha(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),pa=wr({batchNorm_:function(t,e,n,s,r,i){null==i&&(i=.001);const a=xr(t,"x","batchNorm"),o=xr(e,"mean","batchNorm"),l=xr(n,"variance","batchNorm");let u,h;null!=r&&(u=xr(r,"scale","batchNorm")),null!=s&&(h=xr(s,"offset","batchNorm")),d(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(t){let e;return e=0===t.rank||1===t.rank?ha(t,[1,1,1,t.size]):2===t.rank?ha(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ha(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),p={x:c,scale:u,offset:h,mean:o,variance:l},f={varianceEpsilon:i},m=hr.runKernel(ae,p,f);return ha(m,a.shape)}}),fa=wr({batchNorm2d_:function(t,e,n,s,r,i){const a=xr(t,"x","batchNorm"),o=xr(e,"mean","batchNorm"),l=xr(n,"variance","batchNorm");let u,h;return null!=r&&(u=xr(r,"scale","batchNorm")),null!=s&&(h=xr(s,"offset","batchNorm")),d(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),d(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&d(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),pa(a,o,l,h,u,i)}}),ma=wr({batchNorm3d_:function(t,e,n,s,r,i){const a=xr(t,"x","batchNorm"),o=xr(e,"mean","batchNorm"),l=xr(n,"variance","batchNorm");let u,h;return null!=r&&(u=xr(r,"scale","batchNorm")),null!=s&&(h=xr(s,"offset","batchNorm")),d(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),d(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&d(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),pa(a,o,l,h,u,i)}}),ga=wr({batchNorm4d_:function(t,e,n,s,r,i){const a=xr(t,"x","batchNorm"),o=xr(e,"mean","batchNorm"),l=xr(n,"variance","batchNorm");let u,h;return null!=r&&(u=xr(r,"scale","batchNorm")),null!=s&&(h=xr(s,"offset","batchNorm")),d(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),d(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&d(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),pa(a,o,l,h,u,i)}}),ba=wr({broadcastTo_:function(t,e){let n=xr(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=ha(n,t)}const r=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return ri(n);const a={x:n},o={reps:i};return hr.runKernel(Hn,a,o)}});function xa(t,e,n){const s={shape:t,value:e,dtype:n};return hr.runKernel(ne,{},s)}const ya=wr({clipByValue_:function(t,e,n){const s=xr(t,"x","clipByValue");if(d(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`)),e===n)return xa(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:n};return hr.runKernel(kt,r,i)}}),wa=wr({concat_:function(t,e=0){d(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=yr(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return ri(n[0]);const s=n,r={axis:e};return hr.runKernel(Ct,s,r)}}),va=wr({concat1d_:function(t){return wa(t,0)}}),ka=wr({concat2d_:function(t,e){return wa(t,e)}}),Ia=wr({concat3d_:function(t,e){return wa(t,e)}}),Sa=wr({concat4d_:function(t,e){return wa(t,e)}}),Ca=wr({conv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=xr(t,"x","conv2d","float32"),l=xr(e,"filter","conv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=ha(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ua("conv2d",s,a);const c="NHWC"===r?u.shape[3]:u.shape[1];d(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),d(oa(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const p={x:u,filter:l},f={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},m=hr.runKernel(Nt,p,f);return h?ha(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Na=wr({conv1d_:function(t,e,n,s,r="NWC",i=1,a){const o=xr(t,"x","conv1d"),l=xr(e,"filter","conv1d");let u=o,h=!1;2===o.rank&&(h=!0,u=ha(o,[1,o.shape[0],o.shape[1]])),d(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),d(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ua("conv1d",s,a),d(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),d(oa(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),d("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const c=ha(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=ha(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=Ca(p,c,[1,n],s,"NHWC",[1,i],a);return ha(f,h?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Ta=wr({conv2DBackpropInput_:function(t,e,n,s,r,i="NHWC",a){d(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=ha(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),d(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),d(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),d(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?o[3]:o[1],c="NHWC"===i?l.shape[3]:l.shape[1];d(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),d(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),ua("conv2dDerInput",r,a);const p={dy:l,filter:n},f={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},m=hr.runKernel($t,p,f);return u?ha(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),$a=wr({conv2dTranspose_:function(t,e,n,s,r,i){const a=xr(t,"x","conv2dTranspose"),o=xr(e,"filter","conv2dTranspose");return Ta(n,a,o,s,r,"NHWC",i)}}),Ea=wr({conv3d_:function(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=xr(t,"x","conv3d"),o=xr(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=ha(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),d(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d(oa(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),d("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:l,filter:o},c={strides:n,pad:s,dataFormat:r,dilations:i},p=hr.runKernel(Et,h,c);return u?ha(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ra=wr({conv3DBackpropInput_:function(t,e,n,s,r){d(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=ha(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];d(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),d(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),d(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),d(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const h={dy:a,filter:n},c={pad:r,strides:s,inputShape:i},p=hr.runKernel(At,h,c);return o?ha(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Aa=wr({conv3dTranspose_:function(t,e,n,s,r){const i=xr(t,"x","conv3dTranspose"),a=xr(e,"filter","conv3dTranspose");return Ra(n,i,a,s,r)}}),Fa=wr({depthwiseConv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=xr(t,"x","depthwiseConv2d","float32"),l=xr(e,"filter","depthwiseConv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=ha(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const c="NHWC"===r?u.shape[3]:u.shape[1];d(c===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ua("depthwiseConv2d",s,a);const p={x:u,filter:l},f={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},m=hr.runKernel(Pt,p,f);return h?ha(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ma=wr({floorDiv_:function(t,e){let n=xr(t,"a","floorDiv"),s=xr(e,"b","floorDiv");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(ie,r)}}),Da=wr({div_:function(t,e){let n=xr(t,"a","div"),s=xr(e,"b","div");if([n,s]=nr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Ma(n,s);const r={a:n,b:s};return hr.runKernel(jt,r,{})}}),_a=wr({elu_:function(t){const e={x:xr(t,"x","elu","float32")};return hr.runKernel(Kt,e)}}),Oa=wr({equal_:function(t,e){let n=xr(t,"a","equal","string_or_numeric"),s=xr(e,"b","equal","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Zt,r)}}),La=wr({exp_:function(t){const e={x:xr(t,"x","exp")};return hr.runKernel(Jt,e)}}),za=wr({expandDims_:function(t,e=0){const n=xr(t,"x","expandDims","string_or_numeric");d(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:e};return hr.runKernel(Qt,s,r)}}),Pa=wr({tile_:function(t,e){const n=xr(t,"x","tile","string_or_numeric");d(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s={x:n},r={reps:e};return hr.runKernel(Hn,s,r)}}),Ba=wr({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=ni([t,e],s),i=t<=e?t:e;for(let t=0;t<i;++t)r.set(1,t,t);const a=ha(r.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Pa(za(a,0),[n[0],1,1]);if(2===n.length)return Pa(za(za(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Pa(za(za(za(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Wa=wr({floor_:function(t){const e={x:xr(t,"x","floor","float32")};return hr.runKernel(re,e)}}),Ua=wr({gather_:function(t,e,n=0,s=0){const r={x:xr(t,"x","gather"),indices:xr(e,"indices","gather","int32")},i={axis:n,batchDims:s};return hr.runKernel(oe,r,i)}}),Va=wr({greater_:function(t,e){let n=xr(t,"a","greater","string_or_numeric"),s=xr(e,"b","greater","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(ue,r)}}),Ga=wr({greaterEqual_:function(t,e){let n=xr(t,"a","greaterEqual","string_or_numeric"),s=xr(e,"b","greaterEqual","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(he,r)}}),Ha=wr({leakyRelu_:function(t,e=.2){const n={x:xr(t,"x","leakyRelu")},s={alpha:e};return hr.runKernel(be,n,s)}}),ja=wr({log_:function(t){const e={x:xr(t,"x","log","float32")};return hr.runKernel(ve,e)}}),qa=wr({log1p_:function(t){const e={x:xr(t,"x","log1p")};return hr.runKernel(ke,e)}}),Ka=wr({max_:function(t,e=null,n=!1){const s={x:xr(t,"x","max")},r={reductionIndices:e,keepDims:n};return hr.runKernel($e,s,r)}}),Xa=wr({mul_:function(t,e){let n=xr(t,"a","mul"),s=xr(e,"b","mul");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(We,r)}}),Ya=wr({sub_:function(t,e){let n=xr(t,"a","sub"),s=xr(e,"b","sub");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(Un,r)}}),Za=wr({sum_:function(t,e=null,n=!1){let s=xr(t,"x","sum");"bool"===s.dtype&&(s=si(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return hr.runKernel(Tn,r,i)}}),Ja=wr({logSoftmax_:function(t,e=-1){const n=xr(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s=Ui(((t,n)=>{const s=Ka(t,e,!0),r=Ya(t,s),i=Ya(si(r,"float32"),ja(Za(La(r),e,!0)));return n([i]),{value:i,gradFunc:(t,n)=>{const[s]=n,r=La(s);return Ya(t,Xa(Za(t,e,!0),r))}}}));return s(n)}}),Qa=wr({logicalAnd_:function(t,e){const n=xr(t,"a","logicalAnd","bool"),s=xr(e,"b","logicalAnd","bool");fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Ie,r)}}),to=wr({matMul_:function(t,e,n=!1,s=!1){let r=xr(t,"a","matMul"),i=xr(e,"b","matMul");[r,i]=nr(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return hr.runKernel(gt,a,o)}}),eo=wr({maxPool_:function(t,e,n,s,r){const i=xr(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=ha(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),d(oa(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ua("maxPool",s,r);const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=hr.runKernel(Re,l,u);return o?ha(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),no=wr({maxPool3d_:function(t,e=[1,1,1],n,s,r,i="NDHWC"){const a=xr(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=ha(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ua("maxPool3d",s,r);const u={x:o},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},c=hr.runKernel(Fe,u,h);return l?ha(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),so=wr({maximum_:function(t,e){let n=xr(t,"a","maximum"),s=xr(e,"b","maximum");[n,s]=nr(n,s),"bool"===n.dtype&&(n=si(n,"int32"),s=si(s,"int32")),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Ee,r)}}),ro=wr({mean_:function(t,e=null,n=!1){const s={x:xr(t,"x","mean")},r={axis:e,keepDims:n};return hr.runKernel(_e,s,r)}}),io=wr({minimum_:function(t,e){let n=xr(t,"a","minimum"),s=xr(e,"b","minimum");[n,s]=nr(n,s),"bool"===n.dtype&&(n=si(n,"int32"),s=si(s,"int32")),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Le,r)}});function ao(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function oo(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[i++]):r.push(e[a++]);return r}function lo(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function uo(t,e){return oo(t,e.map((t=>1)),e)}function ho(t,e,n){d(ao(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function co(t,e){if(ao(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function po(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function fo(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const mo=wr({square_:function(t){const e=xr(t,"x","square");return hr.runKernel("Square",{x:e},{})}}),go=wr({moments_:function(t,e=null,n=!1){const s=I(e,(t=xr(t,"x","moments")).shape),r=ro(t,s,n);let i=r.shape;n||(i=uo(r.shape,s));const a=mo(Ya(si(t,"float32"),ha(r,i)));return{mean:r,variance:ro(a,s,n)}}}),bo=wr({neg_:function(t){const e={x:xr(t,"x","neg")};return hr.runKernel(Ue,e)}}),xo=wr({notEqual_:function(t,e){let n=xr(t,"a","notEqual","string_or_numeric"),s=xr(e,"b","notEqual","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Ve,r)}}),yo=wr({oneHot_:function(t,e,n=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:xr(t,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:n,offValue:s};return hr.runKernel(Ke,i,a)}});function wo(t,e="float32"){if("complex64"===e){const e=wo(t,"float32"),n=wo(t,"float32");return vr(e,n)}const n=P(g(t),e);return hr.makeTensor(n,t,e)}function vo(t,e="float32"){if("complex64"===e){const e=vo(t,"float32"),n=wo(t,"float32");return vr(e,n)}const n=z(g(t),e);return hr.makeTensor(n,t,e)}const ko=wr({onesLike_:function(t){const e={x:xr(t,"x","onesLike")};return hr.runKernel(qe,e)}}),Io=wr({pad_:function(t,e,n=0){const s=xr(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return hr.runKernel(Ye,i,r)}}),So=wr({prelu_:function(t,e){const n={x:xr(t,"x","prelu"),alpha:xr(e,"alpha","prelu")};return hr.runKernel(Je,n)}});var Co=n(377);class No{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=Co.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*a,e=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class To{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Co.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const $o=wr({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new No(e,n,s,!1,r),a=ni(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Eo=wr({randomUniform_:function(t,e=0,n=1,s="float32",r){const i=ni(t,s),a=new To(e,n,null,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Ro=wr({relu_:function(t){const e={x:xr(t,"x","relu")};return hr.runKernel(an,e)}}),Ao=wr({reverse_:function(t,e){const n={x:xr(t,"x","reverse")},s={dims:e};return hr.runKernel(pn,n,s)}}),Fo=wr({selu_:function(t){const e={x:xr(t,"x","selu")};return hr.runKernel(yn,e)}}),Mo=wr({separableConv2d_:function(t,e,n,s,r,i=[1,1],a="NHWC"){const o=xr(t,"x","separableConv2d"),l=xr(e,"depthwiseFilter","separableConv2d"),u=xr(n,"pointwiseFilter","separableConv2d");let h=o,c=!1;if(3===o.rank&&(c=!0,h=ha(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),d(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),d(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),d(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],f=l.shape[3];d(u.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`));const m=Fa(h,l,s,r,a,i),g=Ca(m,u,1,"valid",a);return c?ha(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Do=wr({sigmoid_:function(t){const e={x:xr(t,"x","sigmoid","float32")};return hr.runKernel(Sn,e)}}),_o=wr({slice_:function(t,e,n){const s=xr(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:n};return hr.runKernel(wn,r,i)}}),Oo=wr({slice1d_:function(t,e,n){const s=xr(t,"x","slice1d");return d(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),_o(s,[e],[n])}}),Lo=wr({slice2d_:function(t,e,n){const s=xr(t,"x","slice2d");return d(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),_o(s,e,n)}}),zo=wr({slice3d_:function(t,e,n){const s=xr(t,"x","slice3d");return d(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),_o(s,e,n)}}),Po=wr({slice4d_:function(t,e,n){const s=xr(t,"x","slice4d");return d(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),_o(s,e,n)}}),Bo=wr({softmax_:function(t,e=-1){const n=xr(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return hr.runKernel(Rn,s,r)}}),Wo=wr({softplus_:function(t){const e={x:xr(t,"x","softplus")};return hr.runKernel(Cn,e)}}),Uo=wr({split_:function(t,e,n=0){const s={x:xr(t,"x","split")},r={numOrSizeSplits:e,axis:n};return hr.runKernel(En,s,r)}}),Vo=wr({sqrt_:function(t){const e={x:xr(t,"x","sqrt","float32")};return hr.runKernel(Nn,e)}}),Go=wr({squeeze_:function(t,e){const n=xr(t,"x","squeeze","string_or_numeric");return ha(n,S(n.shape,e).newShape)}}),Ho=wr({stack_:function(t,e=0){const n=yr(t,"tensors","stack","string_or_numeric");d(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:e};return hr.runKernel(Xe,s,r)}}),jo=wr({tanh_:function(t){const e={x:xr(t,"x","tanh","float32")};return hr.runKernel(Gn,e)}});function qo(t,e){f(t);const n=mr(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return kr(t,null,n,e)}const Ko=wr({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new No(e,n,s,!0,r),a=ni(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Xo=wr({unstack_:function(t,e=0){const n=xr(t,"x","unstack","string_or_numeric");d(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:e};return hr.runKernel(Yn,s,r)}}),Yo=wr({where_:function(t,e,n){const s=xr(e,"a","where"),r=xr(n,"b","where"),i=xr(t,"condition","where","bool"),a=fi(fi(i.shape,s.shape),r.shape),o={condition:ba(i,a),t:ba(s,a),e:ba(r,a)};return hr.runKernel(xn,o)}}),Zo=wr({zerosLike_:function(t){const e={x:xr(t,"x","zerosLike")};return hr.runKernel(Jn,e)}}),Jo=wr({imag_:function(t){const e={input:xr(t,"input","imag")};return hr.runKernel(pe,e)}}),Qo=wr({real_:function(t){const e={input:xr(t,"input","real")};return hr.runKernel(sn,e)}}),tl=wr({transpose_:function(t,e,n){const s=xr(t,"x","transpose");if(null==e&&(e=s.shape.map(((t,e)=>e)).reverse()),d(s.rank===e.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`)),e.forEach((t=>{d(t>=0&&t<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${e}`))})),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return"complex64"===s.dtype?Li((()=>{let t=Qo(s),e=Jo(s);return t=hr.runKernel(Kn,{x:t},i),e=hr.runKernel(Kn,{x:e},i),n&&(e=bo(e)),vr(t,e)})):hr.runKernel(Kn,r,i)}}),el=wr({dropout_:function(t,e,n,s){const r=xr(t,"x","dropout");if(d("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),d(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Hs?r.clone():r;const i=function(t,e){if(null==e)return t.shape.slice();if(b(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),a=1-e,o=Da(Wa(ji(Eo(i,0,1,"float32",s),a)),a);return Xa(r,o)}}),nl=wr({fft_:function(t){d("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return hr.runKernel(ee,e)}}),sl=wr({rfft_:function(t,e){d("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,r=_o(t,s,i),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=wa([t,wo(s)],t.shape.length-1),n=e}else r=t;const i=Zo(r),a=ha(vr(r,i),[s,n]),o=nl(a),l=Math.floor(n/2)+1,u=Qo(o),h=Jo(o),c=Uo(u,[l,n-l],u.shape.length-1),p=Uo(h,[l,n-l],h.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=l,ha(vr(c[0],p[0]),f)}}),rl=wr({ifft_:function(t){d("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return hr.runKernel(de,e)}}),il=wr({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=ha(t,[n,e]);s=rl(r)}else{const r=[n,2*(e-1)],i=ha(Qo(t),[n,e]),a=ha(Jo(t),[n,e]),o=Ao(_o(i,[0,1],[n,e-2]),1),l=Xa(Ao(_o(a,[0,1],[n,e-2]),1),Vi(-1)),u=wa([i,o],1),h=wa([a,l],1),c=ha(vr(u,h),[r[0],r[1]]);s=rl(c)}if(s=Qo(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=ha(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),al=wr({conv2DBackpropFilter_:function(t,e,n,s,r,i="NHWC",a){let o=t;3===t.rank&&(o=ha(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=ha(e,[1,e.shape[0],e.shape[1],e.shape[2]])),d(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),d(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),d(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];d(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),d(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),ua("conv2dDerFilter",r,a);const c={x:o,dy:l},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return hr.runKernel(Tt,c,p)}}),ol=wr({relu6_:function(t){const e={x:xr(t,"x","relu6")};return hr.runKernel(dn,e)}}),ll=wr({step_:function(t,e=0){const n={x:xr(t,"x","step")},s={alpha:e};return hr.runKernel(Qn,n,s)}});function ul(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Xa(t,ll(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function hl(t,e){let n=e;const s=pi(t.shape,e.shape);return s.length>0&&(n=Za(n,s)),ha(n,t.shape)}function cl(t,e,n,s){if("linear"===e)return t;if("relu"===e)return Ro(t);if("elu"===e)return _a(t);if("relu6"===e)return ol(t);if("prelu"===e)return So(t,n);if("leakyrelu"===e)return Ha(t,s);if("sigmoid"===e)return Do(t);throw new Error(`Unknown fused activation ${e}.`)}const dl=(t,e)=>!(t>0)||"linear"===e,pl=wr({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===dl(hr.state.gradientDepth,l)){d("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let c=Ca(t,e,n,s,r,i,a);return null!=o&&(c=ji(c,o)),cl(c,l,u,h)}const c=xr(t,"x","conv2d","float32"),p=xr(e,"filter","conv2d","float32");let f=c,m=!1;3===c.rank&&(m=!0,f=ha(c,[1,c.shape[0],c.shape[1],c.shape[2]])),d(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ua("fused conv2d",s,a);const g="NHWC"===r?f.shape[3]:f.shape[1];d(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),d(oa(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const b=Qi(f.shape,p.shape,n,i,s,a);let x,y;if(null!=o&&(x=xr(o,"bias","fused conv2d"),[x]=nr(x,c),"NHWC"===r?fi(b.outShape,x.shape):(d(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),d(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){const t=u.shape;if(d(t.length<=1||3===t.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`)),1===t.length)d(1===t[0]||t[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===t.length)try{fi(t,b.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=xr(u,"prelu weights","fused conv2d")}const w=(t,e)=>{d("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[a,o,u,h]=e,c=ul(t,u,l);d(aa(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const p=[Ta(o.shape,c,a,n,s),al(o,c,a.shape,n,s)];if(null!=h){const t=hl(h,c);p.push(t)}return p},v={x:f,filter:p,bias:x,preluActivationWeights:y},k={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Ui(((t,e,n)=>{let s=hr.runKernel(ns,v,k);return n([e,t,s]),m&&(s=ha(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return t(f,p)}{const t=Ui(((t,e,n,s)=>{let r=hr.runKernel(ns,v,k);return s([e,t,r,n]),m&&(r=ha(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return t(f,p,x)}}}),fl=wr({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,i=[1,1],a){let o=t;3===t.rank&&(o=ha(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=ha(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return hr.runKernel(Bt,u,h)}}),ml=wr({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=ha(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},h={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:t},c=hr.runKernel(Wt,u,h);return l?ha(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});wr({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===dl(hr.state.gradientDepth,l)){let c=Fa(t,e,n,s,r,i,a);return null!=o&&(c=ji(c,o)),cl(c,l,u,h)}const c=xr(t,"x","depthwiseConv2d","float32"),p=xr(e,"filter","depthwiseConv2d","float32");let f=c,m=!1;3===c.rank&&(m=!0,f=ha(c,[1,c.shape[0],c.shape[1],c.shape[2]])),d(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),d(oa(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ua("fused depthwiseConv2d",s,a);const g=Qi(f.shape,p.shape,n,i,s,a,!0);let b,x;null!=o&&(b=xr(o,"bias","fused conv2d"),[b]=nr(b,c),fi(g.outShape,b.shape)),null!=u&&(x=xr(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{d(aa(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[r,o,u,h]=e,c=ul(t,u,l),p=ml(o.shape,c,r,n,s,i,a),f=fl(o,c,r.shape,n,s,i,a);return null!=h?[p,f,hl(b,c)]:[p,f]},w={x:f,filter:p,bias:b,preluActivationWeights:x},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Ui(((t,e,n)=>{let s=hr.runKernel(ss,w,v);return n([e,t,s]),m&&(s=ha(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(f,p)}{const t=Ui(((t,e,n,s)=>{let r=hr.runKernel(ss,w,v);return s([e,t,r,n]),m&&(r=ha(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(f,p,b)}}});const gl=wr({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===dl(hr.state.gradientDepth,i)){let l=to(t,e,n,s);return null!=r&&(l=ji(l,r)),cl(l,i,a,o)}let l=xr(t,"a","fused matMul"),u=xr(e,"b","fused matMul");[l,u]=nr(l,u);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],c=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),x=g(m),y=g(b);d(h===c,(()=>`Error in fused matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=fi(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=ha(l,n?[x,h,p]:[x,p,h]),k=ha(u,s?[y,f,c]:[y,c,f]);let I,S;null!=r&&(I=xr(r,"bias","fused matMul"),[I]=nr(I,l),fi(w,I.shape)),null!=a&&(S=xr(a,"prelu weights","fused matMul"));const C=(t,e)=>{const[a,o,l,u]=e,h=ul(ha(t,l.shape),l,i);let c,d;return n||s?!n&&s?(c=to(h,o,!1,!1),d=to(h,a,!0,!1)):n&&!s?(c=to(o,h,!1,!0),d=to(a,h,!1,!1)):(c=to(o,h,!0,!0),d=to(h,a,!0,!0)):(c=to(h,o,!1,!0),d=to(a,h,!0,!1)),null!=r?[c,d,hl(u,h)]:[c,d]},N={a:v,b:k,bias:I,preluActivationWeights:S},T={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const t=Ui(((t,e,n)=>{const s=hr.runKernel(es,N,T);return n([t,e,s]),{value:ha(s,w),gradFunc:C}}));return t(v,k)}{const t=Ui(((t,e,n,s)=>{const r=hr.runKernel(es,N,T);return s([t,e,r,n]),{value:ha(r,w),gradFunc:C}}));return t(v,k,I)}}});function bl(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return qo(r,"float32")}wr({hammingWindow_:function(t){return bl(t,.54,.46)}});const xl=wr({hannWindow_:function(t){return bl(t,.5,.5)}});function yl(t,e,n){if(f(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=mr(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return kr(t,e,s,n)}const wl=wr({frame_:function(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(_o(t,i,e)),i+=n;if(s)for(;i<t.size;){const s=i+e-t.size,o=wa([_o(t,i,e-s),xa([s],r)]);a.push(o),i+=n}return 0===a.length?yl([],[0,e]):ha(wa(a),[a.length,e])}});wr({stft_:function(t,e,n,s,r=xl){var i;null==s&&(i=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=wl(t,e,n),o=Xa(a,r(e));return sl(o,s)}});const vl=wr({cropAndResize_:function(t,e,n,s,r="bilinear",i=0){const a=xr(t,"image","cropAndResize"),o=xr(e,"boxes","cropAndResize","float32"),l=xr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];d(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),d(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),d(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),d(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),d(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),d("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:a,boxes:o,boxInd:l},c={method:r,extrapolationValue:i,cropSize:s};return hr.runKernel(Ot,h,c)}}),kl=wr({flipLeftRight_:function(t){const e=xr(t,"image","flipLeftRight","float32");d(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return hr.runKernel(se,n,{})}}),Il=wr({grayscaleToRGB_:function(t){const e=xr(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];d(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),d(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,Pa(e,r)}}),Sl=wr({rotateWithOffset_:function(t,e,n=0,s=.5){const r=xr(t,"image","rotateWithOffset","float32");d(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:e,fillValue:n,center:s};return hr.runKernel(ts,i,a)}});function Cl(t,e,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),d(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),d(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),d(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),d(1===e.rank,(()=>"scores must be a 1D tensor")),d(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),d(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}const Nl=wr({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=xr(t,"boxes","nonMaxSuppression","float32"),a=xr(e,"scores","nonMaxSuppression","float32"),o=Cl(i,a,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return hr.runKernel(Ge,{boxes:i,scores:a},l)}});function Tl(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(e,t[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}(t,e,n||$l)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function $l(t,e){return t>e?1:t<e?-1:0}function El(t,e,n,s,r){return Fl(t,e,n,s,r,0)}function Rl(t,e,n,s,r,i){return Fl(t,e,n,s,r,0,!1,i,!0)}function Al(t,e,n,s,r,i){return Fl(t,e,n,s,r,i,!0)}function Fl(t,e,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(_l);const h=i>0?-.5/i:0,c=[],d=[];for(;c.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<r)break;let o=!1;for(let n=c.length-1;n>=a;--n){const a=Ml(t,i,c[n]);if(a>=s){o=!0;break}if(e.score=e.score*Dl(s,h,a),e.score<=r)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(i),d.push(e.score)):e.score>r&&Tl(u,e,_l))}const p=c.length,f=n-p;o&&f>0&&(c.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:c};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Ml(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),c=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(c-u)*(d-h);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,h),b=Math.min(o,c),x=Math.min(l,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function Dl(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function _l(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Ol=wr({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=xr(t,"boxes","nonMaxSuppression"),o=xr(e,"scores","nonMaxSuppression"),l=Cl(a,o,n,s,r,i),u={boxes:a,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},c=hr.runKernel(je,u,h);return{selectedIndices:c[0],selectedScores:c[1]}}}),Ll=wr({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=xr(t,"boxes","nonMaxSuppression"),o=xr(e,"scores","nonMaxSuppression"),l=Cl(a,o,n,s,r,null),u={boxes:a,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},c=hr.runKernel(He,u,h);return{selectedIndices:c[0],validOutputs:c[1]}}}),zl=wr({resizeBilinear_:function(t,e,n=!1,s=!1){const r=xr(t,"images","resizeBilinear");d(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),d(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),d(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=ha(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=hr.runKernel(hn,o,l);return a?ha(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Pl=wr({resizeNearestNeighbor_:function(t,e,n=!1,s=!1){const r=xr(t,"images","resizeNearestNeighbor");d(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),d(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),d("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=ha(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=hr.runKernel(ln,o,l);return a?ha(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Bl=wr({bincount_:function(t,e,n){const s=xr(t,"x","bincount"),r=xr(e,"weights","bincount");d("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),d(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return hr.runKernel(xt,i,a)}}),Wl=wr({lessEqual_:function(t,e){let n=xr(t,"a","lessEqual","string_or_numeric"),s=xr(e,"b","lessEqual","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(ye,r)}}),Ul=wr({round_:function(t){const e={x:xr(t,"x","round")};return hr.runKernel(fn,e)}});function Vl(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return hr.runKernel(nn,{},r)}const Gl=wr({threshold_:function(t,e="binary",n=!1,s=.5){const r=xr(t,"image","threshold"),i=r.shape[0]*r.shape[1];let a,o,l,u,h=Xa(qo([s]),255);if(d(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),d(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),d("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),d("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===r.shape[2]){[a,o,l]=Uo(r,[1,1,1],-1);const t=Xa(a,.2989),e=Xa(o,.587),n=Xa(l,.114);u=ji(ji(t,e),n)}else u=t;"otsu"===e&&(h=function(t,e){let n,s,r,i,a,o,l=qo([-1]),u=qo([0]),h=qo([0]);for(let c=0;c<t.size-1;c++){n=_o(t,0,c+1),s=_o(t,c+1),a=Da(Za(n),e),o=Da(Za(s),e);const d=Za(Xa(n,Vl(0,n.size)));r=Da(d,Za(n));const p=xa(s.shape,n.size),f=ji(Vl(0,s.size),p),m=Xa(s,f);i=Da(Za(m),Za(s));const g=Ya(r,i),b=Ya(r,i),x=Xa(a,o);h=Xa(Xa(x,g),b);const y=Va(h,u);u=Yo(y,h,u),l=Yo(y,qo([c]),l)}return l}(Bl(si(Ul(u),"int32"),Ir([]),256),i));const c=n?Wl(u,h):Va(u,h);return si(Xa(c,255),"int32")}}),Hl=wr({transform_:function(t,e,n="nearest",s="constant",r=0,i){const a=xr(t,"image","transform","float32"),o=xr(e,"transforms","transform","float32");d(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),d(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return hr.runKernel(qn,l,u)}}),jl=wr({bandPart_:function(t,e,n){d(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),d(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=xr(t,"a","bandPart");d(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=ha(Vl(0,i,1,"int32"),[-1,1]),l=Vl(0,a,1,"int32"),u=Ya(o,l),h=Qa(Wl(u,Vi(+e,"int32")),Ga(u,Vi(-n,"int32"))),c=wo([i,a],s.dtype);return ha(Ho(Xo(ha(s,[-1,i,a])).map((t=>Yo(h,t,c)))),r)}}),ql=wr({min_:function(t,e=null,n=!1){const s={x:xr(t,"x","min")},r={axis:e,keepDims:n};return hr.runKernel(Oe,s,r)}}),Kl=wr({pow_:function(t,e){let n=xr(t,"base","pow"),s=xr(e,"exp","pow");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(Ze,r)}});function Xl(t,e,n=null){if(0===t.rank)return Hi(t);if(1!==t.rank&&null===n)return Xl(ha(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Za(Hi(t),n);if(e===1/0)return Ka(Hi(t),n);if(e===-1/0)return ql(Hi(t),n);if("euclidean"===e||2===e)return Vo(Za(Kl(Hi(t),Vi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ka(Za(Hi(t),n[0]),n[1]-1);if(e===1/0)return Ka(Za(Hi(t),n[1]),n[0]);if(e===-1/0)return ql(Za(Hi(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Vo(Za(mo(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Yl=wr({norm_:function(t,e="euclidean",n=null,s=!1){const r=Xl(t=xr(t,"x","norm"),e,n);let i=r.shape;if(s){const e=I(n,t.shape);i=uo(r.shape,e)}return ha(r,i)}}),Zl=wr({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,d(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)d(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Uo(t,t.shape[0],0).map((t=>Go(t,[0])));d(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(hr.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Xa(Za(Xa(n[s],t)),n[s]);t=Ya(t,e)}return Da(t,Yl(t,"euclidean"))})));return e?Ho(n,0):n}});function Jl(t,e=!1){return hr.tidy((()=>{d(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=Ba(n),i=ri(t);const a=yl([[1]],[1,1]);let o=ri(a);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=i,l=o,u=r;[o,i,r]=hr.tidy((()=>{const e=_o(i,[t,t],[n-t,1]),l=Yl(e),u=_o(i,[t,t],[1,1]),h=Yo(Va(u,0),yl([[-1]]),yl([[1]])),c=Ya(u,Xa(h,l)),d=Da(e,c);o=1===d.shape[0]?ri(a):wa([a,_o(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=bo(Da(to(h,c),l)),f=_o(i,[t,0],[n-t,s]),m=Xa(p,o),g=tl(o);if(0===t)i=Ya(f,to(m,to(g,f)));else{const e=Ya(f,to(m,to(g,f)));i=wa([_o(i,[0,0],[t,s]),e],0)}const b=tl(m),x=_o(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Ya(x,to(to(x,o),b));else{const e=Ya(x,to(to(x,o),b));r=wa([_o(r,[0,0],[n,t]),e],1)}return[o,i,r]})),zi([e,l,u])}return!e&&n>s&&(r=_o(r,[0,0],[n,s]),i=_o(i,[0,0],[s,s])),[r,i]}))}const Ql=wr({qr_:function(t,e=!1){if(d(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Jl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=Xo(ha(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];return s.forEach((t=>{const[n,s]=Jl(t,e);r.push(n),i.push(s)})),[ha(Ho(r,0),t.shape),ha(Ho(i,0),t.shape)]}}});var tu;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(tu||(tu={}));const eu=wr({computeWeightedLoss_:function(t,e,n=tu.SUM_BY_NONZERO_WEIGHTS){const s=xr(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=xr(e,"weights","computeWeightedLoss"));const i=null==r?s:Xa(s,r);if(n===tu.NONE)return i;if(n===tu.SUM)return Za(i);if(n===tu.MEAN){if(null==r)return ro(i);{const t=s.size/r.size,e=Da(Za(i),Za(r));return t>1?Da(e,Vi(t)):e}}if(n===tu.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Da(Za(i),Vi(s.size));{const t=Xa(r,vo(s.shape)),e=si(Za(xo(t,Vi(0))),"float32");return Da(Za(i),e)}}throw Error(`Unknown reduction: ${n}`)}});wr({absoluteDifference_:function(t,e,n,s=tu.SUM_BY_NONZERO_WEIGHTS){const r=xr(t,"labels","absoluteDifference"),i=xr(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=xr(n,"weights","absoluteDifference")),p(r.shape,i.shape,"Error in absoluteDifference: ");const o=Hi(Ya(r,i));return eu(o,a,s)}}),wr({cosineDistance_:function(t,e,n,s,r=tu.SUM_BY_NONZERO_WEIGHTS){const i=xr(t,"labels","cosineDistance"),a=xr(e,"predictions","cosineDistance");let o=null;null!=s&&(o=xr(s,"weights","cosineDistance")),p(i.shape,a.shape,"Error in cosineDistance: ");const l=Vi(1),u=Ya(l,Za(Xa(i,a),n,!0));return eu(u,o,r)}}),wr({hingeLoss_:function(t,e,n,s=tu.SUM_BY_NONZERO_WEIGHTS){let r=xr(t,"labels","hingeLoss");const i=xr(e,"predictions","hingeLoss");let a=null;null!=n&&(a=xr(n,"weights","hingeLoss")),p(r.shape,i.shape,"Error in hingeLoss: ");const o=Vi(1);r=Ya(Xa(Vi(2),r),o);const l=Ro(Ya(o,Xa(r,i)));return eu(l,a,s)}}),wr({huberLoss_:function(t,e,n,s=1,r=tu.SUM_BY_NONZERO_WEIGHTS){const i=xr(t,"labels","huberLoss"),a=xr(e,"predictions","huberLoss");let o=null;null!=n&&(o=xr(n,"weights","huberLoss")),p(i.shape,a.shape,"Error in huberLoss: ");const l=Vi(s),u=Hi(Ya(a,i)),h=io(u,l),c=Ya(u,h),d=ji(Xa(Vi(.5),mo(h)),Xa(l,c));return eu(d,o,r)}}),wr({logLoss_:function(t,e,n,s=1e-7,r=tu.SUM_BY_NONZERO_WEIGHTS){const i=xr(t,"labels","logLoss"),a=xr(e,"predictions","logLoss");let o=null;null!=n&&(o=xr(n,"weights","logLoss")),p(i.shape,a.shape,"Error in logLoss: ");const l=Vi(1),u=Vi(s),h=bo(Xa(i,ja(ji(a,u)))),c=Xa(Ya(l,i),ja(ji(Ya(l,a),u))),d=Ya(h,c);return eu(d,o,r)}});const nu=wr({squaredDifference_:function(t,e){let n=xr(t,"a","squaredDifference"),s=xr(e,"b","squaredDifference");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(On,r,{})}});wr({meanSquaredError_:function(t,e,n,s=tu.SUM_BY_NONZERO_WEIGHTS){const r=xr(t,"labels","meanSquaredError"),i=xr(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=xr(n,"weights","meanSquaredError")),p(r.shape,i.shape,"Error in meanSquaredError: ");const o=nu(r,i);return eu(o,a,s)}}),wr({sigmoidCrossEntropy_:function(t,e,n,s=0,r=tu.SUM_BY_NONZERO_WEIGHTS){let i=xr(t,"multiClassLabels","sigmoidCrossEntropy");const a=xr(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=xr(n,"weights","sigmoidCrossEntropy")),p(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=Vi(s),e=Vi(1),n=Vi(.5);i=ji(Xa(i,Ya(e,t)),Xa(n,t))}const l=function(t,e){const n=xr(t,"labels","sigmoidCrossEntropyWithLogits"),s=xr(e,"logits","sigmoidCrossEntropyWithLogits");p(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Ro(s),i=Xa(s,n),a=qa(La(bo(Hi(s))));return ji(Ya(r,i),a)}(i,a);return eu(l,o,r)}});const su=wr({logSumExp_:function(t,e=null,n=!1){const s=xr(t,"x","logSumExp"),r=I(e,s.shape),i=Ka(s,r,!0),a=Ya(s,i),o=La(a),l=Za(o,r),u=ja(l),h=ji(ha(i,u.shape),u);if(n){const t=uo(h.shape,r);return ha(h,t)}return h}});wr({softmaxCrossEntropy_:function(t,e,n,s=0,r=tu.SUM_BY_NONZERO_WEIGHTS){let i=xr(t,"onehotLabels","softmaxCrossEntropy");const a=xr(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=xr(n,"weights","softmaxCrossEntropy")),p(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const t=Vi(s),e=Vi(1),n=Vi(i.shape[1]);i=ji(Xa(i,Ya(e,t)),Da(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const s=Ui(((t,e,s)=>{const r=su(e,[n],!0),i=Ya(si(e,"float32"),r);s([t,i]);const a=bo(Xa(i,t));return{value:Za(a,[n]),gradFunc:(t,e)=>{const[s,r]=e,i=uo(t.shape,[n]);return[Xa(ha(t,i),Ya(si(s,"float32"),La(r))),Xa(ha(t,i),Ya(La(r),si(s,"float32")))]}}}));return s(t,e)}(i,a);return eu(l,o,r)}}),wr({sparseFillEmptyRows_:function(t,e,n,s){const r=xr(t,"indices","sparseFillEmptyRows","int32"),i=xr(e,"values","sparseFillEmptyRows"),a=xr(n,"denseShape","sparseFillEmptyRows","int32"),o=xr(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:i,denseShape:a,defaultValue:o},u=hr.runKernel(An,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),wr({sparseReshape_:function(t,e,n){const s=xr(t,"inputIndices","sparseReshape","int32"),r=xr(e,"inputShape","sparseReshape","int32"),i=xr(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:s,inputShape:r,newShape:i},o=hr.runKernel(Fn,a);return{outputIndices:o[0],outputShape:o[1]}}}),wr({sparseSegmentMean_:function(t,e,n){const s=xr(t,"data","sparseSegmentMean"),r=xr(e,"indices","sparseSegmentMean","int32"),i=xr(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return hr.runKernel(Mn,a)}}),wr({sparseSegmentSum_:function(t,e,n){const s=xr(t,"data","sparseSegmentSum"),r=xr(e,"indices","sparseSegmentSum","int32"),i=xr(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return hr.runKernel(Dn,a)}}),wr({stringNGrams_:function(t,e,n,s,r,i,a,o){const l=xr(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=xr(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:s,leftPad:r,rightPad:i,padWidth:a,preserveShortSequences:o},c={data:l,dataSplits:u},d=hr.runKernel(Pn,c,h);return{nGrams:d[0],nGramsSplits:d[1]}}}),wr({stringSplit_:function(t,e,n=!0){const s=xr(t,"input","stringSplit","string"),r=xr(e,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:n},a={input:s,delimiter:r},o=hr.runKernel(Bn,a,i);return{indices:o[0],values:o[1],shape:o[2]}}}),wr({stringToHashBucketFast_:function(t,e){const n=xr(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return hr.runKernel(Wn,r,s)}});const ru={flipLeftRight:kl,grayscaleToRGB:Il,resizeNearestNeighbor:Pl,resizeBilinear:zl,rotateWithOffset:Sl,cropAndResize:vl,nonMaxSuppression:Nl,nonMaxSuppressionAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=xr(t,"boxes","nonMaxSuppressionAsync"),a=xr(e,"scores","nonMaxSuppressionAsync"),o=Cl(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],h=l[1],{selectedIndices:c}=El(u,h,n,s,r);return i!==t&&i.dispose(),a!==e&&a.dispose(),qo(c,"int32")},nonMaxSuppressionWithScore:Ol,nonMaxSuppressionWithScoreAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=xr(t,"boxes","nonMaxSuppressionAsync"),o=xr(e,"scores","nonMaxSuppressionAsync"),l=Cl(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),h=u[0],c=u[1],{selectedIndices:d,selectedScores:p}=Al(h,c,n,s,r,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:qo(d,"int32"),selectedScores:qo(p)}},nonMaxSuppressionPadded:Ll,nonMaxSuppressionPaddedAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=xr(t,"boxes","nonMaxSuppressionAsync"),o=xr(e,"scores","nonMaxSuppressionAsync"),l=Cl(a,o,n,s,r,null),u=l.maxOutputSize,h=l.iouThreshold,c=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Rl(d,p,u,h,c,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:qo(f,"int32"),validOutputs:Vi(m,"int32")}},threshold:Gl,transform:Hl},iu={bandPart:jl,gramSchmidt:Zl,qr:Ql};class au extends Gi{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=hr.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=hr.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Li((()=>Zo(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Li((()=>Zo(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Li((()=>{const t=ji(Xa(i,this.rho),Xa(mo(r),1-this.rho)),e=Xa(Da(Vo(ji(a,this.epsilon)),Vo(ji(i,this.epsilon))),r),n=ji(Xa(a,this.rho),Xa(mo(e),1-this.rho));i.assign(t),a.assign(n);const o=ji(Xa(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(zi(this.accumulatedGrads.map((t=>t.variable))),zi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}au.className="Adadelta",Di(au);class ou extends Gi{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=hr.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Li((()=>xa(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable;Li((()=>{const t=ji(i,mo(r));i.assign(t);const e=ji(Xa(Da(r,Vo(ji(t,hr.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&zi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}ou.className="Adagrad",Di(ou);class lu extends Gi{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Li((()=>{this.accBeta1=Vi(e).variable(),this.accBeta2=Vi(n).variable()})),null==s&&(this.epsilon=hr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Li((()=>{const n=Ya(1,this.accBeta1),s=Ya(1,this.accBeta2);e.forEach(((e,r)=>{const i=hr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Li((()=>Zo(i).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:Li((()=>Zo(i).variable(!1)))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=ji(Xa(o,this.beta1),Xa(a,1-this.beta1)),h=ji(Xa(l,this.beta2),Xa(mo(a),1-this.beta2)),c=Da(u,n),d=Da(h,s);o.assign(u),l.assign(h);const p=ji(Xa(Da(c,ji(Vo(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Xa(this.accBeta1,this.beta1)),this.accBeta2.assign(Xa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&zi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&zi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Li((()=>{this.accBeta1.assign(Kl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Kl(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}lu.className="Adam",Di(lu);class uu extends Gi{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Li((()=>{this.iteration=Vi(0).variable(),this.accBeta1=Vi(e).variable()})),null==s&&(this.epsilon=hr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Li((()=>{const n=Ya(1,this.accBeta1),s=Da(-this.learningRate,ji(Xa(this.iteration,this.decay),1));e.forEach(((e,r)=>{const i=hr.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Zo(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Zo(i).variable(!1)});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=ji(Xa(o,this.beta1),Xa(a,1-this.beta1)),h=Xa(l,this.beta2),c=Hi(a),d=so(h,c);o.assign(u),l.assign(d);const p=ji(Xa(Da(s,n),Da(u,ji(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(ji(this.iteration,1)),this.accBeta1.assign(Xa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&zi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&zi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}uu.className="Adamax",Di(uu);class hu extends Gi{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=hr.registeredVariables[e];Li((()=>{const t=ji(Xa(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Pi(Vi(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}hu.className="SGD",Di(hu);class cu extends hu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Vi(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=hr.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Li((()=>Zo(s).variable(t)))}}const r=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&Li((()=>{let t;const e=ji(Xa(this.m,r),i);t=this.useNesterov?ji(Xa(this.c,ji(i,Xa(e,this.m))),s):ji(Xa(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&zi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}cu.className="Momentum",Di(cu);class du extends Gi{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=hr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=hr.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Li((()=>Zo(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Li((()=>Zo(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Li((()=>Zo(s).variable(r)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Li((()=>{const t=ji(Xa(a,this.decay),Xa(mo(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=ji(Xa(e,this.decay),Xa(i,1-this.decay)),l=Da(Xa(i,this.learningRate),Vo(Ya(t,ji(mo(r),this.epsilon)))),u=ji(Xa(o,this.momentum),l);a.assign(t),e.assign(r),o.assign(u);const h=Ya(s,u);s.assign(h)}else{const t=ji(Xa(a,this.decay),Xa(mo(i),1-this.decay)),e=ji(Xa(o,this.momentum),Da(Xa(i,this.learningRate),Vo(ji(t,this.epsilon))));a.assign(t),o.assign(e);const n=Ya(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&zi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&zi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&zi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}du.className="RMSProp",Di(du);class pu{static sgd(t){return new hu(t)}static momentum(t,e,n=!1){return new cu(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new du(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new lu(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new au(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new uu(t,e,n,s,r)}static adagrad(t,e=.1){return new ou(t,e)}}const fu={sgd:pu.sgd,momentum:pu.momentum,adadelta:pu.adadelta,adagrad:pu.adagrad,rmsprop:pu.rmsprop,adamax:pu.adamax,adam:pu.adam},mu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function gu(){return new Promise((t=>mu((()=>t()))))}function bu(t,e){const n=t[0].length;t.forEach(((t,e)=>{d(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),d(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let i=0;i<n;i++)d(i===e||t[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function xu(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}var yu;function wu(t,e,n){let s=new Array;if(null==n&&null==e)return s;if(null==e)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(null==n)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],a=s[s.length-n.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+t}] = ${i} but shape[${r+t}] = ${o}`)}else s[a]=i}return s}function vu(t){const e={FIRST_DIM_SIZE:yu.FIRST_DIM_SIZE,VALUE_ROWIDS:yu.VALUE_ROWIDS,ROW_LENGTHS:yu.ROW_LENGTHS,ROW_SPLITS:yu.ROW_SPLITS,ROW_LIMITS:yu.ROW_LIMITS,ROW_STARTS:yu.ROW_STARTS},n=[];for(const s of t){if(!(s in e))break;n.push(e[s])}return n}function ku(t){return 0===t.length?0:t[0]===yu.FIRST_DIM_SIZE?t.length-1:t.length}function Iu(t,e){if(null==t||null==e)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=t[r],s=e[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-t.length}] = ${n} but ragged tensor input.flatValues.shape[${r-t.length}] = ${s}`)}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(yu||(yu={}));const Su=30;function Cu(t){return t<=Su?t:D(t,Math.floor(Math.sqrt(t)))}function Nu(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Tu(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function $u(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Eu(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function Ru(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function Au(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function Fu(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(0===g(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,i=r[r.length-1];let a=1;for(let t=0;t<r.length-1;++t)a*=r[t];const o=t.shape,l=r.slice();l.pop();let u=1;for(let t=i;t<n;++t)u*=o[t],l.push(o[t]);const h=[..._(t.shape).map((t=>t/u)),1].slice(0,i);return[l,a,u,h]}function Mu(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(i+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(i+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function Du(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Mu(n,e,t)}function _u(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=n.length;let a=1;for(let t=r;t<i;++t)a*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:g(e.shape)/o,sliceSize:a,strides:[..._(n.slice(0,r)),1],outputSize:g(n)}}const Ou=1.7580993408473768,Lu=1.0507009873554805,zu=.3275911,Pu=.254829592,Bu=-.284496736,Wu=1.421413741,Uu=-1.453152027,Vu=1.061405429;function Gu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function Hu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function ju(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function qu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Ku(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Xu(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function Yu(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const i=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function Zu(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}const Ju=/->/g;function Qu(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Ju,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=t.split("->");d(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=s.split(","),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<r.length;++t){const e=r[t];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<s.length;++t){const e=s[t];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(i.length);for(let t=0;t<a;++t){if(new Set(i[t].split("")).size!==i[t].length)throw new Error(`Found duplicate axes in input component ${i[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<i[t].length;++e)l[t].push(o.indexOf(i[t][e]))}const u=o.length,h=[];for(let t=r.length;t<u;++t)h.push(t);return{allDims:o,summedDims:h,idDims:l}}function th(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const s=[];for(let e=0;e<t;++e)-1===n[e]&&s.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:s}}function eh(t,e,n){const s=new Array(t);for(let t=0;t<n.length;++t){const r=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===s[e[t][n]]?s[e[t][n]]=r[n]:d(s[e[t][n]]===r[n],(()=>`Expected dimension ${s[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function nh(t,e){const n=t,s=[];let r=0;0===t.length&&n.push(-1),r=t.length+1;for(let t=0;t<r;++t)s.push([]);const i=[];for(let t=0;t<n.length;++t){const r=rh(e,n[t]);for(const e of r)-1===i.indexOf(e)&&(s[t].push(e),i.push(e))}return{path:n,steps:s}}function sh(t){return t.every(((t,e)=>t===e))}function rh(t,e){const n=[];for(let s=0;s<t.length;++s)0!==t[s].length&&-1===t[s].indexOf(e)&&-1!==e||n.push(s);return n}function ih(t,e,n=0){let s=[];if("number"==typeof e)d(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);d(r<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const s=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-s}d(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}function ah(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function oh(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function lh(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function uh(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function hh(t,e){return`size ${t} must be non-negative, not ${e}`}function ch(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function dh(t,e){return`Input to reshape is a SparseTensor with ${g(t)}\n  dense values, but the requested shape requires a multiple of ${g(e)}. inputShape=${t} outputShape= ${e}`}function ph(t,e){return`Input to reshape is a tensor with ${g(t)} dense values, but the requested shape has ${g(e)}. inputShape=${t} outputShape=${e}`}function fh(){return"segment ids must be >= 0"}function mh(){return"segment ids are not increasing"}function gh(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function bh(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function xh(t,e){let n,s=!1;for(t<=Su?(n=t,s=!0):n=D(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=D(t,n+1);return n}function yh(t,e,n){const s=[],r=t.length;for(let i=0;i<r;i++)i!==e?s.push(t[i]):s.push(n);return s}function wh(t,e,n,s){const r=e.shape.length,i=t.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,h=1;for(let e=0;e<s;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=s;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=s;t<r;t++)o.push(e.shape[t]);for(let e=n+1;e<i;e++)o.push(t.shape[e]),h*=t.shape[e];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:a,outputShape:o}}function vh(t){try{return t.map((t=>Fs(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function kh(t){return t.map((t=>As(t)))}function Ih(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=ni(t,"int32"),r=ni([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=s.indexToLoc(n[e]),a=e*t.length;r.values.set(i,a)}return r.toTensor()}const Sh={kernelName:J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,ll(si(n,"float32"),-1))}}},Ch={kernelName:Q,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=mo(si(n,"float32")),s=Vo(Ya(Vi(1),e));return bo(Da(t,s))}}}},Nh={kernelName:tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Vo(Ya(mo(si(n,"float32")),1));return Da(t,e)}}}},Th={kernelName:et,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{let e=t;const s=pi(n.shape,r);return s.length>0&&(e=Za(e,s)),ha(e,n.shape)},b:()=>{let e=t;const n=pi(s.shape,r);return n.length>0&&(e=Za(e,n)),ha(e,s.shape)}}}},$h={kernelName:nt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},Eh={kernelName:it,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zo(n)}}},Rh={kernelName:at,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Zo(n)}}},Ah={kernelName:ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Vo(Ya(Vi(1),mo(si(n,"float32")))))}}},Fh={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Vo(ji(Vi(1),mo(si(n,"float32"))));return Da(t,e)}}}},Mh={kernelName:ct,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{const e=ji(mo(n),mo(s));let i=Xa(t,Da(s,e));const a=pi(n.shape,r);return a.length>0&&(i=Za(i,a)),ha(i,n.shape)},b:()=>{const e=ji(mo(n),mo(s));let i=bo(Xa(t,Da(n,e)));const a=pi(s.shape,r);return a.length>0&&(i=Za(i,a)),ha(i,s.shape)}}}},Dh={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,ji(mo(si(n,"float32")),1))}}},_h={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Ya(Vi(1),mo(si(n,"float32"))))}}},Oh=wr({avgPool3dGrad_:function(t,e,n,s,r,i){const a=xr(t,"dy","avgPool3dGrad"),o=xr(e,"input","avgPool3dGrad");let l=a,u=o,h=!1;4===o.rank&&(h=!0,l=ha(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=ha(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),d(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),ua("avgPool3dGrad",r,i);const c={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:i},f=hr.runKernel(mt,c,p);return h?ha(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Lh={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Oh(t,s,r,i,a,o)}}},zh=wr({avgPoolGrad_:function(t,e,n,s,r){const i=xr(t,"dy","avgPoolGrad"),a=xr(e,"input","avgPoolGrad");d(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=ha(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=ha(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),d(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},c={filterSize:n,strides:s,pad:r},p=hr.runKernel(pt,h,c);return u?ha(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ph={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>zh(t,s,r,i,a)}}},Bh={kernelName:gt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>to(t,r,!1,!1),b:()=>to(t,s,!0,!1)}:i&&!a?{a:()=>to(r,t,!1,!0),b:()=>to(s,t,!1,!1)}:{a:()=>to(r,t,!0,!0),b:()=>to(t,s,!0,!0)}:{a:()=>to(t,r,!1,!0),b:()=>to(s,t,!0,!1)}}},Wh=wr({spaceToBatchND_:function(t,e,n){const s=xr(t,"x","spaceToBatchND");d(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),d(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),d(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},i={blockShape:e,paddings:n};return hr.runKernel($n,r,i)}}),Uh={kernelName:bt,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Wh(t,s,r)}}},Vh={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let t=r.length-1;t>=0;t--)if(r[t]===i[t])a[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>Za(t,o,!0)}}},Gh={kernelName:wt,gradFunc:t=>({x:()=>t.clone()})},Hh={kernelName:vt,gradFunc:t=>({x:()=>Zo(t)})},jh={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Yo(Qa(Ga(s,r),Wl(s,i)),t,Zo(t))}}},qh={kernelName:St,inputsToSave:["x"],gradFunc:Sh.gradFunc},Kh={kernelName:Ct,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,i=I(r,e[0].shape)[0],a=s.map((t=>t[i]));return Uo(t,a,i).map((t=>()=>t))}},Xh={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return d(aa(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Ta(s.shape,t,r,a,o,l),filter:()=>al(s,t,r.shape,a,o,l)}}},Yh={kernelName:$t,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ca(t,r,i,a,o,1,l),filter:()=>al(t,s,r.shape,i,a,o,l)}}},Zh=wr({conv3DBackpropFilter_:function(t,e,n,s,r){let i=t;4===t.rank&&(i=ha(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=ha(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),d(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),d(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),d(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),d(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),d(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return hr.runKernel(Rt,o,l)}}),Jh={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;d(aa(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=e;return{x:()=>Ra(a.shape,t,o,r,i),filter:()=>Zh(a,t,o.shape,r,i)}}},Qh=wr({sin_:function(t){const e={x:xr(t,"x","sin","float32")};return hr.runKernel(vn,e)}}),tc={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(bo(Qh(si(n,"float32"))),t)}}},ec=wr({sinh_:function(t){const e={x:xr(t,"x","sinh")};return hr.runKernel(kn,e)}}),nc={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(ec(si(n,"float32")),t)}}},sc=wr({cumsum_:function(t,e=0,n=!1,s=!1){const r={x:xr(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return hr.runKernel(_t,r,i)}}),rc={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const e=co([r],s.rank);let n=sc(t,r,i,!a);return null!=e&&(n=tl(n,e)),n}}}},ic={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;d(aa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return d(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),d(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),d(oa(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),ua("depthwiseConv2d",i,a),{x:()=>ml(l.shape,t,u,r,i,o,a),filter:()=>fl(l,t,u.shape,r,i,o,a)}}},ac={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>hr.runKernel(Gt,i,n),filter:()=>hr.runKernel(Ht,a,n)}}},oc={kernelName:Kt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>hr.runKernel(Xt,s)}}},lc={kernelName:Yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Xa(La(bo(mo(n))),2/Math.sqrt(Math.PI));return{x:()=>Xa(t,s)}}},uc={kernelName:Jt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,n)}}},hc={kernelName:Qt,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>ha(t,n.shape)}}},cc={kernelName:te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,La(n))}}},dc={kernelName:re,gradFunc:t=>({x:()=>Zo(t)})},pc={kernelName:ie,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{const e=Da(t,si(s,"float32")),i=pi(n.shape,r);return i.length>0?ha(Za(e,i),n.shape):e},b:()=>{let e=Xa(t,si(n,"float32"));const i=pi(s.shape,r);i.length>0&&(e=ha(Za(e,i),s.shape));const a=mo(s);return bo(Da(e,si(a,"float32")))}}}},fc=wr({rsqrt_:function(t){const e={x:xr(t,"x","rsqrt","float32")};return hr.runKernel(mn,e)}}),mc={kernelName:ae,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=null==o?Vi(1):o,u=pi(i.shape,r.shape),h=[];if(1===i.rank){for(let t=0;t<r.shape.length-1;++t)h.push(r.shape[t]);h.push(1)}const c=Ya(r,i),d=Xa(t,l),p=fc(ji(a,Vi(s))),f=Xa(Xa(Xa(p,p),p),Vi(-.5));return{x:()=>1===i.rank?ha(Xa(Xa(t,Pa(ha(p,[1,1,1,i.shape[0]]),h)),l),r.shape):ha(Xa(Xa(t,p),l),r.shape),mean:()=>{let t=Xa(Xa(p,Vi(-1)),d);return 1===i.rank&&(t=Za(t,u)),ha(t,i.shape)},variance:()=>{let t=Xa(Xa(f,c),d);return 1===i.rank&&(t=Za(t,u)),ha(t,i.shape)},scale:()=>{const e=Xa(c,p);let n=Xa(t,e);return 1===i.rank&&(n=Za(n,u)),ha(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Za(e,u)),ha(e,i.shape)}}}},gc=wr({unsortedSegmentSum_:function(t,e,n){const s=xr(t,"x","unsortedSegmentSum"),r=xr(e,"segmentIds","unsortedSegmentSum","int32");d(x(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return hr.runKernel(Zn,i,a)}}),bc={kernelName:oe,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i}=n,a=I(i,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),h=u.length,c=xc(0,l),d=xc(l+1,l+1+h),p=yc([o,[n],u]),f=ha(t,p),m=ha(r,[n]),g=yc([[l],c,d]),b=tl(f,g);let x=gc(b,m,s.shape[a]);const y=po(g);return x=tl(x,y),x},indices:()=>r}}};function xc(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function yc(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const wc={kernelName:he,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Zo(n),b:()=>Zo(s)}}},vc={kernelName:ce,gradFunc:t=>({x:()=>si(t,"float32")})},kc={kernelName:fe,gradFunc:t=>({x:()=>Zo(t)})},Ic={kernelName:me,gradFunc:t=>({x:()=>Zo(t)})},Sc={kernelName:ge,gradFunc:t=>({x:()=>Zo(t)})},Cc={kernelName:be,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,i=Va(s,0);return{x:()=>Yo(i,t,Xa(t,r))}}},Nc={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,ji(n,1))}}},Tc={kernelName:ve,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,si(n,"float32"))}}},$c={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=La(s);return Ya(t,Xa(Za(t,r,!0),e))}}}},Ec=wr({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return hr.runKernel(Te,o,l)}}),Rc={kernelName:Ne,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Ec(s,r,t,i,a,o,l)}}};function Ac(t,e,n,s){return e.rank<n.rank&&(e=ha(e,uo(e.shape,s))),t.rank<n.rank&&(t=ha(t,uo(t.shape,s))),{x:()=>Xa(t,si(Oa(n,e),t.dtype))}}const Fc={kernelName:$e,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,i=e[0],a=Ac(t,e[1],i,I(r,i.shape));return{x:()=>a.x()}}},Mc=wr({less_:function(t,e){let n=xr(t,"a","less","string_or_numeric"),s=xr(e,"b","less","string_or_numeric");[n,s]=nr(n,s),fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(xe,r)}}),Dc={kernelName:Ee,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Xa(t,si(Ga(n,s),"float32")),b:()=>Xa(t,si(Mc(n,s),"float32"))}}},_c=wr({maxPool3dGrad_:function(t,e,n,s,r,i,a){const o=xr(t,"dy","maxPool3dGrad"),l=xr(e,"input","maxPool3dGrad"),u=xr(n,"output","maxPool3dGrad");let h=o,c=l,p=u,f=!1;4===l.rank&&(f=!0,h=ha(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=ha(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=ha(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),d(5===c.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),d(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),ua("maxPool3dGrad",i,a);const m={dy:h,input:c,output:p},g={filterSize:s,strides:r,pad:i,dimRoundingMode:a},b=hr.runKernel(Me,m,g);return f?ha(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Oc={kernelName:Fe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>_c(t,s,r,i,a,o,l)}}},Lc=wr({maxPoolGrad_:function(t,e,n,s,r,i,a){const o=xr(t,"dy","maxPoolGrad"),l=xr(e,"input","maxPoolGrad"),u=xr(n,"output","maxPoolGrad");d(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),d(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),d(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),ua("maxPoolGrad",i,a);const h={dy:o,input:l,output:u},c={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return hr.runKernel(Ae,h,c)}}),zc={kernelName:Re,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Lc(t,s,r,i,a,o)}}},Pc={kernelName:_e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,i=I(r,s.shape),a=g(lo(s.shape,i)[1]);return{x:()=>{const e=s.shape.slice();i.forEach((t=>{e[t]=1}));const n=ha(t,e);return Da(Xa(n,vo(s.shape,"float32")),a)}}}},Bc={kernelName:Oe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=Ac(t,a,i,I(r,i.shape));return{x:()=>o.x()}}},Wc={kernelName:Le,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Xa(t,si(Wl(n,s),"float32")),b:()=>Xa(t,si(Va(n,s),"float32"))}}},Uc={kernelName:ze,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>_o(t,i,s.shape)}}},Vc={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{const e=pi(n.shape,r);return e.length>0?ha(Za(t,e),n.shape):t},b:()=>{const e=Xa(t,bo(Wa(Da(n,s)))),i=pi(s.shape,r);return i.length>0?ha(Za(e,i),s.shape):e}}}},Gc={kernelName:We,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{const e=Xa(t,si(s,"float32")),i=pi(n.shape,r);return i.length>0?ha(Za(e,i),n.shape):e},b:()=>{const e=Xa(t,si(n,"float32")),i=pi(s.shape,r);return i.length>0?ha(Za(e,i),s.shape):e}}}},Hc={kernelName:Ue,gradFunc:t=>({x:()=>bo(t)})},jc={kernelName:Ke,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>wo(n.shape,"float32")}}},qc={kernelName:qe,gradFunc:t=>({x:()=>Zo(t)})},Kc={kernelName:Xe,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Xo(t,s).map((t=>()=>t))}},Xc={kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>_o(t,i,s.shape)}}},Yc={kernelName:Ze,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=fi(i.shape,a.shape);return{a:()=>{const e=si(a,"float32");let n=Xa(t,Xa(e,Kl(i,Ya(e,Vi(1)))));const s=pi(i.shape,o);return s.length>0&&(n=Za(n,s)),ha(n,i.shape)},b:()=>{const e=Va(i,0),n=Yo(e,ja(i),Zo(i));let s=Xa(t,Xa(r,n));const l=pi(a.shape,o);return l.length>0&&(s=Za(s,l)),ha(s,a.shape)}}}},Zc={kernelName:Je,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Va(n,0);return{x:()=>Yo(r,t,Xa(t,s)),alpha:()=>{let e=Yo(r,Zo(t),Xa(t,n));const i=pi(s.shape,t.shape);return i.length>0&&(e=Za(e,i)),ha(e,s.shape)}}}},Jc=wr({cumprod_:function(t,e=0,n=!1,s=!1){const r={x:xr(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return hr.runKernel(Dt,r,i)}});const Qc={kernelName:Qe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;let i=[];return i=null==r?s.shape.map(((t,e)=>e)):"number"==typeof r?[r]:r,{x:()=>function(t,e,n){const s=t.shape.length,r=s-n.length,i=co(n,s);let a=t;null!=i&&(a=tl(t,i));const o=a.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((t,e)=>t*e),1);o.push(l);let u=function(t,e,n){const s=t.shape.slice();s[n]=1;const r=ha(e,s),i=Jc(t,n,!0,!1),a=Jc(t,n,!0,!0),o=Xa(i,a);return Xa(r,o)}(a.reshape(o),e,r);if(u=u.reshape(a.shape),null!=i){const t=po(i);u=tl(u,t)}return u}(s,t,i)}}},td={kernelName:jt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{const e=Da(t,si(s,"float32")),i=pi(n.shape,r);return i.length>0?ha(Za(e,i),n.shape):e},b:()=>{let e=Xa(t,si(n,"float32"));const i=pi(s.shape,r);i.length>0&&(e=ha(Za(e,i),s.shape));const a=mo(s);return bo(Da(e,si(a,"float32")))}}}},ed={kernelName:rn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,bo(mo(n)))}}},nd={kernelName:dn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Xa(Wl(n,6),ll(n));return{x:()=>Xa(t,si(s,"float32"))}}},sd={kernelName:an,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,si(ll(n),"float32"))}}},rd={kernelName:on,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ha(t,n.shape)}}},id={kernelName:hn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>hr.runKernel(cn,r,n)}}},ad={kernelName:ln,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>hr.runKernel(un,r,n)}}},od={kernelName:pn,gradFunc:(t,e,n)=>{const{dims:s}=n,r=I(s,t.shape);return{x:()=>Ao(t,r)}}},ld={kernelName:fn,gradFunc:t=>({x:()=>Zo(t)})},ud={kernelName:mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>bo(Da(t,Xa(Kl(n,1.5),2)))}}},hd=wr({logicalNot_:function(t){const e={x:xr(t,"x","logicalNot","bool")};return hr.runKernel(Se,e)}}),cd={kernelName:xn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>si(Zo(n),"float32"),t:()=>Xa(t,si(n,t.dtype)),e:()=>Xa(t,si(hd(n),t.dtype))}}},dd={kernelName:yn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Va(n,Vi(0)),s=Vi(Ou),r=Vi(Lu),i=Xa(t,r),a=Xa(Xa(t,s),La(si(n,"float32")));return Yo(e,i,a)}}}},pd={kernelName:Sn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Xa(n,Ya(Vi(1),n)))}}},fd={kernelName:In,gradFunc:t=>({x:()=>Zo(t)})},md=wr({cos_:function(t){const e={x:xr(t,"x","cos","float32")};return hr.runKernel(Ft,e)}}),gd={kernelName:vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(md(si(n,"float32")),t)}}},bd=wr({cosh_:function(t){const e={x:xr(t,"x","cosh","float32")};return hr.runKernel(Mt,e)}}),xd={kernelName:kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(bd(si(n,"float32")),t)}}},yd={kernelName:wn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=Ei(s,r,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>Io(t,u)}}},wd={kernelName:Rn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=Xa(t,s);return{logits:()=>Ya(i,Xa(Za(i,[r],!0),s))}}},vd={kernelName:Cn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Do(n))}}},kd=wr({batchToSpaceND_:function(t,e,n){const s=xr(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));d(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),d(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),d(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const i={x:s},a={blockShape:e,crops:n};return hr.runKernel(bt,i,a)}}),Id={kernelName:$n,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>kd(t,s,r)}}},Sd={kernelName:En,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>wa(t,s)}}},Cd=[Sh,Ch,Nh,Th,$h,Eh,Rh,Ah,Fh,Mh,Dh,_h,Lh,Ph,Bh,Uh,Vh,Gh,Hh,jh,qh,Kh,Yh,Xh,Jh,tc,nc,rc,ic,ac,td,oc,lc,uc,hc,cc,pc,dc,mc,bc,wc,vc,kc,Ic,Sc,Cc,Nc,Tc,$c,Rc,Fc,Fc,Dc,Oc,zc,Pc,Bc,Wc,Uc,Vc,Gc,Hc,jc,qc,Kc,Xc,Xc,Yc,Zc,Qc,ed,nd,sd,rd,id,ad,od,ld,ud,cd,dd,pd,fd,gd,xd,yd,wd,vd,Id,Id,Sd,Sd,{kernelName:Nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Xa(Vo(si(n,"float32")),2))}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Vi(2);return{a:()=>Xa(t,Xa(r,Ya(n,s))),b:()=>Xa(t,Xa(r,Ya(s,n)))}}},{kernelName:Ln,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Xa(si(n,"float32"),2))}}},{kernelName:Qn,gradFunc:t=>({x:()=>Zo(t)})},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=fi(n.shape,s.shape);return{a:()=>{let e=t;const s=pi(n.shape,r);return s.length>0&&(e=Za(e,s)),ha(e,n.shape)},b:()=>{let e=t;const n=pi(s.shape,r);return n.length>0&&(e=Za(e,n)),ha(bo(e),s.shape)}}}},{kernelName:Tn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;I(i,s.shape).forEach((t=>{r[t]=1}));const a=ha(t,r),o=Xa(a,vo(s.shape,"float32"));return{x:()=>o}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,mo(md(n)))}}},{kernelName:Gn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(Ya(Vi(1),mo(n)),t)}}},{kernelName:Hn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Zo(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=ji(e,_o(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)e=ji(e,_o(t,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)e=ji(e,_o(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)e=ji(e,_o(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:Kn,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=po(r);return{x:()=>tl(t,i)}}},{kernelName:Yn,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Ho(t,r)}}},{kernelName:Zn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=so(e,Zo(e)),s=Ua(t,n);let r=Ga(e,Vi(0,"int32"));const i=s.rank-r.rank;for(let t=0;t<i;++t)r=za(r,t+1);r=Qa(r,vo(s.shape,"bool"));const a=Zo(s);return Yo(r,s,a)}(t,n)}}},{kernelName:Jn,gradFunc:t=>({x:()=>Zo(t)})}];for(const t of Cd)ds(t);js().prototype.abs=function(){return this.throwIfDisposed(),Hi(this)};const Nd=wr({acos_:function(t){const e={x:xr(t,"x","acos")};return hr.runKernel(Q,e)}});js().prototype.acos=function(){return this.throwIfDisposed(),Nd(this)};const Td=wr({acosh_:function(t){const e={x:xr(t,"x","acosh")};return hr.runKernel(tt,e)}});js().prototype.acosh=function(){return this.throwIfDisposed(),Td(this)},js().prototype.add=function(t){return this.throwIfDisposed(),ji(this,t)},js().prototype.all=function(t,e){return this.throwIfDisposed(),qi(this,t,e)},js().prototype.any=function(t,e){return this.throwIfDisposed(),Ki(this,t,e)},js().prototype.argMax=function(t){return this.throwIfDisposed(),Xi(this,t)};const $d=wr({argMin_:function(t,e=0){const n={x:xr(t,"x","argMin")},s={axis:e};return hr.runKernel(at,n,s)}});js().prototype.argMin=function(t){return this.throwIfDisposed(),$d(this,t)},js().prototype.asScalar=function(){return this.throwIfDisposed(),d(1===this.size,(()=>"The array must have only 1 element.")),ha(this,[])},js().prototype.asType=function(t){return this.throwIfDisposed(),si(this,t)},js().prototype.as1D=function(){return this.throwIfDisposed(),ha(this,[this.size])},js().prototype.as2D=function(t,e){return this.throwIfDisposed(),ha(this,[t,e])},js().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),ha(this,[t,e,n])},js().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),ha(this,[t,e,n,s])},js().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),ha(this,[t,e,n,s,r])};const Ed=wr({asin_:function(t){const e={x:xr(t,"x","asin")};return hr.runKernel(ot,e)}});js().prototype.asin=function(){return this.throwIfDisposed(),Ed(this)};const Rd=wr({asinh_:function(t){const e={x:xr(t,"x","asinh")};return hr.runKernel(lt,e)}});js().prototype.asinh=function(){return this.throwIfDisposed(),Rd(this)};const Ad=wr({atan_:function(t){const e={x:xr(t,"x","atan")};return hr.runKernel(ut,e)}});js().prototype.atan=function(){return this.throwIfDisposed(),Ad(this)};const Fd=wr({atan2_:function(t,e){let n=xr(t,"a","atan2"),s=xr(e,"b","atan2");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(ct,r)}});js().prototype.atan2=function(t){return this.throwIfDisposed(),Fd(this,t)};const Md=wr({atanh_:function(t){const e={x:xr(t,"x","atanh")};return hr.runKernel(ht,e)}});js().prototype.atanh=function(){return this.throwIfDisposed(),Md(this)},js().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),ca(this,t,e,n,s)},js().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),kd(this,t,e)},js().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),pa(this,t,e,n,s,r)},js().prototype.broadcastTo=function(t){return this.throwIfDisposed(),ba(this,t)},js().prototype.cast=function(t){return this.throwIfDisposed(),si(this,t)};const Dd=wr({ceil_:function(t){const e={x:xr(t,"x","ceil","float32")};return hr.runKernel(vt,e)}});js().prototype.ceil=function(){return this.throwIfDisposed(),Dd(this)},js().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ya(this,t,e)},js().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Hs&&(t=[t]),wa([this,...t],e)},js().prototype.conv1d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Na(this,t,e,n,s,r,i)},js().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),$a(this,t,e,n,s,r)},js().prototype.conv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Ca(this,t,e,n,s,r,i)},js().prototype.cos=function(){return this.throwIfDisposed(),md(this)},js().prototype.cosh=function(){return this.throwIfDisposed(),bd(this)},js().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Jc(this,t,e,n)},js().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),sc(this,t,e,n)};const _d=wr({depthToSpace_:function(t,e,n="NHWC"){const s=xr(t,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];d(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),d(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),d(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),d(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return hr.runKernel(zt,o,l)}});js().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),_d(this,t,e)},js().prototype.depthwiseConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Fa(this,t,e,n,s,r,i)};const Od=wr({dilation2d_:function(t,e,n,s,r=[1,1],i="NHWC"){const a=xr(t,"x","dilation2d"),o=xr(e,"filter","dilation2d");d(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),d(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),d("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=ha(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const h={x:l,filter:o},c={strides:n,pad:s,dilations:r},p=hr.runKernel(Vt,h,c);return u?ha(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});js().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),Od(this,t,e,n,s,r)};const Ld=wr({divNoNan_:function(t,e){let n=xr(t,"a","div"),s=xr(e,"b","div");[n,s]=nr(n,s);const r=Da(n,s),i=Zo(r),a=Oa(s,i);return Yo(a,i,r)}});js().prototype.divNoNan=function(t){return this.throwIfDisposed(),Ld(this,t)},js().prototype.div=function(t){return this.throwIfDisposed(),Da(this,t)};const zd=wr({dot_:function(t,e){const n=xr(t,"t1","dot"),s=xr(e,"t2","dot");d(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(d(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const t=ha(n,[1,-1]),e=ha(s,[-1,1]),r=to(t,e);return ha(r,[])}if(1===n.rank&&2===s.rank){const t=ha(n,[1,-1]),e=ha(s,[s.shape[0],s.shape[1]]),r=to(t,e);return ha(r,[r.size])}if(2===n.rank&&1===s.rank){const t=ha(s,[-1,1]),e=to(n,t);return ha(e,[e.size])}{const t=ha(s,[s.shape[0],s.shape[1]]);return to(n,t)}}});js().prototype.dot=function(t){return this.throwIfDisposed(),zd(this,t)},js().prototype.elu=function(){return this.throwIfDisposed(),_a(this)},js().prototype.equal=function(t){return this.throwIfDisposed(),Oa(this,t)};const Pd=wr({erf_:function(t){let e=xr(t,"x","erf");d("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=si(e,"float32"));const n={x:e};return hr.runKernel(Yt,n)}});js().prototype.erf=function(){return this.throwIfDisposed(),Pd(this)};const Bd=wr({euclideanNorm_:function(t,e=null,n=!1){return Yl(t,"euclidean",e,n)}});js().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Bd(this,t,e)},js().prototype.exp=function(){return this.throwIfDisposed(),La(this)},js().prototype.expandDims=function(t){return this.throwIfDisposed(),za(this,t)};const Wd=wr({expm1_:function(t){const e={x:xr(t,"x","expm1")};return hr.runKernel(te,e)}});js().prototype.expm1=function(){return this.throwIfDisposed(),Wd(this)},js().prototype.fft=function(){return this.throwIfDisposed(),nl(this)},js().prototype.flatten=function(){return this.throwIfDisposed(),ha(this,[this.size])},js().prototype.floor=function(){return this.throwIfDisposed(),Wa(this)},js().prototype.floorDiv=function(t){return this.throwIfDisposed(),Ma(this,t)},js().prototype.gather=function(t,e){return this.throwIfDisposed(),Ua(this,t,e)},js().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ga(this,t)},js().prototype.greater=function(t){return this.throwIfDisposed(),Va(this,t)},js().prototype.ifft=function(){return this.throwIfDisposed(),rl(this)},js().prototype.irfft=function(){return this.throwIfDisposed(),il(this)};const Ud=wr({isFinite_:function(t){const e={x:xr(t,"x","isFinite")};return hr.runKernel(fe,e)}});js().prototype.isFinite=function(){return this.throwIfDisposed(),Ud(this)};const Vd=wr({isInf_:function(t){const e={x:xr(t,"x","isInf")};return hr.runKernel(me,e)}});js().prototype.isInf=function(){return this.throwIfDisposed(),Vd(this)};const Gd=wr({isNaN_:function(t){const e={x:xr(t,"x","isNaN")};return hr.runKernel(ge,e)}});js().prototype.isNaN=function(){return this.throwIfDisposed(),Gd(this)},js().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ha(this,t)},js().prototype.lessEqual=function(t){return this.throwIfDisposed(),Wl(this,t)},js().prototype.less=function(t){return this.throwIfDisposed(),Mc(this,t)};const Hd=wr({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const i=xr(t,"x","localResponseNormalization");d(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),d(x(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=ha(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},h=hr.runKernel(Ne,l,u);return o?ha(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});js().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),Hd(this,t,e,n,s)};const jd=wr({logSigmoid_:function(t){const e=xr(t,"x","logSigmoid"),n=Ui((t=>({value:bo(Wo(bo(t))),gradFunc:e=>Xa(e,Do(bo(t)))})));return n(e)}});js().prototype.logSigmoid=function(){return this.throwIfDisposed(),jd(this)},js().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ja(this,t)},js().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),su(this,t,e)},js().prototype.log=function(){return this.throwIfDisposed(),ja(this)},js().prototype.log1p=function(){return this.throwIfDisposed(),qa(this)},js().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Qa(this,t)},js().prototype.logicalNot=function(){return this.throwIfDisposed(),hd(this)};const qd=wr({logicalOr_:function(t,e){const n=xr(t,"a","logicalOr","bool"),s=xr(e,"b","logicalOr","bool");fi(n.shape,s.shape);const r={a:n,b:s};return hr.runKernel(Ce,r)}});js().prototype.logicalOr=function(t){return this.throwIfDisposed(),qd(this,t)};const Kd=wr({logicalXor_:function(t,e){const n=xr(t,"a","logicalXor","bool"),s=xr(e,"b","logicalXor","bool");return fi(n.shape,s.shape),Qa(qd(t,e),hd(Qa(t,e)))}});js().prototype.logicalXor=function(t){return this.throwIfDisposed(),Kd(this,t)},js().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),to(this,t,e,n)},js().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),eo(this,t,e,n,s)},js().prototype.max=function(t,e){return this.throwIfDisposed(),Ka(this,t,e)},js().prototype.maximum=function(t){return this.throwIfDisposed(),so(this,t)},js().prototype.mean=function(t,e){return this.throwIfDisposed(),ro(this,t,e)},js().prototype.min=function(t,e){return this.throwIfDisposed(),ql(this,t,e)},js().prototype.minimum=function(t){return this.throwIfDisposed(),io(this,t)};const Xd=wr({mirrorPad_:function(t,e,n){d("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=xr(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)d(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:e,mode:n},a={x:s};return hr.runKernel(ze,a,i)}});js().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Xd(this,t,e)};const Yd=wr({mod_:function(t,e){let n=xr(t,"a","mod"),s=xr(e,"b","mod");[n,s]=nr(n,s);const r={a:n,b:s};return hr.runKernel(Pe,r)}});js().prototype.mod=function(t){return this.throwIfDisposed(),Yd(this,t)},js().prototype.mul=function(t){return this.throwIfDisposed(),Xa(this,t)},js().prototype.neg=function(){return this.throwIfDisposed(),bo(this)},js().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Yl(this,t,e,n)},js().prototype.notEqual=function(t){return this.throwIfDisposed(),xo(this,t)},js().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),yo(this,t,e,n)},js().prototype.onesLike=function(){return this.throwIfDisposed(),ko(this)},js().prototype.pad=function(t,e){return this.throwIfDisposed(),Io(this,t,e)};const Zd=wr({pool_:function(t,e,n,s,r,i,a){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const o=xr(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=ha(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(oa(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const h=Zi(l.shape,e,i,r,s),c=[h.dilationHeight,h.dilationWidth];let p;p="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([h.filterHeight,h.filterWidth],c):[[0,0],[0,0]];const f=1===c[0]&&1===c[1],[m,g]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),i=t.concat(s,r),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=r.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([h.inHeight,h.inWidth],c,p),b=f?s:"valid",x=f?l:Wh(l,c,m),y=("avg"===n?()=>ca(x,e,i,b,a):()=>eo(x,e,i,b,a))(),w=f?y:kd(y,c,g);return u?ha(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});js().prototype.pool=function(t,e,n,s,r,i){return this.throwIfDisposed(),Zd(this,t,e,n,s,r,i)},js().prototype.pow=function(t){return this.throwIfDisposed(),Kl(this,t)},js().prototype.prelu=function(t){return this.throwIfDisposed(),So(this,t)};const Jd=wr({prod_:function(t,e=null,n=!1){let s=xr(t,"x","prod");"bool"===s.dtype&&(s=si(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return hr.runKernel(Qe,r,i)}});js().prototype.prod=function(t,e){return this.throwIfDisposed(),Jd(this,t,e)};const Qd=wr({reciprocal_:function(t){const e={x:xr(t,"x","reciprocal")};return hr.runKernel(rn,e)}});js().prototype.reciprocal=function(){return this.throwIfDisposed(),Qd(this)},js().prototype.relu=function(){return this.throwIfDisposed(),Ro(this)},js().prototype.relu6=function(){return this.throwIfDisposed(),ol(this)},js().prototype.reshapeAs=function(t){return this.throwIfDisposed(),ha(this,t.shape)},js().prototype.reshape=function(t){return this.throwIfDisposed(),ha(this,t)},js().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),zl(this,t,e,n)},js().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Pl(this,t,e,n)},js().prototype.reverse=function(t){return this.throwIfDisposed(),Ao(this,t)},js().prototype.rfft=function(){return this.throwIfDisposed(),sl(this)},js().prototype.round=function(){return this.throwIfDisposed(),Ul(this)},js().prototype.rsqrt=function(){return this.throwIfDisposed(),fc(this)},js().prototype.selu=function(){return this.throwIfDisposed(),Fo(this)},js().prototype.separableConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Mo(this,t,e,n,s,r,i)},js().prototype.sigmoid=function(){return this.throwIfDisposed(),Do(this)};const tp=wr({sign_:function(t){const e={x:xr(t,"x","sign")};return hr.runKernel(In,e)}});js().prototype.sign=function(){return this.throwIfDisposed(),tp(this)},js().prototype.sin=function(){return this.throwIfDisposed(),Qh(this)},js().prototype.sinh=function(){return this.throwIfDisposed(),ec(this)},js().prototype.slice=function(t,e){return this.throwIfDisposed(),_o(this,t,e)},js().prototype.softmax=function(t){return this.throwIfDisposed(),Bo(this,t)},js().prototype.softplus=function(){return this.throwIfDisposed(),Wo(this)},js().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Wh(this,t,e)},js().prototype.split=function(t,e){return this.throwIfDisposed(),Uo(this,t,e)},js().prototype.sqrt=function(){return this.throwIfDisposed(),Vo(this)},js().prototype.square=function(){return this.throwIfDisposed(),mo(this)},js().prototype.squaredDifference=function(t){return this.throwIfDisposed(),nu(this,t)},js().prototype.squeeze=function(t){return this.throwIfDisposed(),Go(this,t)},js().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Hs?[this,t]:[this,...t];return Ho(n,e)},js().prototype.step=function(t){return this.throwIfDisposed(),ll(this,t)};const ep=wr({stridedSlice_:function(t,e,n,s,r=0,i=0,a=0,o=0,l=0){const u={x:xr(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return hr.runKernel(zn,u,h)}});js().prototype.stridedSlice=function(t,e,n,s,r,i,a,o){return this.throwIfDisposed(),ep(this,t,e,n,s,r,i,a,o)},js().prototype.sub=function(t){return this.throwIfDisposed(),Ya(this,t)},js().prototype.sum=function(t,e){return this.throwIfDisposed(),Za(this,t,e)};const np=wr({tan_:function(t){const e={x:xr(t,"x","tan","float32")};return hr.runKernel(Vn,e)}});js().prototype.tan=function(){return this.throwIfDisposed(),np(this)},js().prototype.tanh=function(){return this.throwIfDisposed(),jo(this)},js().prototype.tile=function(t){return this.throwIfDisposed(),Pa(this,t)},js().prototype.toBool=function(){return this.throwIfDisposed(),si(this,"bool")},js().prototype.toFloat=function(){return this.throwIfDisposed(),si(this,"float32")},js().prototype.toInt=function(){return this.throwIfDisposed(),si(this,"int32")};const sp=wr({topk_:function(t,e=1,n=!0){const s=xr(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:n},[o,l]=hr.runKernel(jn,i,a);return{values:o,indices:l}}});js().prototype.topk=function(t,e){return this.throwIfDisposed(),sp(this,t,e)},js().prototype.transpose=function(t){return this.throwIfDisposed(),tl(this,t)};const rp=wr({unique_:function(t,e=0){const n=xr(t,"x","unique","string_or_numeric");d(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[i,a]=hr.runKernel(Xn,s,r);return{values:i,indices:a}}});js().prototype.unique=function(t){return this.throwIfDisposed(),rp(this,t)},js().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),gc(this,t,e)},js().prototype.unstack=function(t){return this.throwIfDisposed(),Xo(this,t)},js().prototype.where=function(t,e){return this.throwIfDisposed(),Yo(t,this,e)},js().prototype.zerosLike=function(){return this.throwIfDisposed(),Zo(this)};class ip extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ip.prototype)}}class ap extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ap.prototype)}}class op extends Error{constructor(t){super(t),Object.setPrototypeOf(this,op.prototype)}}class lp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,lp.prototype)}}class up extends Error{constructor(t){super(t),Object.setPrototypeOf(this,up.prototype)}}class hp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,hp.prototype)}}class cp{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function dp(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function pp(t,e){if(!t)throw new up(e)}function fp(t,e){let n=0;for(const s of t)s===e&&n++;return n}function mp(t){return 1===t.length?t[0]:t}function gp(t){return Array.isArray(t)?t:[t]}function bp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function xp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let yp={};function wp(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function vp(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>vp(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?vp(e):t[n]=e.value)}}}function kp(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let i;if(r in n)i=n[r];else if(r in yp)i=yp[r];else if(i=e[r],null==i)throw new op(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new op(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in yp?[o,l]=yp.className:a in e&&([o,l]=e[a]),null==o)throw new op(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(yp))t[e]=yp[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},yp);for(const t of Object.keys(n))yp[t]=n[t];vp(i.config);const s=l(o,i.config,n,r);return yp=Object.assign({},e),s}{const t=Object.assign({},yp);for(const t of Object.keys(n))yp[t]=n[t];const e=new o(i.config);return yp=Object.assign({},t),e}}}function Ip(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Sp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Cp(t){if(null==t)throw new op(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Np(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new op(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Tp(t,e,n=0,s=1/0){return pp(n>=0),pp(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function $p(t,e){Array.isArray(t)?(d(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>$p(t,`element ${n+1} of ${e}`)))):d(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${Ep(t)}.`))}function Ep(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Ep(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Rp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Ap=0;function Fp(){return Ap++}const Mp={};function Dp(t=""){return t in Mp||(Mp[t]=0),Mp[t]+=1,t+Mp[t].toString()}const _p=["channelsFirst","channelsLast"],Op=["nearest","bilinear"],Lp=["valid","same","causal"],zp=["max","avg"],Pp=["sum","mul","concat","ave"],Bp=new Map;function Wp(t){Np(_p,"DataFormat",t)}function Up(t){Np(Lp,"PaddingMode",t)}function Vp(t){Np(zp,"PoolMode",t)}const Gp=[];function Hp(t,e){Gp.push(t);try{const t=e();return Gp.pop(),t}catch(t){throw Gp.pop(),t}}function jp(t){if(!Xp(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Gp.length?"":Gp.join("/")+"/")+t}function qp(t){if(!Xp(t))throw new Error("Not a valid tensor name: '"+t+"'");Bp.has(t)||Bp.set(t,0);const e=Bp.get(t);if(Bp.set(t,Bp.get(t)+1),e>0){const n=`${t}_${e}`;return Bp.set(n,1),n}return t}const Kp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Xp(t){return!!t.match(Kp)}function Yp(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function Zp(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function Jp(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function Qp(t,e){if(e<t)throw new op(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}let tf;function ef(){return null==tf&&(tf=Wi().epsilon()),tf}function nf(t,e){return si(t,e)}function sf(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),ha(t,n)}function rf(t,e,n){return Li((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:return Lo(t,[e,0],[n,t.shape[1]]);case 3:return zo(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Po(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return _o(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return _o(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new op(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function af(t,e,n){return Li((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:return Lo(t,[0,e],[t.shape[0],n]);case 3:return zo(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Po(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new op(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function of(t,e,n,s){return Li((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:switch(s){case 1:return rf(t,e,n);case 2:return af(t,e,n);default:throw new op(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return rf(t,e,n);case 2:return zo(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return af(t,e,n);default:throw new op(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return rf(t,e,n);case 2:return Po(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Po(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return af(t,e,n);default:throw new op(`The axis is not within the rank of the tensor ${s}`)}default:throw new op(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function lf(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),wa(t,e)}function uf(t,e){switch(t.rank){case 1:return va([t,e]);case 2:return ka([t,e],0);case 3:return Ia([t,e],0);case 4:return Sa([t,e],0);default:throw new op(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function hf(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new op(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Pa(t,e)}function cf(t,e=0,n=1,s,r){return $o(t,e,n,s,r)}function df(t,e,n,s){if(t.rank<2||e.rank<2)throw new lp(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new lp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return gl({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?mf(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),i=r.pop();t=ha(t,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=ha(tl(e,h),[l,-1]);const c=[...r,...u];return ha(gl({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?mf(t.rank,s,"channelsLast"):null,activation:n}),c)}}function pf(t,e,n){return Li((()=>(e=Array.isArray(e)?qo(e,"int32"):si(e,"int32"),Ua(t,e,n))))}function ff(t){return Xa(t,t)}function mf(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new op(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?ha(e,[1,s[0],1,1,1]):ha(e,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?ha(e,[1,1,1,1,s[0]]):ha(e,[1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?ha(e,[1,s[0],1,1]):ha(e,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?ha(e,[1,1,1,s[0]]):ha(e,[1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?ha(e,[1,s[0],1]):ha(e,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?ha(e,[1,1,s[0]]):ha(e,[1].concat(s))}else if(t<3)return e;throw new op(`Unsupported input rank by biasAdd: ${e.rank}`)}function gf(t,e,n){return Li((()=>(null==n&&(n="channelsLast"),Wp(n),ji(t,mf(t.rank,e,n)))))}function bf(t,e,n,s){return Li((()=>el(t,e,n,s)))}function xf(t,e,n=!1){return n?t():e()}const yf=["fanIn","fanOut","fanAvg"],wf=["normal","uniform","truncatedNormal"];class vf extends Fi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class kf extends vf{apply(t,e){return wo(t,e)}}kf.className="Zeros",Di(kf);class If extends vf{apply(t,e){return vo(t,e)}}If.className="Ones",Di(If);class Sf extends vf{constructor(t){if(super(),"object"!=typeof t)throw new op(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new op(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Li((()=>Xa(Vi(this.value),vo(t,e))))}getConfig(){return{value:this.value}}}Sf.className="Constant",Di(Sf);class Cf extends vf{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Eo(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cf.className="RandomUniform",Di(Cf);class Nf extends vf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lp(`randomNormal does not support dType ${e}.`);return cf(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Nf.className="RandomNormal",Di(Nf);class Tf extends vf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lp(`truncatedNormal does not support dType ${e}.`);return Ko(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Tf.className="TruncatedNormal",Di(Tf);class $f extends vf{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Li((()=>{if(2!==t.length||t[0]!==t[1])throw new op("Identity matrix initializer can only be used for 2D square matrices.");return Xa(this.gain,Ba(t[0]))}))}getConfig(){return{gain:this.gain}}}$f.className="Identity",Di($f);class Ef extends vf{constructor(t){if(super(),t.scale<0)throw new op(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Np(yf,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Np(wf,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(Wp(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Yp(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=Yp(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=Yp(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lp(`${this.getClassName()} does not support dType ${e}.`);return Ko(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Eo(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ef.className="VarianceScaling",Di(Ef);class Rf extends Ef{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}Rf.className="GlorotUniform",Di(Rf);class Af extends Ef{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}Af.className="GlorotNormal",Di(Af);class Ff extends Ef{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}Ff.className="HeNormal",Di(Ff);class Mf extends Ef{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}Mf.className="HeUniform",Di(Mf);class Df extends Ef{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}Df.className="LeCunNormal",Di(Df);class _f extends Ef{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ef.className}}_f.className="LeCunNormal",Di(_f);class Of extends vf{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new lp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Li((()=>{if(t.length<2)throw new lp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=cf(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=iu.gramSchmidt(e);return t[0]>t[1]&&(n=tl(n)),Xa(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Of.className="Orthogonal",Di(Of);const Lf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function zf(t,e={}){return kp(t,Mi.getMap().classNameMap,e,"initializer")}function Pf(t){return wp(t)}function Bf(t){if("string"==typeof t){const e=t in Lf?Lf[t]:t;if("GlorotNormal"===e)return new Af;if("GlorotUniform"===e)return new Rf;if("HeNormal"===e)return new Ff;if("HeUniform"===e)return new Mf;if("LeCunNormal"===e)return new Df;if("LeCunUniform"===e)return new _f;{const t={};return t.className=e,t.config={},zf(t)}}return t instanceof vf?t:zf(t)}function Wf(t){return Array.isArray(t)&&Array.isArray(t[0])}function Uf(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Vf(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new op(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Gf(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new op(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Hf(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class jf{constructor(t,e="float32",n="Variable",s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Fp(),n=null==n?"Variable":n,this.originalName=jp(n),this.name=qp(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return hr.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function qf(t){return t.map((t=>t.read()))}function Kf(t){t.forEach((t=>{t[0].write(t[1])}))}class Xf{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Yf{constructor(t,e,n,s,r,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=Fp(),null!=i&&(this.originalName=jp(i),this.name=qp(this.originalName)),this.rank=e.length}}let Zf=0;class Jf{constructor(t,e){this.callArgs=e,this.id=Zf++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Qf=0;class tm extends Fi{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Qf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=bp(t)+"_"+Dp(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new ap(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new op(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return mp(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return mp(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ip(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ip(`Layer ${this.name} is not connected, no input to return.`);return mp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ip(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ip(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return mp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=gp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=gp(this.inputSpec);if(t.length!==e.length)throw new op(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new op(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new op(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new op(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new op(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),i=r.axes[e],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new op(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],i=s.shape[t];if(null!=e&&null!=i&&e!==i)throw new op(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=gp(t);let s=!0;for(const t of n)if(!(t instanceof Yf)){s=!1;break}let r=!0;for(const t of n)if(t instanceof Yf){r=!1;break}if(s===r)throw new op("Arguments to apply() must be all SymbolicTensors or all Tensors");return Hp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of gp(t))e.push(n.shape);this.build(mp(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=gp(s),i=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(s=mp(i),null!=this.activityRegularizer)throw new lp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=gp(t);const e=[];for(const n of t)e.push(n.shape);return mp(e)}(t),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Yf(i,n,this,gp(t),e,this.name,s))):new Yf(i,s,this,gp(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new lp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ip(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new ip(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ap(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Hf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return qf(t?this.trainableWeights:this.weights)}setWeights(t){Li((()=>{const e=this.weights;if(e.length!==t.length)throw new op(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=qf(e);for(let r=0;r<s.length;++r){const i=s[r],a=e[r],o=t[r];if(!b(i.shape,o.shape))throw new op(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Kf(n)}))}addWeight(t,e,n,s,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new op(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Bf("zeros"));const l=s.apply(e,n),u=new jf(l,n,t,i,a);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=gp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,i,a=null){const o=gp(t);e=gp(e),n=gp(n),s=gp(s),r=Uf(r),i=Uf(i);const l=[],u=[],h=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),h.push(t.tensorIndex);new Jf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function em(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=em(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class nm extends tm{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Dp("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new op("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new op("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new op("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new Yf(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Jf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new op(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}nm.className="InputLayer",Di(nm);class sm{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof sm)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new op(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return si(e,t.dtype)}catch(n){throw new op(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Yf){if(null==this.id2Value[t.id])throw new op(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new op(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Yf){if(null==this.id2Value[t.id])throw new op(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new op(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&zi(this.id2Mask)}}const rm=new cp,im=new cp;function am(t,e,n,s){const r=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().sort().join(",");let c,p=rm.get(h);if(null==p){const t=function(t,e){d(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=lm(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:t,recipientMap:a}=lm(i,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:om(s)}}(a,e);p=t.sorted,c=t.recipientCounts,rm.put(h,p),im.put(h,c)}c={},r||Object.assign(c,im.get(h));const f=new sm(e);for(let t=0;t<p.length;++t){if(null!=s){const t=Oi().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const i=p[t],a=i.sourceLayer;if(a instanceof nm)continue;const u=[],h=[],d=[];let m=!1;for(const t of i.inputs){const n=f.getValue(t),s=f.getMask(t);u.push(n),h.push(s),null!=s&&(m=!0),r||(c[t.name]--,0!==c[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||d.push(n))}m&&((n=n||{}).mask=h[0]);const g=gp(a.apply(u,n));let b=null;a.supportsMasking&&(b=a.computeMask(u,h));const x=um(i),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){f.hasKey(y[t])||f.add(y[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=g[t])}r||zi(d)}return f.disposeMasks(),i?l:l[0]}function om(t){const e={};for(const n in t)e[n]=t[n].size;return e}function lm(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),s.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:s,recipientMap:r}}function um(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function hm(t,e){return Li((()=>Vo(Za(Xa(t,t),e,!0))))}q().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=rm&&rm.setMaxEntries(t),null!=im&&im.setMaxEntries(t)}));class cm extends Fi{getConfig(){return{}}}class dm extends cm{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Li((()=>{const e=hm(t,this.axis),n=ya(e,0,this.maxValue);return Xa(t,Da(n,ji(ef(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}dm.className="MaxNorm",Di(dm);class pm extends cm{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Li((()=>Da(t,ji(ef(),hm(t,this.axis)))))}getConfig(){return{axis:this.axis}}}pm.className="UnitNorm",Di(pm);class fm extends cm{apply(t){return Ro(t)}}fm.className="NonNeg",Di(fm);class mm extends cm{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Li((()=>{const e=hm(t,this.axis),n=ji(Xa(this.rate,ya(e,this.minValue,this.maxValue)),Xa(1-this.rate,e));return Xa(t,Da(n,ji(ef(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}mm.className="MinMaxNorm",Di(mm);const gm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function bm(t){return wp(t)}function xm(t,e={}){return kp(t,Mi.getMap().classNameMap,e,"constraint")}function ym(t){return null==t?null:"string"==typeof t?xm({className:t in gm?gm[t]:t,config:{}}):t instanceof cm?t:xm(t)}async function wm(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];zi(s)}}function vm(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var km;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(km||(km={}));class Im{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Sm{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Cm extends Im{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=Li((()=>ji(this.totals[t],Xa(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Li((()=>{const n=Xa(Da(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Pi(e[t])})))}}class Nm extends Im{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];t.push(a.data()),e.push(s),n.push(i)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class Tm extends Im{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||gu,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let s,r=null!=n?n():Rs();return(...i)=>{const a=null!=n?n():Rs();return a-r<e||(r=a,s=t(...i)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await wm(n),s.push(this.yield(t,e,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await wm(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await wm(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await wm(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await wm(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):A(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await wm(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await wm(t),await this.trainEnd(t))}}function $m(t,e){return null==t&&(t={}),t instanceof Im?[t]:Array.isArray(t)&&t[0]instanceof Im?t:gp(t).map((t=>new Tm(t,e)))}class Em{constructor(){}static registerCallbackConstructor(t,e){d(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Em.checkForDuplicate(e),null==Em.constructors[t]&&(Em.constructors[t]=[]),Em.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Em.constructors)Em.constructors[+e].forEach((e=>{if(e===t)throw new op("Duplicate callback constructor.")}))}static clear(){Em.constructors={}}static createCallbacks(t){const e=[];for(const n in Em.constructors){const s=+n;t>=s&&e.push(...Em.constructors[s])}return e.map((t=>new t))}}function Rm(t,e,n,s,r,i,a,o,l){const u=new Nm,h=[new Cm,...Em.createCallbacks(e)];null!=t&&h.push(...t),h.push(u);const c=new Sm(h);return c.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:c,history:u}}function Am(t,e={},n=!1){return kp(t,Mi.getMap().classNameMap,e,"layer",n)}function Fm(t,e){return Li((()=>{"float32"!==t.dtype&&(t=si(t,"float32"));const n=Za(ff(t),e,!0),s=xa(n.shape,ef()),r=Vo(so(n,s));return Da(t,r)}))}function Mm(t,e){return Li((()=>ro(ff(Ya(e,t)),-1)))}function Dm(t,e){return Li((()=>ro(Hi(Ya(e,t)),-1)))}function _m(t,e){return Li((()=>{const n=Ya(t,e),s=ya(Hi(t),ef(),Number.MAX_VALUE),r=Hi(Da(n,s));return Xa(100,ro(r,-1))}))}function Om(t,e,n=!1){return Li((()=>{if(n)e=Bo(e);else{const t=Za(e,e.shape.length-1,!0);e=Da(e,t)}return e=ya(e,ef(),1-ef()),bo(Za(Xa(si(t,"float32"),ja(e)),e.shape.length-1))}))}function Lm(t,e,n=!1){return Li((()=>{const s=si(Wa(function(t){const e=[Yp(t.shape)];return ha(t,e)}(t)),"int32"),r=(e=ya(e,ef(),1-ef())).shape;return Om(ha(yo(s,r[r.length-1]),r),e,n)}))}function zm(t,e){return Li((()=>{let n;return n=ya(e,ef(),1-ef()),n=ja(Da(n,Ya(1,n))),ro(function(t,e){if(!b(t.shape,e.shape))throw new op(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Li((()=>{const n=Ro(e),s=bo(Hi(e));return ji(Ya(n,Xa(e,t)),qa(La(s)))}))}(t,n),-1)}))}function Pm(t,e){return Li((()=>{const n=Fm(t,-1),s=Fm(e,-1),r=Xa(n,s);return bo(Za(r,-1))}))}Em.constructors={};const Bm={meanSquaredError:Mm,meanAbsoluteError:Dm,meanAbsolutePercentageError:_m,meanSquaredLogarithmicError:function(t,e){return Li((()=>{const n=ya(e,ef(),Number.MAX_VALUE),s=ja(ji(1,n)),r=ya(t,ef(),Number.MAX_VALUE),i=ja(ji(1,r));return ro(ff(Ya(s,i)),-1)}))},squaredHinge:function(t,e){return Li((()=>{const n=so(0,Ya(1,Xa(t,e)));return ro(ff(n),-1)}))},hinge:function(t,e){return Li((()=>{const n=so(0,Ya(1,Xa(t,e)));return ro(n,-1)}))},categoricalHinge:function(t,e){return Li((()=>{const n=Za(Xa(t,e),-1),s=Ka(Xa(Ya(1,t),e),-1);return so(0,ji(1,Ya(s,n)))}))},logcosh:function(t,e){return Li((()=>{const n=Math.log(2),s=Ya(e,t),r=Ya(ji(s,Wo(Xa(-2,s))),n);return ro(r,-1)}))},categoricalCrossentropy:Om,sparseCategoricalCrossentropy:Lm,binaryCrossentropy:zm,kullbackLeiblerDivergence:function(t,e){return Li((()=>{const n=ya(t,ef(),1),s=ya(e,ef(),1);return Za(Xa(t,ja(Da(n,s))),-1)}))},poisson:function(t,e){return Li((()=>{const n=ja(ji(ef(),e));return ro(Ya(e,Xa(t,n)),-1)}))},cosineProximity:Pm};function Wm(t){if("string"==typeof t){if(t in Bm)return Bm[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new op(e)}return t}function Um(t,e){return Li((()=>{const n=Xa(.5,ko(e)),s=nf(Va(e,n),t.dtype);return ro(Oa(t,s),-1)}))}function Vm(t,e){return Li((()=>nf(Oa(Xi(t,-1),Xi(e,-1)),"float32")))}function Gm(t,e){return zm(t,e)}function Hm(t,e){return t.rank===e.rank&&(t=Go(t,[t.rank-1])),(e=Xi(e,-1)).dtype!==t.dtype&&(e=si(e,t.dtype)),si(Oa(t,e),"float32")}const jm=Om,qm=Lm,Km={binaryAccuracy:Um,categoricalAccuracy:Vm,precision:function(t,e){return Li((()=>{const n=function(t,e){return Li((()=>si(Za(Qa(Oa(t,1),Oa(e,1))),"float32")))}(t,e),s=function(t,e){return Li((()=>si(Za(Qa(Oa(t,0),Oa(e,1))),"float32")))}(t,e),r=ji(n,s);return si(Yo(Va(r,0),Da(n,r),0),"float32")}))},categoricalCrossentropy:jm,sparseCategoricalCrossentropy:qm,mse:Mm,MSE:Mm,mae:Dm,MAE:Dm,mape:_m,MAPE:_m,cosine:Pm};function Xm(t){if("string"==typeof t&&t in Km)return Km[t];if("string"!=typeof t&&null!=t)return t;throw new op(`Unknown metric ${t}`)}function Ym(t){if(pp(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Bm))if(Bm[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Km))if(Km[n]===t){e=n;break}return void 0!==e?e:t.name}}function Zm(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Jm(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Jm(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Jm(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Jm(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Qm(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function tg(t,e,n){let s,r;try{r=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){r="multiple"}try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}Qm([`${t.name} (${t.getClassName()})`,r,s,t.countParams().toString()],e,n)}function eg(t,e,n,s){let r,i;try{i=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){i="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];a.push(`${n}[${s}][${r}]`)}const o=t.name,l=t.getClassName(),u=0===a.length?"":a[0];Qm([`${o} (${l})`,i,r,t.countParams().toString(),u],e,s);for(let t=1;t<a.length;++t)Qm(["","","","",a[t]],e,s)}function ng(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function sg(t,e){if(null===t)return null;if("string"==typeof t)return xp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];ng(e,r,s)?n.push(s):n.push(sg(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=xp(n);e[t]=sg(s,t)}}return e}}function rg(t,e){if(null==t)return null;if("string"==typeof t)return bp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];ng(e,r,s)?n.push(s):n.push(rg(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[bp(n)]="name"!==n&&"className"!==n||"string"!=typeof s?rg(s,n):s}return e}}class ig extends tm{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Dp(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Sp(this.inputs).length!==this.inputs.length)throw new op(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Sp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;pp(0===n,"input layer has >1 nodes"),pp(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof nm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},i={},a=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new ap(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(ig.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const h=u.inboundLayers.length;for(let t=0;t<h;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(s,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const h=a.slice().reverse();for(const t of h){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];i=Math.max(i,a),s[t.outboundLayer.id]=i,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],a=t.nodeIndices[s],o=r.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const c={};for(const t in e){const s=e[t];s in c||(c[s]=[]),c[s].push(n[t])}const d={};for(const t in s){const e=s[t];e in d||(d[e]=[]),d[e].push(r[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(Ip);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],s=i[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof ig&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(c).map((t=>parseInt(t,10))).sort(Ip);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of c[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ap(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=c;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new ap(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Jf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new op("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new op(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let i=s;if(null==n[s]){const t=s.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])r.push([n[i],t[s]]);else if(e)throw new op(`Provided weight data has no target variable: ${s}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new op(`${t.length} of ${s} weights are not set: ${t}`)}Kf(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.21.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=rg(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Li((()=>{t=gp(t);const n=new sm;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return am(this.outputs,n,e)}))}computeMask(t,e){return Li((()=>{let n;return t=gp(t),n=null==e?dp(null,t.length):gp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Uf(t);if(e.length!==this.inputLayers.length)throw new op(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Ip);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=Uf(e.computeOutputShape(mp(s))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${i}_${t}`]=r[t]}}const r=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;i.push(r)}for(let t=0;t<i.length;t++){const e=i[t];pp(e in n),r.push(n[e])}return mp(r)}runInternalGraph(t,e){null==e&&(e=dp(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=t[s],a=e[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Ip);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=gp(e.call(t,u)),l=gp(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=gp(e.call(s,u)),l=gp(e.computeMask(s,a));if(e.activityRegularizer)throw new lp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],i=l[t];n[e.id]=[s,i]}}}}const r=[],i=[],a=[];for(const t of this.outputs){pp(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];a.push(e.shape),r.push(e),i.push(s)}return[r,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof ig?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=ig.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new op(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new op("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new op(`No such layer: ${t}`)}calculateLosses(){return Li((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=ig.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=ig.nodeKey(t,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[ig.nodeKey(r,i)];null==l&&(l=0),t.push([r.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],i=ig.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,a,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],i=ig.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,a,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let s;for(const i of e){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(t,e);const h=r[o];if(h.inboundNodes.length<=l)return void a(t,e);const c=h.inboundNodes[l];n.push(c.outputTensors[u])}n.length>0&&t.apply(mp(n),s)}function l(t){const n=t.name,i=Am(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new op(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,h=e.layers;for(const t of h)l(t);for(;!Cp(i);)for(const t of h){const e=r[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const c=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],s=t[2];pp(e in r);const i=r[e].inboundNodes[n].outputTensors;c.push(i[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];pp(e in r);const i=r[e].inboundNodes[n].outputTensors;d.push(i[s])}return new t({inputs:c,outputs:d,name:u})}get stateful(){if(this._stateful)throw new op("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Li((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function ag(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function og(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Li((()=>{if(1===t.shape.length)return ri(t);if(2===t.shape.length){if(t.shape[1]>1)return Xi(t,1);if(1===t.shape[1])return ha(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());zi(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),qo(r,"float32")}return null}function lg(t,e){return Xa(t,e)}function ug(t,e){let n,s;const r=e;n=r.xs,s=r.ys,d(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=hg("input",t.inputNames,n),a=hg("output",t.outputNames,s),o=i[0].shape[0];d(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),d(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)d(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)d(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function hg(t,e,n){if(n instanceof Hs)return[n];if(Array.isArray(n))return d(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new op(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function cg(t){return"function"==typeof t.iterator}function dg(t){d(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function pg(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>rf(t,e,n-e))):rf(t,e,n-e)}function fg(t,e){return Li((()=>null==t?null:Array.isArray(t)?t.map((t=>fg(t,e))):pf(t,"int32"===e.dtype?e:si(e,"int32"))))}function mg(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function gg(t){const e=[];t instanceof Hs&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(sf(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function bg(t,e){if(null==t)return;const n=[];if(e instanceof Hs)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof Hs)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function xg(t){return Array.isArray(t)}function yg(t){return!function(t){return t instanceof Hs}(t)&&!xg(t)}function wg(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(xg(t)&&t.length>0)e=!0;else if(yg(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new op(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(yg(t)){i=[];for(const n of e){if(null==t[n])throw new op(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(xg(t)){if(t.length!==e.length)throw new op(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new op(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=gg(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new op(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!s)continue;const i=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&i!==o)throw new op(`${r} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function vg(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new op(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new op(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new op(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new op(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class kg extends ig{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new op("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}s("_".repeat(e)),Qm(i,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?tg(o[t],n,s):eg(o[t],n,a,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Hf(t.collectedTrainableWeights):Hf(t.trainableWeights),e}(t),u=Hf(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>fu.adagrad(.01),Adadelta:()=>fu.adadelta(1,.95,ef()),Adam:()=>fu.adam(.001,.9,.999,ef()),Adamax:()=>fu.adamax(.002,.9,.999,ef(),0),RMSProp:()=>fu.rmsprop(.001,.9,0,ef()),SGD:()=>fu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new op(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Gi))throw new op("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new op(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Wm(t)))}else{const n=Wm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new op(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Wm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Hp("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Hp("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===zm?-1!==["accuracy","acc"].indexOf(a)?s=Um:-1!==["crossentropy","ce"].indexOf(a)&&(s=Gm):this.lossFunctions[t]===Lm?-1!==["accuracy","acc"].indexOf(a)?s=Hm:-1!==["crossentropy","ce"].indexOf(a)&&(s=qm):-1!==["accuracy","acc"].indexOf(a)?s=Vm:-1!==["crossentropy","ce"].indexOf(a)&&(s=jm),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const t=Xm(a);i=t,n=""+Ym(a)}let e;Hp(n,(()=>{e=i})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;dg(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const i=r[0].concat(r[1]);this.makeTestFunction();const a=this.testFunction;return mp(this.testLoop(a,i,s,n.verbose,n.steps))}finally{bg(r[0],t),bg(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let i=[];if(n.verbose>0)throw new lp("Verbose mode is not implemented yet.");d(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await a.next();if(i=Li((()=>{if(e.value){const{xs:n,ys:s}=ug(t,e.value),a=n.concat(s),u=Li((()=>r(a)));if(zi(a),0===l)for(let t=0;t<u.length;++t)i.push(Vi(0));const h=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=Li((()=>ji(i[t],Xa(h,e)))),l>0&&zi(n)}zi(u),o+=h,++l}return i})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=Da(i[t],o),zi(e)}return mp(i)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new op(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new op(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new op("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),i=new sm;if(t instanceof Hs&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new op(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new op(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=am(r,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=dp(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((t=>t.name));for(let s=0;s<t.length;++s){const a=i.indexOf(t[s]);if(-1!==a&&(e[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new op(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Li((()=>{const s=this.checkNumSamples(t);if(n)throw new lp("Verbose predictLoop() is not implemented yet.");const r=mg(s,e),i=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)Li((()=>{const n=r[e][0],s=r[e][1],i=pg(t,n,s),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new sm(a);return am(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return mp(i.map((t=>wa(t,0))))}))}predict(t,e={}){const n=gg(t);vg(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return dg(s),this.predictLoop(n,s)}finally{bg(n,t)}}predictOnBatch(t){vg(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new ap("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Lm?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=Sp(t.map((t=>t.shape[0])));s.sort();const r=Sp(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new op(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(r.length>1)throw new op(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&r.length>0&&!b(s,r))throw new op(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=wg(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=wg(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[Mm,zm,Om];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(null!=a){if(a===Om&&1===i.shape[i.shape.length-1])throw new op(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new op(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new op(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=ag(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await og(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,s=0,r){return Li((()=>{const i=this.checkNumSamples(e,n,r,"steps"),a=[];if(s>0)throw new lp("Verbose mode is not implemented yet.");if(null!=r)throw new lp("steps mode in testLoop() is not implemented yet");{const s=mg(i,n),r=qo(Qp(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=rf(r,i,o-i),u=fg(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)a.push(Vi(0));for(let t=0;t<h.length;++t){const e=h[t];a[t]=ji(a[t],Xa(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=Da(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;fp(t,s)>1&&(r+=`_${fp(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new sm(t),o=am(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=lg(n,r[t]));const i=ro(n);e.push(i),l=0===t?n:ji(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=ro(e(s[r],o[r]))}Pi(n),i.push(n)}return l=ro(l),this.calculateLosses().forEach((t=>{l=ji(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>Li((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:s[t]});const a=new sm(i),o=am(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],i=ro(s(r[t],o[t]));n=0===t?i:ji(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],i=ro(n(r[s],o[s]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,a,o,u,h,c,d,p;t.isTraining=!0;try{const f=null==s.batchSize?32:s.batchSize;dg(f);const m=!1,g=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,m,f);r=g[0],i=g[1],p=g[2];let b,x=!1;if(null!=s.validationData&&s.validationData.length>0){if(x=!0,2!==s.validationData.length)throw 3===s.validationData.length?new lp("validationData including sample weights is not supported yet."):new op(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);u=s.validationData[0],h=s.validationData[1];const e=!0,n=await t.standardizeUserData(u,h,null,null,e,f);c=n[0],d=n[1],b=c.concat(d)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){x=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];c=pg(r,t,e),a=r,r=pg(r,0,t),d=pg(i,t,e),o=i,i=pg(i,0,t),b=c.concat(d)}else null!=s.validationSteps&&(x=!0);const y=r.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let k,I;x?(t.makeTestFunction(),k=t.testFunction,I=v.slice().concat(v.map((t=>"val_"+t)))):(k=null,b=[],I=v.slice());const S=$m(s.callbacks,s.yieldEvery),C=await async function(t,e,n,s,r,i,a,o,u,h,c,d,p,f,m){null==r&&(r=32),null==i&&(i=1),null==c&&(c=!0),null==p&&(p=0);let g=!1;null!=u&&null!=h&&(g=!0);const b=t.checkNumSamples(n,r,f,"steps_per_epoch");let x;null!=b&&(x=Qp(0,b)),null==a&&(a=1);const{callbackList:y,history:w}=Rm(o,a,i,p,b,f,r,g,d);y.setModel(t),t.history=w,await y.onTrainBegin(),t.stopTraining_=!1;for(let a=p;a<i;++a){await y.onEpochBegin(a);const i={};{if("batch"===c)throw new lp("batch shuffling is not implemneted yet");c&&l(x);const a=qo(x),o=mg(b,r);for(let l=0;l<o.length;++l){const c={};if(await y.onBatchBegin(l,c),Li((()=>{const d=o[l][0],p=o[l][1],f=rf(a,d,p-d);c.batch=l,c.size=p-d;const m=fg(n,f),b=e(m);for(let t=0;t<s.length;++t){const e=s[t],n=b[t];c[e]=n,Pi(n)}if(l===o.length-1&&g){const e=t.testLoop(u,h,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];Pi(r),i["val_"+n]=r}}})),await y.onBatchEnd(l,c),vm(c),t.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,i),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,w,y,v,f,s.epochs,s.verbose,S,k,b,s.shuffle,I,s.initialEpoch,null);return C}finally{t.isTraining=!1,bg(r,e),bg(i,n),bg(a,e),bg(o,n),bg(c,u),bg(d,h),null!=p&&zi(p)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(d(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),d(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),d(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),d(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),d(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(cg(n.validationData))d(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new lp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=$m(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Rm(h,c,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let h=0,c=0;for(s||(g=await e.iterator());!s||h<n.batchesPerEpoch;){const e=await g.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=ug(t,e.value),i={};i.batch=c,i.size=s[0].shape[0],await p.onBatchBegin(c,i);const a=[];if(null!=n.classWeight){const e=ag(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await og(r[t],null,e[t]))}const u=s.concat(r).concat(a),d=o(u);zi(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];i[e]=n,Pi(n)}await p.onBatchEnd(c,i),vm(i),c++,h++}if(s?h>=n.batchesPerEpoch:e.done){if(r){let e;e=cg(n.validationData)?gp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):gp(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return zi(i),bg(n[0],t),bg(n[1],e),mp(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Oi().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Oi().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=bp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>bp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=bp(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[bp(Ym(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>bp(Ym(t))));{const t={};for(const e in this.metrics)t[e]=bp(Ym(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Am(sg(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=xp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>xp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=xp(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>xp(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=xp(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Ar.getSaveHandlers(n));if(0===e.length)throw new op(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new op(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new op("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Sr(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.21.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Sr(await this.optimizer.getWeights(),t);s.specs.push(...n),s.data=$r([s.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Zm(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,t.save(r)}setUserDefinedMetadata(t){Zm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}kg.className="Model",Di(kg);class Ig extends kg{}Ig.className="Functional",Di(Ig);class Sg extends kg{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Dp("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new op(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Sg||t instanceof kg;let n;if(e){if(n=t,1!==n.outputs.length)throw new op("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new op("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new op("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new op("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new nm({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new op(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new op("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=em(this.outputs[0])}this.inboundNodes=[],new Jf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:dp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Gf(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new kg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new ap("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new ap("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new ap("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new ap("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new op("Legacy serialization format not supported yet.");r=e}else d(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof Sg))throw new lp(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of r){const e=Am(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new op("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new op("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Sg.className="Sequential",Di(Sg);class Cg extends Fi{getConfig(){return{}}}class Ng extends Cg{apply(t,e=1){return function(t,e=1){if(1!==e)throw new lp(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return _a(t)}(t,e)}}Ng.className="elu",Di(Ng);class Tg extends Cg{apply(t){return Fo(t)}}Tg.className="selu",Di(Tg);class $g extends Cg{apply(t){return Ro(t)}}$g.className="relu",Di($g);class Eg extends Cg{apply(t){return Li((()=>io(6,Ro(t))))}}Eg.className="relu6",Di(Eg);class Rg extends Cg{apply(t){return t}}Rg.className="linear",Di(Rg);class Ag extends Cg{apply(t){return Do(t)}}Ag.className="sigmoid",Di(Ag);class Fg extends Cg{apply(t){return function(t){return Li((()=>{const e=ji(.5,Xa(.2,t));return ya(e,0,1)}))}(t)}}Fg.className="hardSigmoid",Di(Fg);class Mg extends Cg{apply(t){return Wo(t)}}Mg.className="softplus",Di(Mg);class Dg extends Cg{apply(t){return function(t){return Li((()=>Da(t,ji(Hi(t),1))))}(t)}}Dg.className="softsign",Di(Dg);class _g extends Cg{apply(t){return jo(t)}}_g.className="tanh",Di(_g);class Og extends Cg{apply(t,e=-1){return Bo(t,e)}}Og.className="softmax",Di(Og);class Lg extends Cg{apply(t,e=-1){return Ja(t,e)}}Lg.className="logSoftmax",Di(Lg);class zg extends Cg{apply(t,e=1){return Li((()=>Xa(Do(Xa(t,e)),t)))}}zg.className="swish",Di(zg);class Pg extends Cg{apply(t){return Li((()=>Xa(t,jo(Wo(t)))))}}function Bg(t){return t.getClassName()}function Wg(t,e={}){return kp(t,Mi.getMap().classNameMap,e,"activation")}function Ug(t){if(null==t){return Wg({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Wg(e)}return t instanceof Cg?t:Wg(t)}Pg.className="mish",Di(Pg);class Vg extends Fi{}class Gg extends Vg{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Li((()=>{let e=wo([1]);return this.hasL1&&(e=ji(e,Za(Xa(this.l1,Hi(t))))),this.hasL2&&(e=ji(e,Za(Xa(this.l2,ff(t))))),ha(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Gg.className="L1L2",Di(Gg);const Hg={l1l2:"L1L2"};function jg(t){return wp(t)}function qg(t,e={}){return kp(t,Mi.getMap().classNameMap,e,"regularizer")}function Kg(t){return null==t?null:"string"==typeof t?qg({className:t in Hg?Hg[t]:t,config:{}}):t instanceof Vg?t:qg(t)}class Xg extends tm{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Vf(t);let n=Ro(t);return null!=this.maxValue&&(n=ya(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Xg.className="ReLU",Di(Xg);class Yg extends tm{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Vf(t);return Ha(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Yg.className="LeakyReLU",Di(Yg);class Zg extends tm{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Bf(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Kg(t.alphaRegularizer),this.alphaConstraint=ym(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new op(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Gf(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Xf({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Vf(t),So(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Pf(this.alphaInitializer),alphaRegularizer:jg(this.alphaRegularizer),alphaConstraint:bm(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Zg.className="PReLU",Di(Zg);class Jg extends tm{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new lp(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Vf(t);return _a(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Jg.className="ELU",Di(Jg);class Qg extends tm{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Vf(t);return Xa(n,si(Va(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Qg.className="ThresholdedReLU",Di(Qg);class tb extends tm{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Og).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Vf(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function eb(t,e,n){if("number"==typeof t)return dp(t,e);if(t.length!==e)throw new op(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if((s=i)!==parseInt(s.toString(),10))throw new op(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var s}function nb(t,e,n,s,r=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((i+s-1)/s)}function sb(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+Jp([n-e,0]);else{if("same"!==s)throw new op(`Unsupport padding mode: ${s}.`);t*=e}return t}function rb(t,e){return Li((()=>(Wp(e),"channelsFirst"===e?tl(t,[0,2,3,1]):t)))}function ib(t,e){return Li((()=>(Wp(e),"channelsFirst"===e?tl(t,[0,2,3,4,1]):t)))}function ab(t,e,n,s=[1,1],r="valid",i,a,o=null){return Li((()=>{if(null==i&&(i="channelsLast"),Wp(i),3!==t.rank&&4!==t.rank)throw new op(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new op(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=rb(t,i);if("causal"===r)throw new lp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=pl({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=tl(l,[0,3,1,2])),l}))}tb.className="Softmax",Di(tb);class ob extends tm{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ob.verifyArgs(e),this.rank=t,$p(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new lp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=eb(e.kernelSize,t,"kernelSize"),this.strides=eb(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Up(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wp(this.dataFormat),this.activation=Ug(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Bf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ym(e.biasConstraint),this.biasRegularizer=Kg(e.biasRegularizer),this.activityRegularizer=Kg(e.activityRegularizer),this.dilationRate=eb(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new op(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new op(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new op(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(pp("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Tp(t.kernelSize,"number",1,3))throw new op(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bg(this.activation),useBias:this.useBias,biasInitializer:Pf(this.biasInitializer),biasRegularizer:jg(this.biasRegularizer),activityRegularizer:jg(this.activityRegularizer),biasConstraint:bm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class lb extends ob{constructor(t,e){super(t,e),this.kernel=null,lb.verifyArgs(e),this.filters=e.filters,$p(this.filters,"filters"),this.kernelInitializer=Bf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ym(e.kernelConstraint),this.kernelRegularizer=Kg(e.kernelRegularizer)}build(t){t=Gf(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new op(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Li((()=>{let e;t=Vf(t);const n=null==this.bias?null:this.bias.read(),s=Rp(this.activation.getClassName());if(null!=s&&2===this.rank)e=ab(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",i,a=1){return Li((()=>{if(null==i&&(i="channelsLast"),Wp(i),3!==t.shape.length)throw new op(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new op(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new op(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=tl(t,[0,2,1])),"causal"===r)throw new lp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Na(t,e,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=gf(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=ab(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new lp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",i,a){return Li((()=>{if(null==i&&(i="channelsLast"),Wp(i),4!==t.rank&&5!==t.rank)throw new op(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new op(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=ib(t,i);if("causal"===r)throw new lp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ea(o,e,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=gf(o,n)),"channelsFirst"===i&&(o=tl(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Gf(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=nb(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:Pf(this.kernelInitializer),kernelRegularizer:jg(this.kernelRegularizer),kernelConstraint:bm(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new op(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ub extends lb{constructor(t){super(2,t),ub.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Tp(t.kernelSize,"number",1,2))throw new op(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ub.className="Conv2D",Di(ub);class hb extends lb{constructor(t){super(3,t),hb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new op(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}hb.className="Conv3D",Di(hb);class cb extends ub{constructor(t){if(super(t),this.inputSpec=[new Xf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new op(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Gf(t)).length)throw new op("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new op("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xf({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Li((()=>{let e=Vf(t);if(4!==e.shape.length)throw new op(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],c=this.strides[1],d=[s,sb(a,h,l,this.padding),sb(o,c,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=tl(e,[0,2,3,1]));let p=$a(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=tl(p,[0,3,1,2])),null!=this.bias&&(p=gf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Gf(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=sb(e[s],o,i,this.padding),e[r]=sb(e[r],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}cb.className="Conv2DTranspose",Di(cb);class db extends hb{constructor(t){if(super(t),this.inputSpec=[new Xf({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new op(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Gf(t)).length)throw new op("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new op("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xf({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Li((()=>{let e=Vf(t);if(5!==e.shape.length)throw new op(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,i,a;"channelsFirst"===this.dataFormat?(a=2,r=3,i=4):(a=1,r=2,i=3);const o=n[a],l=n[r],u=n[i],h=this.kernelSize[0],c=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,sb(o,p,h,this.padding),sb(l,f,c,this.padding),sb(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=tl(e,[0,2,3,4,1]));let b=Aa(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=tl(b,[0,4,1,2,3])),null!==this.bias&&(b=gf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(t){const e=(t=Gf(t)).slice();let n,s,r,i;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,i=4):(n=4,s=1,r=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],c=this.strides[2];return e[n]=this.filters,e[s]=sb(e[s],u,a,this.padding),e[r]=sb(e[r],h,o,this.padding),e[i]=sb(e[i],c,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}db.className="Conv3DTranspose",Di(db);class pb extends lb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new op("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new op("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new op(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Bf(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Kg(e.depthwiseRegularizer),this.depthwiseConstraint=ym(e.depthwiseConstraint),this.pointwiseInitializer=Bf(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Kg(e.pointwiseRegularizer),this.pointwiseConstraint=ym(e.pointwiseConstraint)}build(t){if((t=Gf(t)).length<this.rank+2)throw new op(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new op(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Xf({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Li((()=>{let e;if(t=Vf(t),1===this.rank)throw new lp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=tl(t,[0,2,3,1])),e=Mo(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=gf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=tl(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Pf(this.depthwiseInitializer),t.pointwiseInitializer=Pf(this.pointwiseInitializer),t.depthwiseRegularizer=jg(this.depthwiseRegularizer),t.pointwiseRegularizer=jg(this.pointwiseRegularizer),t.depthwiseConstraint=bm(this.depthwiseConstraint),t.pointwiseConstraint=bm(this.pointwiseConstraint),t}}pb.className="SeparableConv";class fb extends pb{constructor(t){super(2,t)}}fb.className="SeparableConv2D",Di(fb);class mb extends lb{constructor(t){super(1,t),mb.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Tp(t.kernelSize,"number",1,1))throw new op(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}mb.className="Conv1D",Di(mb);class gb extends tm{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Li((()=>{if(t=Vf(t),"channelsLast"===this.dataFormat){const e=of(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return of(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=of(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return of(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}gb.className="Cropping2D",Di(gb);class bb extends tm{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wp(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Np(Op,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Li((()=>{let e=Vf(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=tl(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?ru.resizeNearestNeighbor(e,[t,s]):ru.resizeBilinear(e,[t,s]);return tl(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?ru.resizeNearestNeighbor(e,[t,s]):ru.resizeBilinear(e,[t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}bb.className="UpSampling2D",Di(bb);class xb extends ob{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Bf(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ym(t.depthwiseConstraint),this.depthwiseRegularizer=Kg(t.depthwiseRegularizer)}build(t){if((t=Gf(t)).length<4)throw new op(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new op(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Li((()=>{let e=function(t,e,n=[1,1],s="valid",r,i){return Li((()=>{null==r&&(r="channelsLast"),Wp(r);let a=rb(t,r);if(4!==t.rank)throw new op(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new op(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Fa(a,e,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=tl(a,[0,3,1,2])),a}))}(t=Vf(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=gf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Gf(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=nb(e,this.kernelSize[0],this.padding,this.strides[0]),i=nb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,i]:[t[0],r,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Pf(this.depthwiseInitializer),t.depthwiseRegularizer=jg(this.depthwiseRegularizer),t.depthwiseConstraint=bm(this.depthwiseRegularizer),t}}function yb(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new op("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function wb(t,e,n,s=!1,r,i,a=!1,o=!1){return Li((()=>{const l=e.shape.length;if(l<3)throw new op(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Qp(2,l));if(e=tl(e,u),null!=i)throw new lp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=si(si(r,"bool"),"float32")).rank===l-1&&(r=za(r,-1)),r=tl(r,u)),s&&(e=Ao(e,0),null!=r&&(r=Ao(r,0)));const h=[];let c,d=n;const p=e.shape[0],f=Xo(e);let m,g;null!=r&&(m=Xo(r));for(let e=0;e<p;++e){const n=f[e],s=Li((()=>t(n,d)));if(null==r)c=s[0],d=s[1];else{const t=Li((()=>{const t=m[e],n=Ya(ko(t),t);return{output:ji(Xa(s[0],t),Xa(d[0],n)),newStates:d.map(((e,r)=>ji(Xa(s[1][r],t),Xa(e,n))))}}));c=t.output,d=t.newStates}o&&h.push(c)}return o&&(g=Ho(h,1)),[c,g,d]}))}xb.className="DepthwiseConv2D",Di(xb);class vb extends tm{constructor(t){let e;if(super(t),null==t.cell)throw new op("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Eb({cells:t.cell}):t.cell,null==e.stateSize)throw new op("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Xf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Qp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Wf(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return Li((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new lp("Constants support is not implemented in RNN yet.");Wf(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Xf({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new op(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((t=>new Xf({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Li((()=>{if(!this.stateful)throw new ip("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new op("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>wo([n,t]))):this.states_=[wo([n,this.cell.stateSize])];else if(null==t)zi(this.states_),null!=this.keptStates&&(zi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>wo([n,t]))):this.states_[0]=wo([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new op(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):zi(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,r];if(!b(s.shape,i))throw new op(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>Pi(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=yb(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Xf({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof Yf){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Li((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=Vf(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new op(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=wb(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,s);const c=this.returnSequences?u:l;return this.returnState?[c].concat(h):c}))}getInitialState(t){return Li((()=>{let e=wo(t.shape);return e=Za(e,[1,2]),e=sf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?hf(e,[1,t]):e)):this.cell.stateSize>1?[hf(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===vb.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=Am(e.cell,n);return new t(Object.assign(e,{cell:s}))}}vb.className="RNN",Di(vb);class kb extends tm{}class Ib extends kb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$p(this.units,"units"),this.activation=Ug(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Bf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kg(t.kernelRegularizer),this.recurrentRegularizer=Kg(t.recurrentRegularizer),this.biasRegularizer=Kg(t.biasRegularizer),this.kernelConstraint=ym(t.kernelConstraint),this.recurrentConstraint=ym(t.recurrentConstraint),this.biasConstraint=ym(t.biasConstraint),this.dropout=Zp([1,Jp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Zp([1,Jp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Gf(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Li((()=>{if(2!==t.length)throw new op(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rb({ones:()=>ko(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rb({ones:()=>ko(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=df(null!=i?Xa(t,i):t,this.kernel.read()),null!=this.bias&&(r=gf(r,this.bias.read())),null!=a&&(n=Xa(n,a));let o=ji(r,df(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bg(this.activation),useBias:this.useBias,kernelInitializer:Pf(this.kernelInitializer),recurrentInitializer:Pf(this.recurrentInitializer),biasInitializer:Pf(this.biasInitializer),kernelRegularizer:jg(this.kernelRegularizer),recurrentRegularizer:jg(this.recurrentRegularizer),biasRegularizer:jg(this.biasRegularizer),activityRegularizer:jg(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ib.className="SimpleRNNCell",Di(Ib);class Sb extends vb{constructor(t){t.cell=new Ib(t),super(t)}call(t,e){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Sb.className="SimpleRNN",Di(Sb);class Cb extends kb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new op("GRUCell does not support reset_after parameter set to true.");this.units=t.units,$p(this.units,"units"),this.activation=Ug(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ug(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Bf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kg(t.kernelRegularizer),this.recurrentRegularizer=Kg(t.recurrentRegularizer),this.biasRegularizer=Kg(t.biasRegularizer),this.kernelConstraint=ym(t.kernelConstraint),this.recurrentConstraint=ym(t.recurrentConstraint),this.biasConstraint=ym(t.biasConstraint),this.dropout=Zp([1,Jp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Zp([1,Jp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Gf(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Li((()=>{if(2!==t.length)throw new op(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rb({ones:()=>ko(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rb({ones:()=>ko(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Xa(t,r[0]));let u=df(t,this.kernel.read());this.useBias&&(u=gf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Xa(s,i[0]));const h=this.recurrentKernel.read(),[c,d]=Uo(h,[2*this.units,this.units],h.rank-1),p=df(s,c),[f,m,g]=Uo(u,3,u.rank-1),[b,x]=Uo(p,2,p.rank-1);a=this.recurrentActivation.apply(ji(f,b)),o=this.recurrentActivation.apply(ji(m,x));const y=df(Xa(o,s),d);l=this.activation.apply(ji(g,y));const w=ji(Xa(a,s),Xa(ji(1,bo(a)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bg(this.activation),recurrentActivation:Bg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pf(this.kernelInitializer),recurrentInitializer:Pf(this.recurrentInitializer),biasInitializer:Pf(this.biasInitializer),kernelRegularizer:jg(this.kernelRegularizer),recurrentRegularizer:jg(this.recurrentRegularizer),biasRegularizer:jg(this.biasRegularizer),activityRegularizer:jg(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Cb.className="GRUCell",Di(Cb);class Nb extends vb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Cb(t),super(t)}call(t,e){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Nb.className="GRU",Di(Nb);class Tb extends kb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$p(this.units,"units"),this.activation=Ug(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ug(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Bf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Kg(t.kernelRegularizer),this.recurrentRegularizer=Kg(t.recurrentRegularizer),this.biasRegularizer=Kg(t.biasRegularizer),this.kernelConstraint=ym(t.kernelConstraint),this.recurrentConstraint=ym(t.recurrentConstraint),this.biasConstraint=ym(t.biasConstraint),this.dropout=Zp([1,Jp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Zp([1,Jp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Gf(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends vf{apply(e,s){const r=t.apply([n]),i=(new If).apply([n]),a=t.apply([2*n]);return uf(uf(r,i),a)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Li((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new op(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rb({ones:()=>ko(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rb({ones:()=>ko(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,h;0<this.dropout&&this.dropout<1&&(t=Xa(t,i[0]));let c=df(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Xa(s,a[0])),c=ji(c,df(s,this.recurrentKernel.read())),this.useBias&&(c=gf(c,this.bias.read()));const[d,p,f,m]=Uo(c,4,c.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ji(Xa(l,r),Xa(o,this.activation.apply(f))),h=this.recurrentActivation.apply(m);const g=Xa(h,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bg(this.activation),recurrentActivation:Bg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pf(this.kernelInitializer),recurrentInitializer:Pf(this.recurrentInitializer),biasInitializer:Pf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:jg(this.kernelRegularizer),recurrentRegularizer:jg(this.recurrentRegularizer),biasRegularizer:jg(this.biasRegularizer),activityRegularizer:jg(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),recurrentConstraint:bm(this.recurrentConstraint),biasConstraint:bm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Tb.className="LSTMCell",Di(Tb);class $b extends vb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Tb(t),super(t)}call(t,e){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}$b.className="LSTM",Di($b);class Eb extends kb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Li((()=>{let n=t.slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),r.push(i.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Wf(t)&&(t=t[0]),this.cells.forEach(((n,s)=>{Hp(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(Am(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return qf(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}Kf(e)}}function Rb(t){const{ones:e,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=t,a=()=>null!=i?i(e(),n):bf(e(),n),o=()=>xf(a,e,s);return!r||r<=1?Pi(o().clone()):Array(r).fill(void 0).map(o).map((t=>Pi(t.clone())))}Eb.className="StackedRNNCells",Di(Eb);var Ab,Fb,Mb,Db;class _b extends vb{constructor(t){if(t.unroll)throw new lp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new lp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Xf({ndim:5})]}call(t,e){return Li((()=>{if(null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new op("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Li((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=wo([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){Li((()=>{if(!this.stateful)throw new ip("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new op("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>wo(r))):this.states_=[wo(r)];else if(null==t)zi(this.states_),null!=this.keptStates&&(zi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>wo(r))):this.states_[0]=wo(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new op(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):zi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!b(n.shape,s))throw new op(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Pi(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],h=nb(l,s[0],r,i[0],a[0]),c=nb(u,s[1],r,i[1],a[1]);return[...t.slice(0,2),...o?[n,h,c]:[h,c,n]]}}_b.className="ConvRNN2D";class Ob extends Tb{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,$p(this.filters,"filters"),this.kernelSize=eb(n,2,"kernelSize"),this.kernelSize.forEach((t=>$p(t,"kernelSize"))),this.strides=eb(s||1,2,"strides"),this.strides.forEach((t=>$p(t,"strides"))),this.padding=r||"valid",Up(this.padding),this.dataFormat=i||"channelsLast",Wp(this.dataFormat),this.dilationRate=eb(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>$p(t,"dilationRate")))}build(t){var e;t=Gf(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new op(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends vf{apply(t,e){return lf([n.apply([s]),vo([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Li((()=>{if(3!==t.length)throw new op(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],r=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rb({ones:()=>ko(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Xa(e[n],t):t;let l=o(s,a,0),u=o(s,a,1),h=o(s,a,2),c=o(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rb({ones:()=>ko(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,x,y,w]=Uo(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Uo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,x,k,this.padding),h=this.inputConv(h,y,I,this.padding),c=this.inputConv(c,w,S,this.padding);const[C,N,T,$]=Uo(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(ji(l,p)),R=this.recurrentActivation.apply(ji(u,f)),A=ji(Xa(R,i),Xa(E,this.activation.apply(ji(h,m)))),F=Xa(this.recurrentActivation.apply(ji(c,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=Ca(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?gf(r,n,this.dataFormat):r}recurrentConv(t,e){return Ca(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ob.className="ConvLSTM2DCell",Di(Ob);class Lb extends _b{constructor(t){const e=new Ob(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Lb.className="ConvLSTM2D",Di(Lb);class zb extends tm{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return xf((()=>bf(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}zb.className="Dropout",Di(zb);class Pb extends zb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Pb.className="SpatialDropout1D",Di(Pb);class Bb extends tm{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,$p(this.units,"units"),this.activation=Ug(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Bf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Bf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ym(t.kernelConstraint),this.biasConstraint=ym(t.biasConstraint),this.kernelRegularizer=Kg(t.kernelRegularizer),this.biasRegularizer=Kg(t.biasRegularizer),this.activityRegularizer=Kg(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Gf(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Gf(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t),s=Rp(this.activation.getClassName());let r;return null!=s?r=df(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=df(n,this.kernel.read()),null!=this.bias&&(r=gf(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:Bg(this.activation),useBias:this.useBias,kernelInitializer:Pf(this.kernelInitializer),biasInitializer:Pf(this.biasInitializer),kernelRegularizer:jg(this.kernelRegularizer),biasRegularizer:jg(this.biasRegularizer),activityRegularizer:jg(this.activityRegularizer),kernelConstraint:bm(this.kernelConstraint),biasConstraint:bm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Bb.className="Dense",Di(Bb);class Wb extends tm{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Gf(t);for(const e of t.slice(1))if(null==e)throw new op(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Yp(t,1)]}call(t,e){return Li((()=>{this.invokeCallHook(t,e);let n=Vf(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=tl(n,t)}return function(t){if(t.rank<=1)throw new op(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Yp(t.shape,1)];return ha(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Wb.className="Flatten",Di(Wb);class Ub extends tm{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ug(t.activation)}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Bg(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Ub.className="Activation",Di(Ub);class Vb extends tm{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Li((()=>{return t=Vf(t),e=t,n=this.n,Li((()=>{if(2!==e.shape.length)throw new op(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return hf(sf(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Vb.className="RepeatVector",Di(Vb);class Gb extends tm{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,i=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==i)throw new op("Can only specifiy one unknown dimension.");i=t}else r*=e}const a=Yp(t);if(null!==i){if(0===r||a%r!=0)throw new op(n);s[i]=a/r}else if(a!==r)throw new op(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return ha(n,r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Gb.className="Reshape",Di(Gb);class Hb extends tm{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Qp(1,t.dims.length+1);if(!b(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Xf({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Gf(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return tl(Vf(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Hb.className="Permute",Di(Hb);class jb extends tm{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Vf(t);return Ki(xo(n,this.maskValue),-1)}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t),s=Ki(xo(n,this.maskValue),-1,!0);return Xa(n,si(s,n.dtype))}))}}jb.className="Masking",Di(jb);class qb extends tm{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(gp(t.inputLength))}this.inputDim=t.inputDim,$p(this.inputDim,"inputDim"),this.outputDim=t.outputDim,$p(this.outputDim,"outputDim"),this.embeddingsInitializer=Bf(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Kg(t.embeddingsRegularizer),this.activityRegularizer=Kg(t.activityRegularizer),this.embeddingsConstraint=ym(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Li((()=>this.maskZero?(t=Vf(t),xo(t,Zo(t))):null))}computeOutputShape(t){if(t=Gf(t),null==this.inputLength)return[...t,this.outputDim];const e=gp(this.inputLength);if(e.length!==t.length-1)throw new op(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],i=t[s+1];if(null!=r&&null!=i&&r!==i)throw new op(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Li((()=>{this.invokeCallHook(t,e);let n=Vf(t);"int32"!==n.dtype&&(n=nf(n,"int32"));const s=pf(this.embeddings.read(),ha(n,[n.size]));return ha(s,Gf(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pf(this.embeddingsInitializer),embeddingsRegularizer:jg(this.embeddingsRegularizer),activityRegularizer:jg(this.activityRegularizer),embeddingsConstraint:bm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}qb.className="Embedding",Di(qb);class Kb extends tm{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new lp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],i=e[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new op("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Gf(t)]),t.length<2)throw new op(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Sp(e),e.length>1)throw new op(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===Sp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Li((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=Jp(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=sf(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],i=t.slice(1).concat([r]);let a=ha(s,[r].concat(Yp(t.slice(1))));a=tl(a,[1,0]),a=ha(a,i),e.push(a),n=!0}else if(t>1){const r=Qp(1,t).concat([0]);e.push(tl(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=ha(tl(ha(s,[-1,e]),[1,0]),n)}else if(r>1){const t=[r-1].concat(Qp(0,r-1));s=tl(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Sp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Li((()=>{if(null==e)return null;if(!Array.isArray(e))throw new op("`mask` should be an Array");if(!Array.isArray(t))throw new op("`inputs` should be an Array");if(e.length!==t.length)throw new op(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:za(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Qa(n,e[t]);return n}))}}class Xb extends Kb{constructor(t){super(t)}mergeFunction(t){return Li((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ji(e,t[n]);return e}))}}Xb.className="Add",Di(Xb);class Yb extends Kb{constructor(t){super(t)}mergeFunction(t){return Li((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Xa(e,t[n]);return e}))}}Yb.className="Multiply",Di(Yb);class Zb extends Kb{constructor(t){super(t)}mergeFunction(t){return Li((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ji(e,t[n]);return Xa(1/t.length,e)}))}}Zb.className="Average",Di(Zb);class Jb extends Kb{constructor(t){super(t)}mergeFunction(t){return Li((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=so(e,t[n]);return e}))}}Jb.className="Maximum",Di(Jb);class Qb extends Kb{constructor(t){super(t)}mergeFunction(t){return Li((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=io(e,t[n]);return e}))}}Qb.className="Minimum",Di(Qb);class tx extends Kb{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new op("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(b(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new op("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Li((()=>lf(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new op("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new op("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new op("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new op(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Li((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(si(ko(t[n]),"bool")):e[n].rank<t[n].rank?s.push(za(e[n],-1)):s.push(e[n]);const r=wa(s,this.axis);return qi(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function ex(t,e){for(;t<0;)t+=e;return t}tx.className="Concatenate",Di(tx);class nx extends Kb{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){d(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new lp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new op(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new op(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>ex(e,t[n].shape.length))):[ex(this.axes,n.shape.length),ex(this.axes,s.shape.length)],this.normalize&&(n=Fm(n,e[0]),s=Fm(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new lp("batchDot is not implemented for tensors of 4D or higher rank yet");if(d(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),d(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new lp("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return Li((()=>{let n,a;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=ha(e,e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=ha(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?Za(Xa(t,e),i[0]):Za(Xa(tl(t,[1,0]),e),i[1]);else{const n=i[0]!==t.shape.length-1,s=i[1]===e.shape.length-1;a=to(t,e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);a=Go(a,e)}return 1===a.shape.length&&(a=za(a,1)),a}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[ex(this.axes,t.length),ex(this.axes,e.length)],n}computeOutputShape(t){d(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new lp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}nx.className="Dot",Di(nx);class sx extends tm{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t);return xf((()=>ji(cf(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}sx.className="GaussianNoise",Di(sx);class rx extends tm{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Li((()=>{this.invokeCallHook(t,e);const n=Vf(t);return this.rate>0&&this.rate<1?xf((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return Xa(n,cf(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}rx.className="GaussianDropout",Di(rx);class ix extends tm{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Vf(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Li((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return xf((()=>{const e=Vf(t),s=-1.7580993408473766;let r=Ga(Eo(n),this.rate);r=nf(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate,o=ji(Xa(e,r),Xa(ji(r,-1),s));return ji(Xa(o,i),a)}),(()=>Vf(t)),e.training||!1)}return t}))}}function ax(t,e,n,s,r,i=.001){let a;if(2===t.rank)a=fa(t,e,n,s,r,i);else if(3===t.rank)a=ma(t,e,n,s,r,i);else{if(4!==t.rank)throw new lp(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=ga(t,e,n,s,r,i)}return a}ix.className="AlphaDropout",Di(ix);class ox extends tm{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Bf(t.betaInitializer||"zeros"),this.gammaInitializer=Bf(t.gammaInitializer||"ones"),this.movingMeanInitializer=Bf(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Bf(t.movingVarianceInitializer||"ones"),this.betaConstraint=ym(t.betaConstraint),this.gammaConstraint=ym(t.gammaConstraint),this.betaRegularizer=Kg(t.betaRegularizer),this.gammaRegularizer=Kg(t.gammaRegularizer)}build(t){t=Gf(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new op(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Xf({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Li((()=>{const n=null!=e.training&&e.training,s=Vf(t),r=s.shape,i=r.length,a=Qp(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=dp(1,i);l[o]=r[o];const u=a.slice();u.sort();const h=!b(u,Qp(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const t=ha(this.movingMean.read(),l),e=ha(this.movingVariance.read(),l),n=this.center?ha(this.beta.read(),l):null,r=this.scale?ha(this.gamma.read(),l):null;return ax(s,t,e,n,r,this.epsilon)}return ax(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[c,d,p]=function(t,e,n,s,r=.001){return b(s.slice().sort(),Qp(0,t.rank-1))?function(t,e,n,s,r=.001){return Li((()=>{const i=go(t,s),a=i.mean,o=i.variance;return[ax(t,a,o,n,e,r),a,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return Li((()=>{const i=go(t,s),a=i.mean,o=i.variance,l=[];for(const e of Qp(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=ha(a,l),h=ha(o,l),c=null==e?null:ha(e,l),d=null==n?null:ha(n,l);return[ax(t,u,h,d,c,r),a,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{Li((()=>{const s=1-n,r=t.read(),i=Xa(Ya(r,e),s);t.write(Ya(r,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),c}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pf(this.betaInitializer),gammaInitializer:Pf(this.gammaInitializer),movingMeanInitializer:Pf(this.movingMeanInitializer),movingVarianceInitializer:Pf(this.movingVarianceInitializer),betaRegularizer:jg(this.betaRegularizer),gammaRegularizer:jg(this.gammaRegularizer),betaConstraint:bm(this.betaConstraint),gammaConstraint:bm(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ox.className="BatchNormalization",Di(ox);class lx extends tm{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Bf(t.betaInitializer||"zeros"),this.gammaInitializer=Bf(t.gammaInitializer||"ones"),this.betaRegularizer=Kg(t.betaRegularizer),this.gammaRegularizer=Kg(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Gf(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Sp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Vf(t),s=n.shape,r=s.length;return Li((()=>{let{mean:t,variance:e}=go(n,this.axis,!0);const i=dp(1,r);for(const t of this.axis)i[t]=s[t];const a=t=>null!=t&&t.shape.length!==r?ha(t,i):t;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],h=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),h.push(1)):(u.push(1),h.push(s[t]));return t=Pa(t,u),e=Pa(e,u),null!=o&&(o=Pa(o,h)),null!=l&&(l=Pa(l,h)),ax(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pf(this.betaInitializer),gammaInitializer:Pf(this.gammaInitializer),betaRegularizer:jg(this.betaRegularizer),gammaRegularizer:jg(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}lx.className="LayerNormalization",Di(lx);class ux extends tm{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new op(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new op(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new op(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Xf({ndim:4})]}computeOutputShape(t){let e,n;return t=Gf(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Li((()=>{return e=Vf(t),n=this.padding,s=this.dataFormat,Li((()=>{if(4!==e.rank)throw new op(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new op("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new op(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Io(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function hx(t,e,n,s,r,i){return Li((()=>{let a;Wp(r),Vp(i),Up(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=rb(t,r);const o="same"===s?"same":"valid";return a="max"===i?eo(t,e,n,o):ca(t,e,n,o),"channelsFirst"===r&&(a=tl(a,[0,3,1,2])),a}))}function cx(t,e,n,s,r,i){return Li((()=>{let a;Wp(r),Vp(i),Up(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=ib(t,r);const o="same"===s?"same":"valid";return a="max"===i?no(t,e,n,o):da(t,e,n,o),"channelsFirst"===r&&(a=tl(a,[0,4,1,2,3])),a}))}ux.className="ZeroPadding2D",Di(ux);class dx extends tm{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new op(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if($p(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new op(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}$p(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Up(this.padding),this.inputSpec=[new Xf({ndim:3})]}computeOutputShape(t){const e=nb((t=Gf(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Li((()=>{this.invokeCallHook(t,e),t=sf(Vf(t),2);const n=this.poolingFunction(Vf(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Go(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class px extends dx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),hx(t,e,n,s,r,"max")}}px.className="MaxPooling1D",Di(px);class fx extends dx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),hx(t,e,n,s,r,"avg")}}fx.className="AveragePooling1D",Di(fx);class mx extends tm{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new op(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];$p(this.poolSize,"poolSize"),$p(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wp(this.dataFormat),Up(this.padding),this.inputSpec=[new Xf({ndim:4})]}computeOutputShape(t){t=Gf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=nb(e,this.poolSize[0],this.padding,this.strides[0]),n=nb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Li((()=>(this.invokeCallHook(t,e),this.poolingFunction(Vf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gx extends mx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),hx(t,e,n,s,r,"max")}}gx.className="MaxPooling2D",Di(gx);class bx extends mx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),hx(t,e,n,s,r,"avg")}}bx.className="AveragePooling2D",Di(bx);class xx extends tm{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new op(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];$p(this.poolSize,"poolSize"),$p(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wp(this.dataFormat),Up(this.padding),this.inputSpec=[new Xf({ndim:5})]}computeOutputShape(t){t=Gf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=nb(e,this.poolSize[0],this.padding,this.strides[0]),n=nb(n,this.poolSize[1],this.padding,this.strides[1]),s=nb(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return Li((()=>(this.invokeCallHook(t,e),this.poolingFunction(Vf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yx extends xx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),cx(t,e,n,s,r,"max")}}yx.className="MaxPooling3D",Di(yx);class wx extends xx{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Wp(r),Up(s),cx(t,e,n,s,r,"avg")}}wx.className="AveragePooling3D",Di(wx);class vx extends tm{constructor(t){super(t),this.inputSpec=[new Xf({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new lp}}class kx extends vx{constructor(t){super(t||{})}call(t,e){return Li((()=>{const e=Vf(t);return ro(e,1)}))}}kx.className="GlobalAveragePooling1D",Di(kx);class Ix extends vx{constructor(t){super(t||{})}call(t,e){return Li((()=>{const e=Vf(t);return Ka(e,1)}))}}Ix.className="GlobalMaxPooling1D",Di(Ix);class Sx extends tm{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wp(this.dataFormat),this.inputSpec=[new Xf({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new lp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Cx extends Sx{call(t,e){return Li((()=>{const e=Vf(t);return"channelsLast"===this.dataFormat?ro(e,[1,2]):ro(e,[2,3])}))}}Cx.className="GlobalAveragePooling2D",Di(Cx);class Nx extends Sx{call(t,e){return Li((()=>{const e=Vf(t);return"channelsLast"===this.dataFormat?Ka(e,[1,2]):Ka(e,[2,3])}))}}Nx.className="GlobalMaxPooling2D",Di(Nx);class Tx extends tm{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=Am(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class $x extends Tx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Gf(t)).length<3)throw new op(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Gf(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return Li((()=>wb(((t,n)=>[Vf(this.layer.call(t,e)),[]]),t=Vf(t),[],!1,null,null,!1,!0)[1]))}}$x.className="TimeDistributed",Di($x);class Ex extends Tx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Am(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=Am(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Np(Pp,"BidirectionalMergeMode",r),t.weights)throw new lp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):mp(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=yb(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new op("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const s=n.map((t=>new Xf({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),a.push(...s)}if(null!=s)throw new lp("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Yf;for(const t of i)if(t instanceof Yf!==o)throw new op("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Li((()=>{const n=e.initialState;let s,r,i,a;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Ao(r,1)),"concat"===this.mergeMode?a=lf([s,r]):"sum"===this.mergeMode?a=ji(s,r):"ave"===this.mergeMode?a=Xa(.5,ji(s,r)):"mul"===this.mergeMode?a=Xa(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Hp(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Hp(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Am(e.layer);if(delete e.layer,null!=e.numConstants)throw new lp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}Ex.className="Bidirectional",Di(Ex);class Rx extends tm{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Li((()=>("float32"!==(t=Vf(t)).dtype&&(t=nf(t,"float32")),ji(Xa(t,this.scale),this.offset))))}}function Ax(t,e,n=new Map,s=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(_x(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const a=Ax(t[i],e,n,s);r[i]=a}return s.delete(t),t.__proto__&&(r.__proto__=t.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function Fx(t,e=Dx){return Mx(t,e)}function Mx(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(_x(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=Mx(t.map((t=>t[i])),e,n);r[i]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function Dx(t){return null===t?null:_x(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function _x(t){let e=!1;if(q().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:s}=n(977);e=t instanceof s}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Hs)&&!(t instanceof Promise)&&!e)}function Ox(t){return Ax(t,Lx)}function Lx(t){return t instanceof Hs?{value:t.clone(),recurse:!1}:_x(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Rx.className="Rescaling",Di(Rx),q().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(Ab||(Ab={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Fb||(Fb={}));class zx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Px extends zx{constructor(){super(Px.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Px.INITIAL_CAPACITY=32;class Bx{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Xx(this,t)}filter(t){return new qx(this,t)}map(t){return new Kx(this,t)}mapAsync(t){return new Yx(this,t)}serialMapAsync(t){return new Yx(this,t).serial()}flatmap(t){return new Jx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new jx(this,t,e)}columnMajorBatch(t,e=!0,n=Dx){return this.rowMajorBatch(t,e).map((t=>Fx(t,n)))}concatenate(t,e){return new Qx(new Wx([this,t]),e)}take(t){return t<0||null==t?this:new Hx(this,t)}skip(t){return t<0||null==t?this:new Gx(this,t)}prefetch(t){return new ty(this,t)}shuffle(t,e){return new ey(this,t,e)}serial(){return new Vx(this)}}class Wx extends Bx{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Ox(t),done:!1}}}class Ux extends Bx{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Vx extends Bx{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Gx extends Bx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;zi(t.value)}return this.upstream.next()}}class Hx extends Bx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class jx extends Bx{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class qx extends Bx{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;zi(t.value)}}}class Kx extends Bx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=rr(t.value),n=this.transform(t.value),s=rr(n);for(const t of e)sr(t,s)||t.dispose();return{value:n,done:!1}}}class Xx extends Bx{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Yx extends Bx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=rr(t.value),n=await this.transform(t.value),s=rr(n);for(const t of e)sr(t,s)||t.dispose();return{value:n,done:!1}}}class Zx extends Bx{constructor(){super(),this.outputQueue=new Px,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Jx extends Zx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=rr(t.value),n=this.transform(t.value),s=rr(n);this.outputQueue.pushAll(n);for(const t of e)sr(t,s)||t.dispose();return!0}}class Qx extends Bx{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Db=Mb||(Mb={}))[Db.FAIL=0]="FAIL",Db[Db.SHORTEST=1]="SHORTEST",Db[Db.LONGEST=2]="LONGEST";class ty extends Bx{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new zx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class ey extends ty{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Co.alea(n||Rs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ny{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return d(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),sy((async()=>(await n.iterator()).columnMajorBatch(t,e,ry)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,sy((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,sy((async()=>(await e.iterator()).filter((e=>Li((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return sy((async()=>(await e.iterator()).map((e=>Li((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return sy((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return sy((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,sy((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new Ux(r)).take(t),new Qx(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,sy((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Co.alea(e||Rs().toString());return sy((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,sy((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function sy(t,e=null){return new class extends ny{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function ry(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Hs||$(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Hs?Ho(t):Ir(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function iy(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&d("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}ny.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ay=Ih;class oy extends a{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,_i())}nextDataId(){return oy.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&rs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&R(n[0])){const r=n.map((t=>As(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s,r){this.data.set(t,{values:e,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Gu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Fs(t)));return ni(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ni(t.shape,t.dtype,e)}makeOutput(t,e,n){return _i().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Rs();return t(),{kernelMs:Rs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){iy([t],"where");const e=this.readSync(t.dataId);return ay(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function ly(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(iy(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=g(a.shape),h=n||a.dtype,c=N(h,u);for(let t=0;t<u;++t)c[t]=e(l[t],r);return o.makeTensorInfo(a.shape,h,c)}}function uy(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(iy(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,h=e(l,u,r);return o.makeTensorInfo(a.shape,u,h)}}oy.nextDataId=0,Bi("cpu",(()=>new oy),1);const hy=ly(Kt,(t=>t>=0?t:Math.exp(t)-1)),cy={kernelName:Kt,backendName:"cpu",kernelFunc:hy};function dy(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const py={kernelName:ce,backendName:"cpu",kernelFunc:dy};function fy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s;iy([r],"leakyRelu");const a=g(r.shape),o=n.data.get(r.dataId).values,l=C("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?i*o[t]:o[t];return n.makeTensorInfo(r.shape,"float32",l)}const my={kernelName:be,backendName:"cpu",kernelFunc:fy};function gy(t){return(e,n,s,r,i)=>{const a=fi(e,n),o=a.length,l=_(a),u=C(i,g(a)),h=e.length,c=n.length,d=_(e),p=_(n),f=di(e,a),m=di(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=V(e,o,l),i=n.slice(-h);f.forEach((t=>i[t]=0));const a=U(i,h,d),g=n.slice(-c);m.forEach((t=>g[t]=0));const b=U(g,c,p);u[e]=t(s[a],r[b])}return[u,a]}}const by=gy(((t,e)=>t<0?e*t:t));function xy(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;iy([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=by(s.shape,r.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const yy={kernelName:Je,backendName:"cpu",kernelFunc:xy},wy=ly(an,(t=>Math.max(0,t))),vy={kernelName:an,backendName:"cpu",kernelFunc:wy},ky=ly(dn,(t=>Math.min(Math.max(0,t),6))),Iy={kernelName:dn,backendName:"cpu",kernelFunc:ky};function Sy(t){return(e,n,s)=>{const r=C(n,e.length);for(let n=0;n<e.length;++n)r[n]=t(e[n],s);return r}}const Cy=Sy((t=>1/(1+Math.exp(-t)))),Ny=ly(Sn,(t=>1/(1+Math.exp(-t)))),Ty={kernelName:Sn,backendName:"cpu",kernelFunc:Ny};function $y(t,e,n,s,r){if("linear"===n)return dy({inputs:{x:e},backend:t});if("relu"===n)return wy({inputs:{x:e},backend:t});if("elu"===n)return hy({inputs:{x:e},backend:t});if("relu6"===n)return ky({inputs:{x:e},backend:t});if("prelu"===n)return xy({inputs:{x:e,alpha:s},backend:t});if("leakyrelu"===n)return fy({inputs:{x:e},backend:t,attrs:{alpha:r}});if("sigmoid"===n)return Ny({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ey(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const Ry={kernelName:It,backendName:"cpu",kernelFunc:Ey};function Ay(t,e,n="float32"){if("complex64"===n)return Ey({inputs:{real:Ay(t,e,"float32"),imag:Ay(t,e,"float32")},backend:t});const s=P(g(e),n);return t.makeTensorInfo(e,n,s)}function Fy(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const My={kernelName:sn,backendName:"cpu",kernelFunc:Fy};function Dy(t,e,n,s){if("int32"===s)return[e,"int32",Int32Array.from(t)];if("bool"===s){const s=Es([0],n),[r,i]=gy(((t,e)=>t!==e?1:0))(e,[],t,s,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function _y(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return dy({inputs:{x:r},backend:n});const t=Ay(n,r.shape,r.dtype),e=_y({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=Ey({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),s}if("complex64"===r.dtype){const t=Fy({inputs:{input:r},backend:n}),e=_y({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!T(r.dtype,i)){const t=dy({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}const a=n.data.get(r.dataId).values,[o,l,u]=Dy(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}const Oy={kernelName:wt,backendName:"cpu",kernelFunc:_y};function Ly(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;iy([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,h="string"===i.dtype?vh(l):l,c="string"===i.dtype?vh(u):u,d=s||i.dtype,[p,f]=e(i.shape,a.shape,h,c,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:r})=>{const{a:i,b:a}=t,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const t=_y({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,h=_y({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(h.dataId),d=c.complexTensorInfos.real,p=c.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(i.shape,a.shape,l,u,f,m),y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",b),v=Ey({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=e(i.shape,a.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function zy(t){return(e,n,s,r,i,a)=>{const o=fi(e,n),l=g(o),u=o.length,h=_(o),c=C("float32",l),d=C("float32",l),p=di(e,o),f=di(n,o),m=Gu(s,r),b=Gu(i,a),x=e.length,y=_(e),w=n.length,v=_(n);if(p.length+f.length===0)for(let e=0;e<c.length;e++){const n=e%m.length,s=e%b.length,r=t(m[2*n],m[2*n+1],b[2*s],b[2*s+1]);c[e]=r.real,d[e]=r.imag}else for(let e=0;e<c.length;e++){const n=V(e,u,h),s=n.slice(-x);p.forEach((t=>s[t]=0));const r=U(s,x,y),i=n.slice(-w);f.forEach((t=>i[t]=0));const a=U(i,w,v),o=t(m[2*r],m[2*r+1],b[2*a],b[2*a+1]);c[e]=o.real,d[e]=o.imag}return[c,d,o]}}const Py=gy(((t,e)=>t+e)),By=zy(((t,e,n,s)=>({real:t+n,imag:e+s}))),Wy=Ly(et,Py,By),Uy={kernelName:et,backendName:"cpu",kernelFunc:Wy};function Vy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=g(r.shape),o=k(i,a),l=g(o);d(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Gy={kernelName:on,backendName:"cpu",kernelFunc:Vy};function Hy(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;iy([r,i],"matMul");const l=r.shape.length,u=i.shape.length,h=a?r.shape[l-2]:r.shape[l-1],c=o?i.shape[u-1]:i.shape[u-2],p=a?r.shape[l-1]:r.shape[l-2],f=o?i.shape[u-2]:i.shape[u-1],m=r.shape.slice(0,-2),b=i.shape.slice(0,-2),x=g(m),y=g(b),w=fi(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);d(h===c,(()=>`Error in matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,f,c]:[y,c,f],k=Vy({inputs:{x:r},backend:n,attrs:{shape:a?[x,h,p]:[x,p,h]}}),I=Vy({inputs:{x:i},backend:n,attrs:{shape:v}}),S=a?k.shape[1]:k.shape[2],C=a?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],T=Math.max(x,y),$=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=_(k.shape),A=_(I.shape),[F,M,D]=a?[R[0],1,R[1]]:[R[0],R[1],1],[O,L,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=C*N,B=ni([T,C,N],k.dtype),W=B.values,U=n.blockSize;for(let t=0;t<T;t++)for(let e=0;e<C;e+=U)for(let n=0;n<N;n+=U)for(let s=0;s<S;s+=U){const r=Math.min(e+U,C),i=Math.min(n+U,N),a=Math.min(s+U,S);for(let o=e;o<r;o++)for(let e=n;e<i;e++){let n=0;for(let r=s;r<a;r++){const s=Math.min(t,x-1)*F,i=Math.min(t,y-1)*z;n+=$[s+o*M+r*D]*E[r*O+e*L+i]}W[t*P+(o*N+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,B.dtype,B.values)}const jy={kernelName:gt,backendName:"cpu",kernelFunc:Hy},qy={kernelName:es,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:c}=s;let d,p,f;const m=[];d=Hy({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Wy({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),h&&(f=$y(n,d,h,o,c),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function Ky(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Xy={kernelName:J,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;iy(e,"abs");let s=new Float32Array(g(e.shape));return s=Ky(n.data.get(e.dataId).values),n.makeOutput(s,e.shape,e.dtype)}},Yy=ly(Q,(t=>Math.acos(t))),Zy={kernelName:Q,backendName:"cpu",kernelFunc:Yy},Jy=ly(tt,(t=>Math.acosh(t))),Qy={kernelName:tt,backendName:"cpu",kernelFunc:Jy},tw={kernelName:nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;iy(e,"addN");const r=s.map((t=>n.data.get(t.dataId).values)),i=ni(s[0].shape,s[0].dtype),a=i.values;for(let t=0;t<s.length;t++){const e=r[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function ew(t,e,n,s,r){const i=e.length,a=g(e),o=_(e),l=_(r),u=C(n,g(r));for(let e=0;e<a;++e){const n=V(e,i,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[U(r,i,l)]=t[e]}return u}function nw(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:i}=n;iy(r,"transpose");const a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[i[t]];const l=ew(s.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const sw={kernelName:Kn,backendName:"cpu",kernelFunc:nw},rw={kernelName:st,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;iy(r,"all");const o=I(i,r.shape);let l=o;const u=co(l,r.shape.length);let h=r;null!=u&&(h=nw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=fo(l.length,r.shape.length)),ho("all",l,h.shape.length);const[c,d]=lo(h.shape,l),p=g(d),f=P(g(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const s=m[e+t];n=n&&s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Vy({inputs:{x:b},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},iw={kernelName:rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;iy(r,"any");const o=I(i,r.shape);let l=o;const u=co(l,r.shape.length);let h=r;null!=u&&(h=nw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=fo(l.length,r.shape.length)),ho("any",l,h.shape.length);const[c,d]=lo(h.shape,l),p=g(d),f=P(g(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const s=m[e+t];n=n||s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Vy({inputs:{x:b},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},aw={kernelName:it,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;iy(r,"argMax");let a=I(i,r.shape);const o=co(a,r.shape.length);let l=r;const u=[];null!=o&&(l=nw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),a=[a[0]],ho("argMax",a,l.shape.length);const[h,c]=lo(l.shape,a),d=P(g(h),"int32"),p=g(c),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],s=0;for(let t=0;t<p;++t){const r=f[e+t];r>n&&(n=r,s=t)}d[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",d)}},ow={kernelName:at,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;iy(r,"argMin");let a=I(i,r.shape);const o=co(a,r.shape.length);let l=r;const u=[];null!=o&&(l=nw({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),a=[a[0]],ho("argMin",a,l.shape.length);const[h,c]=lo(l.shape,a),d=P(g(h),"int32"),p=g(c),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],s=0;for(let t=0;t<p;++t){const r=f[e+t];r<n&&(n=r,s=t)}d[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",d)}},lw=ly(ot,(t=>Math.asin(t))),uw={kernelName:ot,backendName:"cpu",kernelFunc:lw},hw=ly(lt,(t=>Math.asinh(t))),cw={kernelName:lt,backendName:"cpu",kernelFunc:hw},dw=ly(ut,(t=>Math.atan(t))),pw={kernelName:ut,backendName:"cpu",kernelFunc:dw},fw=gy(((t,e)=>Math.atan2(t,e))),mw=Ly(ct,fw),gw={kernelName:ct,backendName:"cpu",kernelFunc:mw},bw=ly(ht,(t=>Math.atanh(t))),xw={kernelName:ht,backendName:"cpu",kernelFunc:bw};function yw(t,e,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,c=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ni(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*b,m=e*s[0];for(let e=0;e<r.inChannels;++e)for(let b=0;b<r.outHeight;++b){const w=b*a-d,v=Math.max(0,w),k=Math.min(r.inHeight,h+w),I=n+b*x;for(let n=0;n<r.outWidth;++n){const a=n*o-p,h=Math.max(0,a),d=Math.min(r.inWidth,c+a);let b=f,x=0,w=0;for(let n=v;n<k;n+=l){const r=m+n*s[1];for(let n=h;n<d;n+=u){const a=t[r+n*s[2]+e];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,w++)}if(isNaN(b))break}g[I+n*y+e]="avg"===i?x/w:b}}}return m}function ww(t,e,n,s,r=!1,i=!1){const a=ni(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,h=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ni(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const x=Math.min(s.inHeight,c+g);for(let o=0;o<s.outWidth;++o){const c=o*l-f;let p=c;for(;p<0;)p+=h;const y=Math.min(s.inWidth,d+c);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=u){const a=n-g;for(let o=p;o<y;o+=h){const l=o-c,u=m.get(t,n,o,e);u>w&&(w=u,v=r?i?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}function vw(t,e,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,h=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ni(r.outShape,n),w=y.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let e=0;e<r.batchSize;++e){const n=e*v,y=e*s[0];for(let e=0;e<r.inChannels;++e)for(let v=0;v<r.outDepth;++v){const C=v*a-m;let N=C;for(;N<0;)N+=u;const T=Math.min(r.inDepth,d+C),$=n+v*k;for(let n=0;n<r.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=h;const m=Math.min(r.inHeight,p+a),v=$+n*I;for(let n=0;n<r.outWidth;++n){const a=n*l-b;let o=a;for(;o<0;)o+=c;const p=Math.min(r.inWidth,f+a),g=v+n*S;let k=x,I=0,C=0;for(let n=N;n<T;n+=u){const r=y+n*s[1];for(let n=d;n<m;n+=h){const a=r+n*s[2];for(let n=o;n<p;n+=c){const r=t[a+n*s[3]+e];if("max"===i&&r>k?k=r:"avg"===i&&(I+=r,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+e]="avg"===i?I/C:k}}}}return y}const kw={kernelName:dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;iy(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;d(oa(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Zi(r.shape,i,a,1,o,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))h=dy({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=_(r.shape),s=yw(t,r.shape,r.dtype,e,u,"avg");h=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return h}},Iw={kernelName:ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;iy(r,"avgPool3d");const h=Ji(r.shape,i,a,1,o,l,u),c=vw(n.data.get(r.dataId).values,r.shape,r.dtype,_(r.shape),h,"avg");return n.makeTensorInfo(c.shape,"float32",c.values)}},Sw={kernelName:mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;iy([r,i],"avgPool3DGrad");const h=Ji(i.shape,a,o,1,l,u),c=h.strideDepth,d=h.strideHeight,p=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=w-1-h.padInfo.front,S=k-1-h.padInfo.left,C=v-1-h.padInfo.top,N=ni(i.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(r);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const i=n-I,a=s-C,o=r-S;let l=0;for(let n=0;n<w;n+=b){const s=(i+n)/c;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=x){const r=(a+n)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=y){const i=(o+n)/p;i<0||i>=h.outWidth||Math.floor(i)!==i||(l+=$.get(t,s,r,i,e))}}}N.set(l*T,t,n,s,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Cw={kernelName:pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;iy([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,h=Zi(a.shape,o,l,1,u),c=h.strideHeight,d=h.strideWidth,p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,y=x-1-h.padInfo.left,w=b-1-h.padInfo.top,v=ni(a.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=ni(r.shape,"float32",I);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=n-w,i=s-y;let a=0;for(let n=0;n<b;n+=m){const s=(r+n)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=g){const r=(i+n)/d;r<0||r>=h.outWidth||Math.floor(r)!==r||(a+=S.get(t,s,r,e))}}v.set(a*k,t,n,s,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Nw={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:i,offset:a,mean:o,variance:l}=e;d(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),iy([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const h=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,x=f.length,y=p.length,w=c.length;let v=0,k=0,I=0,S=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-c[k++])*f[I++]/Math.sqrt(p[S++]+u),v>=b&&(v=0),k>=w&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function Tw(t,e,n,s,r){const i=Ti(s,e,n),a=g(n),o=_(s);if(i){const n=$i(e,o);return"string"===r?t.slice(n,n+a):t.subarray(n,n+a)}const l=ni(s,r,"string"===r?vh(t):t),u=ni(n,r);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),s=n.map(((t,n)=>t+e[n]));u.set(l.get(...s),...n)}return"string"===r?kh(u.values):u.values}function $w(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s;iy(r,"slice");const[o,l]=Ei(r,i,a);mi(r,o,l);const u=Tw(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Ew={kernelName:wn,backendName:"cpu",kernelFunc:$w},Rw={kernelName:bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;iy([r],"batchToSpaceND");const o=i.reduce(((t,e)=>t*e)),l=Tu(r.shape,i,o),u=$u(l.length,i.length),h=Eu(r.shape,i,o),c=Ru(a,i.length),d=Au(h,a,i.length),p=Vy({inputs:{x:r},backend:n,attrs:{shape:l}}),f=nw({inputs:{x:p},backend:n,attrs:{perm:u}}),m=Vy({inputs:{x:f},backend:n,attrs:{shape:h}}),g=$w({inputs:{x:m},backend:n,attrs:{begin:c,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Aw(t,e,n,s,r){const i=g(s),a=P(r,n);for(let n=0;n<t.length;n++){const s=t[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(a[s]+=i>0?e[n]:1)}return a}function Fw(t,e,n,s=!1){const r=t.shape[0],i=t.shape[1],a=ni([r,n],e.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){const i=t.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?a.set(1,o,i):e.size>0?a.set(a.get(o,i)+e.get(o,r),o,i):a.set(a.get(o,i)+1,o,i))}return a}const Mw={kernelName:xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=Aw(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},Dw={kernelName:yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=fi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},_w=Sy((t=>Math.ceil(t))),Ow=uy(vt,_w),Lw={kernelName:vt,backendName:"cpu",kernelFunc:Ow},zw=ly(kt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Pw={kernelName:kt,backendName:"cpu",kernelFunc:zw},Bw={kernelName:St,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(g(e.shape)),r=n.data.get(e.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];s[t]=Math.hypot(e,n)}return n.makeOutput(s,e.shape,"float32")}};function Ww(t,e,n,s){const r=N(n,g(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=g(t.shape);r.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const i="string"===n?vh(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+s;for(let e=0;e<t.shape[1];++e)r[o+e]=i[a++]}s+=t.shape[1]}))}return r}function Uw(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Vw={kernelName:pe,backendName:"cpu",kernelFunc:Uw};function Gw(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=I(r,e[0].shape)[0];bu(e.map((t=>t.shape)),i);let a=xu(e.map((t=>t.shape)),i);if(0===g(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>g(t.shape)>0));if(1===o.length)return dy({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const t=o.map((t=>Fy({inputs:{input:t},backend:n}))),e=o.map((t=>Uw({inputs:{input:t},backend:n}))),s=Gw({inputs:t,backend:n,attrs:{axis:i}}),r=Gw({inputs:e,backend:n,attrs:{axis:i}}),a=Ey({inputs:{real:s,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const l=o.map((t=>{const e=g(t.shape.slice(i));return Vy({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=xu(l.map((t=>t.shape)),1);const h=1===l[0].shape[0],c=Ww(u,a,e[0].dtype,h),d=xu(o.map((t=>t.shape)),i),p=n.makeTensorInfo(d,e[0].dtype,c);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const Hw={kernelName:Ct,backendName:"cpu",kernelFunc:Gw};function jw(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=s;iy([r,i],"conv2d");const c=la(l),d=Qi(r.shape,i.shape,a,u,o,h,!1,c),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,w=new Ws(d.outShape,r.dtype),v=_(r.shape),k=_(i.shape),I=v[0],S=y?v[1]:v[2],C=y?v[2]:1,N=y?1:v[1],T=w.strides[0],$=y?w.strides[1]:w.strides[2],E=y?w.strides[2]:1,R=y?1:w.strides[1],A=n.data.get(r.dataId).values,F=n.data.get(i.dataId).values,M=w.values;for(let t=0;t<d.batchSize;++t){const e=t*I,n=t*T;for(let t=0;t<d.outHeight;++t){const s=n+t*$,r=t*d.strideHeight-x;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*S;for(let t=0;t<d.outWidth;++t){const e=s+t*E,n=t*d.strideWidth-b;for(let t=0;t<f;++t){const s=n+t*g;if(s<0||s>=d.inWidth)continue;const r=a+s*C;let o=i+t*k[1];for(let t=0;t<d.inChannels;++t){const n=A[r+t*N];for(let t=0;t<d.outChannels;++t)M[e+t*R]+=n*F[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const qw={kernelName:Nt,backendName:"cpu",kernelFunc:jw},Kw={kernelName:Tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=s;iy([r,i],"conv2dBackpropFilter");const c=la(l),d=Qi(r.shape,h,a,1,o,u,!1,c),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new Ws(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=new Ws(r.shape,r.dtype,v),S=new Ws(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/p)),n=Math.min(d.outHeight,(d.inHeight+w-t)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((y-s)/f)),i=Math.min(d.outWidth,(d.inWidth+y-s)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=e;h<n;++h){const e=t+h*p-w;for(let t=r;t<i;++t){const n=s+t*f-y;l+=b?I.get(u,e,n,a)*S.get(u,h,t,o):I.get(u,a,e,n)*S.get(u,o,h,t)}}x.set(l,t,s,a,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Xw={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=s;iy([r,i],"conv2dBackpropInput");const c=_(i.shape),d=_(r.shape);let p=la(u);const f=Qi(a,i.shape,o,1,l,h,!1,p),m=new Ws(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,[y,w,v]=c,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:N,inWidth:T,outChannels:$,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const M=I-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===p,L=m.strides[0],z=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],W=d[0],U=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let t=0;t<k;++t)for(let e=0;e<C;++e)for(let n=0;n<N;++n){const s=n-M,r=Math.max(0,Math.ceil(s/A)),i=Math.min(E,(I+s)/A);for(let a=0;a<T;++a){const o=a-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let h=0;for(let n=r;n<i;++n){const r=n*A-s;for(let s=l;s<u;++s){const i=W*t+U*n+V*s,a=y*(I-1-r)+w*(S-1-(s*F-o))+v*e;for(let t=0;t<$;++t)h+=b[i+G*t]*x[a+t]}}g[L*t+z*n+P*a+B*e]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Yw={kernelName:Et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s;iy([r,i],"conv3d");const u=ta(r.shape,i.shape,a,l,o),{filterDepth:h,filterHeight:c,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,w=new Ws(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=w.values,S=_(r.shape),C=_(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*S[0],n=t*w.strides[0];for(let t=0;t<u.outDepth;++t){const s=n+t*w.strides[1],r=t*u.strideDepth-b;for(let t=0;t<h;++t){const n=r+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*S[1];for(let t=0;t<u.outHeight;++t){const e=s+t*w.strides[2],n=t*u.strideHeight-y;for(let t=0;t<c;++t){const s=n+t*f;if(s<0||s>=u.inHeight)continue;const r=i+t*C[1],o=a+s*S[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,s=t*u.strideWidth-x;for(let t=0;t<d;++t){const e=s+t*m;if(e<0||e>=u.inWidth)continue;const i=r+t*C[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=v[a+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Zw={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s;iy([r,i],"conv3dBackpropFilterV2");const u=_(r.shape),h=_(i.shape),c=ta(r.shape,l,a,1,o),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,b=c.filterWidth,x=new Ws(c.filterShape,"float32"),y=x.values,[w,v,k,I]=x.strides,S=n.data.get(i.dataId).values,[C,N,T,$]=h,E=n.data.get(r.dataId).values,[R,A,F,M]=u,D=c.padInfo.front,O=c.padInfo.left,L=c.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((D-t)/d)),n=Math.min(c.outDepth,(c.inDepth+D-t)/d),s=t*w;for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((L-r)/p)),a=Math.min(c.outHeight,(c.inHeight+L-r)/p),o=r*v+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(c.outWidth,(c.inWidth+O-s)/f),h=s*k+o;for(let o=0;o<c.inChannels;++o){const m=o*I+h;for(let h=0;h<c.outChannels;++h){let g=0;for(let m=0;m<c.batchSize;++m){const c=m*R,b=m*C;for(let m=e;m<n;++m){const e=(t+m*d-D)*A+c,n=m*N+b;for(let t=i;t<a;++t){const i=(r+t*p-L)*F+e,a=t*T+n;for(let t=l;t<u;++t){const e=t*$+a;g+=E[(s+t*f-O)*M+i+o]*S[e+h]}}}}y[m+h]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Jw={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s;iy([r],"conv3dBackpropInputV2");const u=_(r.shape),h=_(i.shape),c=ta(l,i.shape,o,1,a),d=new Ws(c.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(r.dataId).values,[y,w,v,k]=u,I=n.data.get(i.dataId).values,[S,C,N,T]=h,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:M,inHeight:D,inWidth:O,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=c,G=E-1-c.padInfo.front,H=R-1-c.padInfo.top,j=A-1-c.padInfo.left;for(let t=0;t<$;++t)for(let e=0;e<F;++e)for(let n=0;n<M;++n){const s=n-G,r=Math.max(0,Math.ceil(s/W)),i=Math.min(z,(E+s)/W);for(let a=0;a<D;++a){const o=a-H,l=Math.max(0,Math.ceil(o/U)),u=Math.min(P,(R+o)/U);for(let h=0;h<O;++h){const c=h-j,d=Math.max(0,Math.ceil(c/V)),$=Math.min(B,(A+c)/V);let F=0;for(let n=r;n<i;++n){const r=n*W-s;for(let s=l;s<u;++s){const i=s*U-o;for(let a=d;a<$;++a){const o=y*t+w*n+v*s+k*a,l=S*(E-1-r)+C*(R-1-i)+N*(A-1-(a*V-c))+T*e;for(let t=0;t<L;++t)F+=x[o+t]*I[l+t]}}}p[f*t+m*n+g*a+b*h+e]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Qw=ly(Ft,(t=>Math.cos(t))),tv={kernelName:Ft,backendName:"cpu",kernelFunc:Qw},ev=ly(Mt,(t=>Math.cosh(t))),nv={kernelName:Mt,backendName:"cpu",kernelFunc:ev},sv={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[h,c,d,p]=r.shape,f=i.shape[0],[m,g]=o,b=ni([f,m,g,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,w=n.data.get(r.dataId).values,v=_(r.shape),k=_(b.shape);for(let t=0;t<f;t++){const e=4*t,n=x[e],s=x[e+1],r=x[e+2],i=x[e+3],a=y[t];if(a>=h)continue;const o=m>1?(r-n)*(c-1)/(m-1):0,f=g>1?(i-s)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const h=m>1?n*(c-1)+e*o:.5*(n+r)*(c-1);if(h<0||h>c-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*k[2]+e*k[1]+t*k[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(h),r=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){const h=g>1?s*(d-1)+l*f:.5*(s+i)*(d-1);if(h<0||h>d-1){for(let n=0;n<p;n++){const s=n+l*k[2]+e*k[1]+t*k[0];b.values[s]=u}continue}const c=Math.floor(h),m=Math.ceil(h),x=h-c;for(let s=0;s<p;s++){let i=s+c*v[2]+n*v[1]+a*v[0];const u=w[i];i=s+m*v[2]+n*v[1]+a*v[0];const h=w[i];i=s+c*v[2]+r*v[1]+a*v[0];const d=w[i];i=s+m*v[2]+r*v[1]+a*v[0];const p=u+(h-u)*x,f=d+(w[i]-d)*x;i=s+l*k[2]+e*k[1]+t*k[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+i)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*k[2]+e*k[1]+t*k[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(h);for(let s=0;s<p;s++){const r=s+o*v[2]+l*v[1]+a*v[0],i=s+n*k[2]+e*k[1]+t*k[0];b.values[i]=w[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},rv={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;iy(r,"cumprod");const l=co([i],r.shape.length);let u=r;null!=l&&(u=nw({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=fo(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const c=tr(u.dtype,"int32"),d=z(g(u.shape),c),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?1:p[n];else{const s=m(t,e-1);d[n]=a?p[s]*d[s]:p[n]*d[s]}}const b=n.makeTensorInfo(u.shape,c,d);if(null!=l){const t=nw({inputs:{x:b},backend:n,attrs:{perm:po(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),t}return b}},iv={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;iy(r,"cumsum");const l=co([i],r.shape.length);let u=r;null!=l&&(u=nw({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=fo(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const c=tr(u.dtype,"int32"),d=P(g(u.shape),c),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const s=m(t,e-1);d[n]=a?p[s]+d[s]:p[n]+d[s]}}const b=n.makeTensorInfo(u.shape,c,d);if(null!=l){const t=nw({inputs:{x:b},backend:n,attrs:{perm:po(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),t}return b}},av={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const t=Aw(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,t)}if(2===r.shape.length){const t=Fw(n.bufferSync(r),n.bufferSync(i),a,o);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},ov={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s;d("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],h=r.shape[3],c=l*i,p=u*i,f=h/(i*i),m=n.data.get(r.dataId).values,g=new Float32Array(o*c*p*f);let b=0;for(let t=0;t<o;++t)for(let e=0;e<c;++e){const n=Math.floor(e/i),s=e%i;for(let e=0;e<p;++e){const r=Math.floor(e/i),a=(s*i+e%i)*f;for(let e=0;e<f;++e){const s=e+a+h*(r+u*(n+l*t));g[b++]=m[s]}}}return n.makeTensorInfo([o,c,p,f],r.dtype,g)}};function lv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;iy([r,i],"depthwiseConv2DNative");const h=_(r.shape),c=_(i.shape);let p=l;null==p&&(p=[1,1]),d(oa(a,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`));const f=Qi(r.shape,i.shape,a,p,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=f,w=y.left,v=y.top,k=f.outChannels/f.inChannels,I=new Ws(f.outShape,r.dtype),S=n.data.get(r.dataId).values,C=n.data.get(i.dataId).values,N=I.values;for(let t=0;t<f.batchSize;++t){const e=t*h[0],n=t*I.strides[0];for(let t=0;t<f.outHeight;++t){const s=n+t*I.strides[1],r=t*f.strideHeight-v;for(let t=0;t<m;++t){const n=r+t*b;if(n<0||n>=f.inHeight)continue;const i=t*c[0],a=e+n*h[1];for(let t=0;t<f.outWidth;++t){const e=s+t*I.strides[2],n=t*f.strideWidth-w;for(let t=0;t<g;++t){const s=n+t*x;if(s<0||s>=f.inWidth)continue;const r=i+t*c[1],o=a+s*f.inChannels;let l=e,u=r;for(let t=0;t<f.inChannels;++t){const e=S[o+t];for(let t=0;t<k;++t)N[l+t]+=e*C[u+t];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const uv={kernelName:Pt,backendName:"cpu",kernelFunc:lv},hv={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=s;iy([r,i],"depthwiseConv2dNativeBackpropFilter");const c=Qi(r.shape,h,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=c,g=new Ws(c.filterShape,"float32"),b=c.padInfo.left,x=c.padInfo.top,y=c.outChannels/c.inChannels,w=n.data.get(r.dataId).values,v=new Ws(r.shape,r.dtype,w),k=n.data.get(i.dataId).values,I=new Ws(i.shape,i.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((x-t)/d)),n=Math.min(c.outHeight,(c.inHeight+x-t)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((b-s)/p)),i=Math.min(c.outWidth,(c.inWidth+b-s)/p);for(let a=0;a<c.outChannels;++a){const o=Math.trunc(a/y),l=a%y;let u=0;for(let l=0;l<c.batchSize;++l)for(let h=e;h<n;++h){const e=t+h*d-x;for(let t=r;t<i;++t){const n=s+t*p-b;u+=v.get(l,e,n,o)*I.get(l,h,t,a)}}g.set(u,t,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},cv={kernelName:Wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=s;iy([r,i],"depthwiseConv2DNativeBackpropInput");const c=_(r.shape),d=_(i.shape),p=Qi(h,i.shape,a,o,l,u,!0),f=new Ws(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(r.dataId).values,[w,v,k]=c,I=n.data.get(i.dataId).values,[S,C,N]=d,{batchSize:T,filterHeight:$,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:M,outHeight:D,outWidth:O,strideHeight:L,strideWidth:z}=p,P=$-1-p.padInfo.top,B=E-1-p.padInfo.left,W=M/R;for(let t=0;t<T;++t)for(let e=0;e<R;++e)for(let n=0;n<A;++n){const s=n-P,r=Math.max(0,Math.ceil(s/L)),i=Math.min(D,($+s)/L);for(let a=0;a<F;++a){const o=a-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(O,(E+o)/z);let h=0;for(let n=r;n<i;++n){const r=n*L-s;for(let s=l;s<u;++s){const i=w*t+v*n+k*s,a=S*($-1-r)+C*(E-1-(s*z-o))+N*e;for(let t=0;t<W;++t)h+=y[i+(e*W+t)]*I[a+t]}}m[g*t+b*n+x*a+e]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},dv={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=g(s.shape),i=n.data.get(s.dataId).values,a=ni([r,r],s.dtype),o=a.values;for(let t=0;t<i.length;t++)o[t*r+t]=i[t];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},pv={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,h=s.shape.length,c=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:T,outShape:$}=Yi(s.shape,r.shape,i,a,"NHWC",o),E=g($),R=$.length,A=N(s.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<x;++e){const n=e*v-w.top;for(let i=0;i<y;++i){const a=i*k-w.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const i=n+e*C;if(i>=0&&i<f)for(let n=0;n<S;++n){const p=a+n*T;if(p>=0&&p<m){const a=U([t,i,p,o],h,_(s.shape)),f=U([e,n,o],d,_(r.shape)),m=u[a]+c[f];m>l&&(l=m)}}}A[U([t,e,i,o],R,_($))]=l}}}return{dataId:l.write(Es(A,s.dtype),$,s.dtype),shape:$,dtype:s.dtype}}},fv={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=L(s.shape,u.data.get(s.dataId).values),c=L(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Yi(s.shape,r.shape,a,o,"NHWC",l);d(i.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=L(N,u.data.get(i.dataId).values),$=B(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let s=0;s<x;++s){const r=s*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<k;++e){const s=n+e*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=h[t][s][u][i]+c[e][n][i];r>a&&(a=r,o=e,l=n)}}}$[o][l][i]+=T[t][e][s][i]}}}return{dataId:u.write(Es($,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},mv={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=L(s.shape,u.data.get(s.dataId).values),c=L(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Yi(s.shape,r.shape,a,o,"NHWC",l);d(i.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const T=L(N,u.data.get(i.dataId).values),$=B(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let s=0;s<x;++s){const r=s*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<k;++e){const s=n+e*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=h[t][s][u][i]+c[e][n][i];r>a&&(a=r,o=s,l=u)}}}$[t][o][l][i]+=T[t][e][s][i]}}}return{dataId:u.write(Es($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gv=gy(((t,e)=>t*e)),bv=zy(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),xv=Ly(We,gv,bv),yv={kernelName:We,backendName:"cpu",kernelFunc:xv};function wv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;let o;iy(r,"sum"),o="bool"===r.dtype?_y({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):dy({inputs:{x:r},backend:n});const l=o.shape.length,u=I(i,o.shape),h=co(u,l);let c=u,d=o;null!=h&&(d=nw({inputs:{x:o},backend:n,attrs:{perm:h}}),c=fo(c.length,l)),ho("sum",c,d.shape.length);const[p,f]=lo(d.shape,c);let m=Ay(n,p,tr(d.dtype,"int32"));const b=g(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<x.length;++t){const e=t*b;let n=0;for(let t=0;t<b;++t)n+=y[e+t];x[t]=n}if(a){const t=m;m=Vy({inputs:{x:m},backend:n,attrs:{shape:uo(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=h&&n.disposeIntermediateTensorInfo(d),m}const vv={kernelName:Tn,backendName:"cpu",kernelFunc:wv},kv={kernelName:qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Qu(r,i.length);eh(a.length,l,i);const{path:u,steps:h}=nh(o,l),c=h.length;let d=null,p=a.length;const f=[];for(let t=0;t<c;++t){for(const e of h[t]){const{permutationIndices:t,expandDims:s}=th(p,l[e]);let r;sh(t)?r=i[e]:(r=nw({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let t=0;t<s.length;++t)a.splice(s[t],0,1);b(r.shape,a)||(r=Vy({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=xv({inputs:{a:r,b:d},backend:n}),f.push(d))}t<c-1&&(u[t]>=0&&(d=wv({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},Iv={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;iy([s,r],"eluGrad");const i=new Float32Array(g(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];i[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(r.shape,"float32",i)}},Sv=gy(((t,e)=>t===e?1:0)),Cv=Ly(Zt,Sv,null,"bool"),Nv={kernelName:Zt,backendName:"cpu",kernelFunc:Cv},Tv=zu,$v=Pu,Ev=Bu,Rv=Wu,Av=Uu,Fv=Vu,Mv=ly(Yt,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+Tv*n);return e*(1-((((Fv*s+Av)*s+Rv)*s+Ev)*s+$v)*s*Math.exp(-n*n))})),Dv={kernelName:Yt,backendName:"cpu",kernelFunc:Mv},_v=Sy((t=>Math.exp(t))),Ov=uy(Jt,_v,"float32"),Lv={kernelName:Jt,backendName:"cpu",kernelFunc:Ov};function zv(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(d(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),Vy({inputs:{x:r},backend:n,attrs:{shape:o}})}const Pv={kernelName:Qt,backendName:"cpu",kernelFunc:zv},Bv=Sy((t=>Math.expm1(t))),Wv=uy(te,Bv),Uv={kernelName:te,backendName:"cpu",kernelFunc:Wv},Vv=gy(((t,e)=>t/e)),Gv=Ly(jt,Vv),Hv={kernelName:jt,backendName:"cpu",kernelFunc:Gv},jv=gy(((t,e)=>t-e)),qv=zy(((t,e,n,s)=>({real:t-n,imag:e-s}))),Kv=Ly(Un,jv,qv),Xv={kernelName:Un,backendName:"cpu",kernelFunc:Kv};function Yv(t,e,n){const s=t.shape,r=s[0],i=s[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],h=g(u),c=C("float32",h),d=C("float32",h);for(let t=0;t<r;t++){const s=$w({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),r=$w({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=Ey({inputs:{real:s,imag:r},backend:n}),{real:u,imag:h}=Zv(a,e,n),p=Gu(u,h);for(let e=0;e<i;e++){const n=Ku(p,e);c[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",c),f=n.makeTensorInfo(u,"float32",d),m=Ey({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Zv(t,e,n){const s=g(t.shape),r=n.data.get(t.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=Jv(i,a,s,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",r.real),e=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",$s(s,"float32")),a=dy({inputs:{x:i},backend:n}),l=Hv.kernelFunc({inputs:{a:t,b:i},backend:n}),u=Hv.kernelFunc({inputs:{a:e,b:a},backend:n}),h=n.data.get(l.dataId).values,c=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:c}}return r}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let i=0,a=0;for(let s=0;s<e;s++){const o=Zu(r*s,e,n),l=Ku(t,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Xu(s,i,a,r)}return s}(Gu(i,a),s,e);return Hu(t)}var o}function Jv(t,e,n,s,r){if(1===n)return{real:t,imag:e};const i=Gu(t,e),a=n/2,o=ju(i),l=o.real,u=o.imag,h=[l.length],c=r.makeTensorInfo(h,"float32",l),d=r.makeTensorInfo(h,"float32",u),p=Ey({inputs:{real:c,imag:d},backend:r}),f=qu(i),m=f.real,g=f.imag,b=[m.length],x=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),w=Ey({inputs:{real:x,imag:y},backend:r}),v=Jv(l,u,a,s,r),k=v.real,I=v.imag,S=[k.length],C=r.makeTensorInfo(S,"float32",k),N=r.makeTensorInfo(S,"float32",I),T=Ey({inputs:{real:C,imag:N},backend:r}),$=Jv(m,g,a,s,r),E=$.real,R=$.imag,A=[E.length],F=r.makeTensorInfo(A,"float32",E),M=r.makeTensorInfo(A,"float32",R),D=Ey({inputs:{real:F,imag:M},backend:r}),_=Yu(n,s),O=[_.real.length],L=r.makeTensorInfo(O,"float32",_.real),z=r.makeTensorInfo(O,"float32",_.imag),P=Ey({inputs:{real:L,imag:z},backend:r}),B=xv({inputs:{a:P,b:D},backend:r}),W=Wy({inputs:{a:T,b:B},backend:r}),U=Kv({inputs:{a:T,b:B},backend:r}),V=Fy({inputs:{input:W},backend:r}),G=Fy({inputs:{input:U},backend:r}),H=Uw({inputs:{input:W},backend:r}),j=Uw({inputs:{input:U},backend:r}),q=Gw({inputs:[V,G],backend:r,attrs:{axis:0}}),K=Gw({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Qv={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=g(s.shape),i=s.shape[s.shape.length-1],a=Vy({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=Yv(a,!1,n),l=Vy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function tk(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:i}=n,a=i||F(r),o=N(a,g(s));return function(t,e,n){t.fill(e)}(o,r),e.makeTensorInfo(s,a,o)}const ek={kernelName:ne,backendName:"cpu",kernelFunc:tk},nk={kernelName:se,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,i=C(s.dtype,g(s.shape)),[a,o,l,u]=s.shape,h=r.data.get(s.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const s=t*u;for(let r=0;r<u;r++){const a=Math.round(l-t-1),o=e+n+s+r;let c=h[o];a>=0&&a<l&&(c=h[e+n+a*u+r]),i[o]=c}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sk=Sy((t=>Math.floor(t))),rk=uy(re,sk),ik={kernelName:re,backendName:"cpu",kernelFunc:rk},ak=gy(((t,e)=>Math.floor(t/e))),ok=Ly(ie,ak,null,"int32"),lk={kernelName:ie,backendName:"cpu",kernelFunc:ok},uk={kernelName:ns,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=jw({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d}});if(a){const t=m;if("NCHW"===h&&1===a.shape.length&&1!==a.shape[0]){const t=Vy({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Wy({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=Wy({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===h&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const t=Vy({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=$y(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=$y(n,m,p,o,f);n.disposeIntermediateTensorInfo(t)}return m}},hk={kernelName:ss,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=lv({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d}});if(a){const t=m;m=Wy({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=$y(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function ck(t,e,n,s,r,i,a,o,l){const u=ni([s,i],n);for(let n=0;n<s;n++){const s=[];let h=0;for(let e=0;e<r;e++){const i=t[n*r+e];h+=i*a[e],s.push(i)}if(h<0||h>=l/i)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let t=0;t<i;t++)u.values[n*i+t]=e.get(...e.indexToLoc(h*i+t))}return u}const dk={kernelName:le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=g(s.shape),a=r.shape,o=a[a.length-1],[l,u,h,c]=Fu(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=ck(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,h,c,s.shape,i);return n.makeTensorInfo(l,s.dtype,d.values)}};function pk(t,e,n){const s=ni(n,t.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),i=r[0],a=r[2],o=e.locToIndex([i,a]);r[2]=e.values[o];const l=t.locToIndex(r);0<=l&&l<t.values.length&&(s.values[n]=t.values[l])}return s}const fk={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s;iy([r,i],"gatherV2");const l=I(a,r.shape)[0],u=n.data.get(i.dataId).values,h=r.shape[l];for(let t=0;t<u.length;++t){const e=u[t];d(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let c=o;null==o&&(c=0);const p=g(i.shape),f=wh(r,i,l,c),m=Vy({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),b=Vy({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),x=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],y=n.bufferSync(b),w=pk(n.bufferSync(m),y,x);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(f.outputShape,w.dtype,w.values)}},mk=gy(((t,e)=>t>e?1:0)),gk=Ly(ue,mk,null,"bool"),bk={kernelName:ue,backendName:"cpu",kernelFunc:gk},xk=gy(((t,e)=>t>=e?1:0)),yk=Ly(he,xk,null,"bool"),wk={kernelName:he,backendName:"cpu",kernelFunc:yk},vk={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=g(s.shape),i=s.shape[s.shape.length-1],a=Vy({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=Yv(a,!0,n),l=Vy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},kk=ly(fe,(t=>Number.isFinite(t)?1:0),"bool"),Ik={kernelName:fe,backendName:"cpu",kernelFunc:kk},Sk=ly(me,(t=>Math.abs(t)===1/0?1:0),"bool"),Ck={kernelName:me,backendName:"cpu",kernelFunc:Sk},Nk=ly(ge,(t=>Number.isNaN(t)?1:0),"bool"),Tk={kernelName:ge,backendName:"cpu",kernelFunc:Nk},$k=gy(((t,e)=>t<e?1:0)),Ek=Ly(xe,$k,null,"bool"),Rk={kernelName:xe,backendName:"cpu",kernelFunc:Ek},Ak=gy(((t,e)=>t<=e?1:0)),Fk=Ly(ye,Ak,null,"bool"),Mk={kernelName:ye,backendName:"cpu",kernelFunc:Fk};function Dk(t,e,n){const s=(e-t)/(n-1),r=P(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return r}const _k={kernelName:we,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=Dk(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}},Ok=Sy((t=>Math.log(t))),Lk=uy(ve,Ok),zk={kernelName:ve,backendName:"cpu",kernelFunc:Lk},Pk=ly(ke,(t=>Math.log1p(t))),Bk={kernelName:ke,backendName:"cpu",kernelFunc:Pk},Wk=gy(((t,e)=>t&&e)),Uk=Ly(Ie,Wk,null,"bool"),Vk={kernelName:Ie,backendName:"cpu",kernelFunc:Uk},Gk=ly(Se,(t=>t?0:1),"bool"),Hk={kernelName:Se,backendName:"cpu",kernelFunc:Gk},jk=gy(((t,e)=>t||e)),qk=Ly(Ce,jk,null,"bool"),Kk={kernelName:Ce,backendName:"cpu",kernelFunc:qk},Xk={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;iy(r,"LRN");const u=r.shape[3],h=u-1,c=n.data.get(r.dataId).values,d=g(r.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-i);const s=t-e+Math.min(e+i,h);let r=0;for(;n<=s;n++){const t=c[n];r+=t*t}return r}for(let t=0;t<d;t++){const e=f(t),n=c[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},Yk={kernelName:Te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:h}=s;iy(a,"LRNGrad");const c=g(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,b=new Float32Array(c),x=c;for(let t=0;t<x;t++){const e=t%d,n=t-e+Math.max(0,e-o),s=t-e+Math.min(d,e+o+1);let r=0;for(let t=n;t<s;t++)r+=Math.pow(f[t],2);r=u*r+l;for(let e=n;e<s;e++){let n=-2*u*h*f[e]*m[t]/r;t===e&&(n+=Math.pow(r,-h)),n*=p[t],b[e]+=n}}return n.makeTensorInfo(a.shape,r.dtype,b)}};function Zk(t,e,n,s){const r=C(s,g(n));for(let n=0;n<r.length;++n){const s=n*e;let i=t[s];for(let n=0;n<e;++n){const e=t[s+n];(Number.isNaN(e)||e>i)&&(i=e)}r[n]=i}return r}function Jk(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,h=I(i,l);let c=h;const d=co(c,u);let p=o.data.get(r.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=ew(p,l,r.dtype,d,t),c=fo(c.length,u),l=t}iy(r,"max"),ho("max",c,u);const[f,m]=lo(l,c),b=Zk(p,g(m),f,r.dtype),x=o.write(b,f,r.dtype);let y=f;return a&&(y=uo(f,h)),{dataId:x,shape:y,dtype:r.dtype}}const Qk={kernelName:$e,backendName:"cpu",kernelFunc:Jk},tI=gy(((t,e)=>Math.max(t,e))),eI=Ly(Ee,tI),nI={kernelName:Ee,backendName:"cpu",kernelFunc:eI},sI={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;iy(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;d(oa(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Zi(r.shape,i,a,1,o,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))h=dy({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=_(r.shape),s=yw(t,r.shape,r.dtype,e,u,"max");h=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return h}},rI={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;iy(r,"maxPool3d");const h=Ji(r.shape,i,a,1,o,l,u),c=vw(n.data.get(r.dataId).values,r.shape,r.dtype,_(r.shape),h,"max");return n.makeTensorInfo(c.shape,"float32",c.values)}},iI={kernelName:Me,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;iy([r,i],"maxPool3DGrad");const h=Ji(i.shape,a,o,1,l,u),c=function(t,e){const n=ni(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const x=b*s-d;let y=x;for(;y<0;)y+=a;const w=Math.min(e.inDepth,u+x);for(let s=0;s<e.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,h+u);for(let r=0;r<e.outWidth;++r){const p=r*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,c+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let e=y;e<w;e+=a){const n=e-x;for(let s=d;s<v;s+=o){const r=s-u;for(let i=k;i<I;i+=l){const a=i-p,o=t.get(m,e,s,i,g);o>=S&&(S=o,C=n*h*c+r*h+a)}}}n.set(C,m,b,s,r,g)}}}return n}(n.bufferSync(i),h),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=x-1-h.padInfo.front,k=w-1-h.padInfo.left,I=y-1-h.padInfo.top,S=ni(i.shape,"float32"),C=n.bufferSync(r);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const i=n-v,a=s-I,o=r-k;let l=0;for(let n=0;n<x;n+=m){const s=(i+n)/d;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let r=0;r<y;r+=g){const i=(a+r)/p;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const u=(o+a)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const d=x*y*w-1-c.get(t,s,i,u,e)===n*y*w+r*w+a?1:0;0!==d&&(l+=C.get(t,s,i,u,e)*d)}}}S.set(l,t,n,s,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},aI={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;iy([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:c}=s,d=Zi(o.shape,l,u,1,h,c),p=n.data.get(o.dataId).values,f=ni(d.outShape,o.dtype,ww(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ni(o.shape,"float32"),S=n.data.get(r.dataId).values,C=ni(r.shape,"float32",S);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,i=s-v;let a=0;for(let n=0;n<y;n+=b){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=x){const o=(i+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*w-1-f.get(t,s,o,e)===n*w+r?1:0;0!==l&&(a+=C.get(t,s,o,e)*l)}}I.set(a,t,n,s,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},oI={kernelName:De,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;iy(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,h=Zi(s.shape,r,i,[1,1],a),[c,d]=function(t,e,n,s,r){const i=yw(t,0,n,_(e),r,"max"),a=ww(t,e,n,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,o,h),p=l.write(c,h.outShape,s.dtype),f=l.write(d,h.outShape,s.dtype);return[{dataId:p,shape:h.outShape,dtype:s.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}},lI={kernelName:_e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=I(i,r.shape),l=g(lo(r.shape,o)[1]),u=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(h);const c=_y({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(c);const d=Gv({inputs:{a:c,b:h},backend:n});u.push(d);const p=wv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},uI={kernelName:Oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;iy(r,"min");const o=I(i,r.shape);let l=o;const u=co(l,r.shape.length);let h=r;null!=u&&(h=nw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=fo(l.length,r.shape.length)),ho("min",l,h.shape.length);const[c,d]=lo(h.shape,l),p=g(d),f=P(g(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const s=m[e+t];(Number.isNaN(s)||s<n)&&(n=s)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Vy({inputs:{x:b},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},hI=gy(((t,e)=>Math.min(t,e))),cI=Ly(Le,hI),dI={kernelName:Le,backendName:"cpu",kernelFunc:cI},pI={kernelName:ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,mode:a}=s;iy(r,"mirrorPad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+r.shape[e])),h="reflect"===a?0:1,c=n.data.get(r.dataId).values,d=r.shape.length,p=_(r.shape),f=g(o),m=o.length,b=_(o),x=C(r.dtype,f);for(let t=0;t<f;t++){let e=V(t,m,b);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-h:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+h);e=e.map(((t,e)=>t-l[e]));const n=U(e,d,p);x[t]=c[n]}return{dataId:n.write(x,o,r.dtype),shape:o,dtype:r.dtype}}},fI=gy(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),mI=Ly(Pe,fI),gI={kernelName:Pe,backendName:"cpu",kernelFunc:mI};function bI(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=r.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=I([o],r.shape),u=Jk({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=uo(u.shape,l),c=Vy({inputs:{x:u},backend:n,attrs:{shape:h}}),d=Kv({inputs:{a:r,b:c},backend:n}),p=Ov({inputs:{x:d},backend:n}),f=wv({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Vy({inputs:{x:f},backend:n,attrs:{shape:h}}),g=Gv({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const xI={kernelName:Rn,backendName:"cpu",kernelFunc:bI},yI={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s;iy(r,"multinomial");const l=o?r:bI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],c=n.data.get(l.dataId).values,d=[u,i],p=P(g(d),"int32");for(let t=0;t<u;++t){const e=t*h,n=new Float32Array(h-1);n[0]=c[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+c[e+t];const s=Co.alea(a.toString()),r=t*i;for(let t=0;t<i;++t){const e=s();p[r+t]=n.length;for(let s=0;s<n.length;s++)if(e<n[s]){p[r+t]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function wI(t,e,n){const s=$s(-1,n);return gv([],e,s,t,n)}const vI={kernelName:Ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;iy(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=wI(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}},kI=El,II={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;iy(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:c}=kI(u,h,a,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},SI=Rl,CI={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;iy(r,"NonMaxSuppressionPadded");const h=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=SI(h,c,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},NI=Al,TI={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;iy(r,"NonMaxSuppressionWithScore");const h=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=NI(h,c,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},$I=gy(((t,e)=>t!==e?1:0)),EI=Ly(Ve,$I,null,"bool"),RI={kernelName:Ve,backendName:"cpu",kernelFunc:EI},AI={kernelName:Ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s;iy(r,"oneHot");const u=g(r.shape),h=new Float32Array(u*a);h.fill(l);const c=n.data.get(r.dataId).values;for(let t=0;t<u;++t)c[t]>=0&&c[t]<a&&(h[t*a+c[t]]=o);return n.makeTensorInfo([...r.shape,a],i,h)}};function FI(t){const{inputs:e,backend:n}=t,{x:s}=e;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const t=Fy({inputs:{input:s},backend:n}),e=FI({inputs:{x:t},backend:n}),r=Uw({inputs:{input:s},backend:n}),i=FI({inputs:{x:r},backend:n}),a=Ey({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return tk({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const MI={kernelName:Jn,backendName:"cpu",kernelFunc:FI},DI={kernelName:qe,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=Fy({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),i=Uw({inputs:{input:r},backend:s}),a=FI({inputs:{x:i},backend:s}),o=Ey({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return tk({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function _I(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return zv({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{p(i,t.shape,"All tensors passed to stack must have matching shapes"),d(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Gw({inputs:e.map((t=>{const e=zv({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const OI={kernelName:Xe,backendName:"cpu",kernelFunc:_I},LI={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;iy(r,"pad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(r.dataId).values,h=g(r.shape),c=r.shape.length,d=_(r.shape),p=g(o),f=o.length,m=_(o),b=C(r.dtype,p);0!==a&&b.fill(a);for(let t=0;t<h;t++)b[U(V(t,c,d).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},zI=gy(((t,e)=>Math.pow(t,e))),PI=Ly(Ze,zI),BI={kernelName:Ze,backendName:"cpu",kernelFunc:PI};function WI(t,e,n,s){const[r,i]=lo(t,s),a=tr(e,"int32"),o=P(g(r),a),l=g(i);for(let t=0;t<o.length;++t){const e=t*l;let s=1;for(let t=0;t<l;++t)s*=n[e+t];o[t]=s}return{outVals:o,outShape:r,outDtype:a}}const UI={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;iy(r,"prod");const o=r.shape.length,l=I(i,r.shape),u=co(l,o);let h=l,c=r;const d=[];null!=u&&(c=nw({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(c),h=fo(h.length,o));const p=n.data.get(c.dataId).values,{outVals:f,outShape:m,outDtype:g}=WI(c.shape,c.dtype,p,h);let b=m;return a&&(b=uo(m,l)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,g,f)}};function VI(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function GI(t,e,n,s,r,i,a,o){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,s)=>{if(t<0||t>=n){const r=V(s,e.length,_(e)).join(",");throw new Error(`indices[${r}] = ${t} is not in [0, ${n})`)}}))}(i,a,e[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:h,numValues:c}=function(t,e,n,s){const r=[];let i=0;const a=e.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const s=t[n],r=n===t.length-1?e:t[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let t=1;t<s.length;++t)if(s[t-1]>s[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let t=0;t<e.length-1;++t){l*=e[t];const n=e[t+1];for(let e=1;e<l+1;++e)o[t].push(e*n)}for(let s=0;s<t.length;++s){let a=t[s],l=t[s]+1;for(let t=0;t<n.length;++t){const s=n[t],r=t+e.length-1;if(r>=0){const t=o[r],e=t[t.length-1]-s[a];for(let t=a;t<l;++t)o[r].push(s[t+1]+e)}a=s[a],l=s[l]}l!==a&&(r.push([a,l]),i+=l-a)}return{outSplits:o,valueSlices:r,numValues:i}}(i,a,t,l),d=function(t){const e=[];for(let n=0;n<t.length;++n){const s=N("int32",t[n].length);e.push(s),t[n].forEach(((t,e)=>s[e]=t))}return e}(u),p=function(t,e,n,s,r){const i=e.slice();i[0]=r;const a=N(n,g(i)),o=t.length;return function(t,e,n,s,r,i){const a=VI(e,2)[1],o=VI(i,2)[1];let l=0;for(const e of n)for(let n=e[0];n<e[1];++n){for(let e=0;e<s;++e)r[l*o+e]=t[n*a+e];++l}}(t,e,s,0===o?0:o/e[0],a,i),[a,i]}(n,s,r,h,c);return[d,p[0],p[1]]}const HI={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map((t=>n.data.get(t.dataId).values)),u=r.map((t=>t.shape)),h=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values,[d,p,f]=GI(l,u,h,i.shape,i.dtype,c,a.shape),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};var jI=yu;class qI{constructor(t,e,n,s,r,i,a,o,l,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=vu(u),this.raggedRank=ku(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===jI.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===jI.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case jI.VALUE_ROWIDS:return qI.getMaxWidthValueRowID(e);case jI.ROW_SPLITS:return qI.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${jI[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let s=0;s<e-1;++s){const e=t[s+1]-t[s];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,s=t[0],r=0;for(let i=1;i<e;++i){const e=t[i];e!==s&&(s=e,r=Math.max(i-n,r),n=i)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return XI(t,n)}calculateOutputSize(t){const e=this.valuesShape;Iu(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=wu(this.raggedRank,n,e);s[0]<0&&(s[0]=t);for(let t=1;t<=this.raggedRank;++t)s[t]<0&&(s[t]=this.getMaxWidth(t));return s}calculateFirstParentOutputIndex(t,e,n){const s=Math.min(t,n),r=[];let i=0;for(let t=0;t<s;++t,i+=e)r.push(i);for(let e=s;e<t;++e)r.push(-1);return d(r.length===t,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(t,e,n,s){const r=t.length,i=[];for(let a=0;a<r-1;++a){const r=t[a+1]-t[a];let o=Math.min(s,r),l=e[a];-1===l&&(o=0);for(let t=0;t<o;++t)i.push(l),l+=n;for(let t=0;t<r-o;++t)i.push(-1)}if(r>0&&i.length!==t[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,n,s){const r=t.length,i=[];if(0===r)return[];let a=0,o=t[0];if(o>=e.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${e.length}`);let l=e[o];i.push(l);for(let u=1;u<r;++u){const r=t[u];if(r===o)l>=0&&(++a,a<s?l+=n:l=-1);else{if(a=0,o=r,r>=e.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${e.length}`);l=e[r]}i.push(l)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,n,s){const r=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case jI.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,s);case jI.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,s);default:throw new Error(`Unsupported partition type: ${jI[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case jI.FIRST_DIM_SIZE:return t[0];case jI.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case jI.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${jI[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let t=n.length-2;t>=0;--t)n[t]=n[t+1]*e[t+1];const s=XI(e,!1),r=N(this.valuesDType,g(s));if(n[0]*e[0]>0){let i=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)i=this.calculateOutputIndex(t-1,i,n[t],e[t]);this.setOutput(this.raggedRank,i,r,s)}return[s,r]}setOutput(t,e,n,s){if(0===n.length)return;const r=this.values,i=n;let a=s.slice();a=a.slice(t+1);const o=g(a),l=e.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const t=this.defaultValueShape;Li((()=>{const e=ha(u,t),n=ba(e,a);u=n.dataSync()}))}let h=0,c=0,d=0;for(let t=0;t<=l;++t){let s=t<l?e[t]:-1;if(s!==d){if(c<d){const t=r.subarray(h*o);KI(i.subarray(c*o),t,(d-c)*o)}if(t>=l){const t=n.length;s=Math.floor(t/o)}if(s>d)if(1===this.defaultValue.length)i.subarray(d*o,s*o).fill(this.defaultValue[0]),d=s;else for(;s>d;)KI(i.slice(d*o),u,o),++d;s<0?(h=t+1,c=d):(h=t,c=d,d=c+1)}else++d}}}function KI(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function XI(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function YI(t,e,n,s,r,i,a,o,l,u){return new qI(t,e,n,s,r,i,a,o,l,u).compute()}const ZI={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values,d=o.map((t=>n.data.get(t.dataId).values)),p=o.map((t=>t.shape)),[f,m]=YI(u,r.shape,h,i.shape,i.dtype,c,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,m)}};function JI(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return P(0,s);const r=P(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return r}const QI={kernelName:nn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:i,step:a}=n,o=JI(s,r,a,i);return e.makeTensorInfo([o.length],i,o)}},tS=ly(rn,(t=>1/t)),eS={kernelName:rn,backendName:"cpu",kernelFunc:tS},nS={kernelName:hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;iy(r,"resizeBilinear");const l=_(r.shape),[u,h]=o,[c,d,p,f]=r.shape,m=n.data.get(r.dataId).values,b=new Float32Array(g([c,u,h,f])),x=[i&&u>1?d-1:d,i&&h>1?p-1:p],y=[i&&u>1?u-1:u,i&&h>1?h-1:h];let w=0;const v=x[0]/y[0],k=x[1]/y[1];for(let t=0;t<c;t++)for(let e=0;e<u;e++){let n;n=a?v*(e+.5)-.5:v*e;const s=Math.max(0,Math.floor(n)),r=n-s,i=Math.min(d-1,Math.ceil(n)),o=t*l[0]+s*l[1],u=t*l[0]+i*l[1];for(let t=0;t<h;t++){let e;e=a?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),s=e-n,i=Math.min(p-1,Math.ceil(e)),h=o+n*l[2],c=u+n*l[2],d=o+i*l[2],g=u+i*l[2];for(let t=0;t<f;t++){const e=m[h+t],n=m[c+t],i=e+(m[d+t]-e)*s,a=i+(n+(m[g+t]-n)*s-i)*r;b[w++]=a}}}return n.makeTensorInfo([c,u,h,f],"float32",b)}},sS={kernelName:cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;iy([i,r],"resizeBilinearGrad");const o=_(r.shape),[l,u,h,c]=r.shape,[,d,p]=i.shape,f=new Float32Array(l*u*h*c),m=[a&&d>1?u-1:u,a&&p>1?h-1:h],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(i.dataId).values;let w=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=e+s*o[1],a=e+r*o[1],l=n-s,d=1-l;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),s=Math.min(Math.ceil(e),h-1),r=e-n,u=1-r,p=i+n*o[2],m=i+s*o[2],g=a+n*o[2],b=a+s*o[2],v=d*u,k=d*r,I=l*u,S=l*r;for(let t=0;t<c;t++){const e=y[w++];f[p+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[b+t]+=e*S}}}}return n.makeTensorInfo([l,h,u,c],"float32",f)}},rS={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;iy(r,"resizeNearestNeighbor");const l=_(r.shape),[u,h]=o,[c,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(c*u*h*f),b=[i&&u>1?d-1:d,i&&h>1?p-1:p],x=[i&&u>1?u-1:u,i&&h>1?h-1:h],y=b[0]/x[0],w=b[1]/x[1];let v=0;for(let t=0;t<c;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let s=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(s=Math.max(0,s));const r=e+s*l[1];for(let t=0;t<h;t++){const e=a?w*(t+.5):w*t;let n=Math.min(p-1,i?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const s=r+n*l[2];for(let t=0;t<f;t++){const e=m[s+t];g[v++]=e}}}}return n.makeTensorInfo([c,u,h,f],r.dtype,g)}},iS={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;iy([i,r],"resizeNearestNeighborGrad");const o=_(r.shape),l=_(i.shape),[u,h,c,d]=r.shape,[,p,f]=i.shape,m=new Float32Array(u*h*c*d),g=n.data.get(i.dataId).values,b=[a&&p>1?h-1:h,a&&f>1?c-1:c],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],v=1/y,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<h;t++){const n=e+t*o[1],s=Math.floor(t*v),r=Math.floor(s-I/2);for(let s=0;s<c;s++){const i=n+s*o[2],u=Math.floor(s*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+r;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*y;if(t===Math.min(h-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<S;t++){const e=t+b;if(e<0||e>=f)continue;const r=d+e*l[2],i=e*w;s===Math.min(c-1,a?Math.round(i):Math.floor(i))&&(o+=g[r+n])}}m[i+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},aS={kernelName:pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s;iy(r,"reverse");const a=r.shape.length,o=I(i,r.shape);if(0===a)return dy({inputs:{x:r},backend:n});const l=new Ws(r.shape,r.dtype),u=n.bufferSync(r);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=r.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},oS={kernelName:ts,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=C(s.dtype,g(s.shape)),[u,h,c,d]=s.shape,[p,f]=Nu(a,h,c),m=Math.sin(r),b=Math.cos(r),x=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*c*h*d;for(let t=0;t<h;t++){const n=t*(c*d);for(let s=0;s<c;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,t,s,a],g=o[2],y=o[1];let w=(g-p)*b-(y-f)*m,v=(g-p)*m+(y-f)*b;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<c&&v>=0&&v<h&&(k=x[e+v*(c*d)+w*d+a]),l[e+n+r+a]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},lS=ly(fn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),uS={kernelName:fn,backendName:"cpu",kernelFunc:lS},hS=Sy((t=>1/Math.sqrt(t))),cS=uy(mn,hS),dS={kernelName:mn,backendName:"cpu",kernelFunc:cS};function pS(t,e,n,s,r,i,a,o,l,u){const h=[s/r,r],c=t.values,d=e.values;if(0===s)return ni(n,e.dtype);const p=ni(h,e.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=c[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[t*r+n]:p.values[l*r+n]=0===e.rank?d[0]:d[t*r+n]}return p}const fS={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:c}=_u(0,r,a),d=pS(n.bufferSync(r),n.bufferSync(i),a,c,u,l,o,h,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function mS(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<e?n=r+1:s=r;return s}function gS(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<=e?n=r+1:s=r;return s}const bS={kernelName:bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:i}=e,{side:a}=s,o=function(t,e,n,s,r,i){const a=N("int32",n*r);for(let o=0;o<n;++o){const n=t.slice(o*s,(o+1)*s),l=o*r;for(let t=0;t<r;++t)a[l+t]="left"===i?mS(n,e[t+l]):gS(n,e[t+l])}return a}(n.data.get(r.dataId).values,n.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}},xS={kernelName:xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e;iy([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,h=tr(r.dtype,i.dtype),c=P(g(r.shape),h);let d=0;const p=0===a||a>1||1===r.shape.length?1:g(r.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?c[d++]=l[t]:c[d++]=u[t];return n.makeTensorInfo(r.shape,h,c)}},yS=Ou,wS=Lu,vS=ly(yn,(t=>t>=0?wS*t:yS*(Math.exp(t)-1))),kS={kernelName:yn,backendName:"cpu",kernelFunc:vS},IS=ly(In,(t=>t<0?-1:t>0?1:0)),SS={kernelName:In,backendName:"cpu",kernelFunc:IS},CS=ly(vn,(t=>Math.sin(t))),NS={kernelName:vn,backendName:"cpu",kernelFunc:CS},TS=ly(kn,(t=>Math.sinh(t))),$S={kernelName:kn,backendName:"cpu",kernelFunc:TS},ES=Math.log(1.1920928955078125e-7)+2,RS=ly(Cn,(t=>{const e=t>-ES,n=t<ES,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),AS={kernelName:Cn,backendName:"cpu",kernelFunc:RS},FS={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;iy([r],"spaceToBatchND");const o=g(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=LI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Tu(u.shape,i,o,!1),c=$u(h.length,i.length,!1),d=Eu(u.shape,i,o,!1),p=Vy({inputs:{x:u},backend:n,attrs:{shape:h}}),f=nw({inputs:{x:p},backend:n,attrs:{perm:c}}),m=Vy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function MS(t,e,n,s,r,i,a){const o=e[0],l=i[0],u=new Array(l),h=new Array(o),c=e[1];if(0===l){if(0!==o)throw new Error(ah(o));return[N(n,0),[0,c],N(r,0),u,h]}let d=!0,p=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c];if(n<0)throw new Error(oh(e,n));if(n>=l)throw new Error(lh(e,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&d){const e=t,n=s;for(let t=0;t<o;++t)h[t]=t;return[e,[o,c],n,u,h]}{const e=f[l-1],i=N(n,e*c),d=N(r,e),p=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c],r=p[n],a=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<c;++n)i[a*c+n]=t[e*c+n];d[a]=s[e],h[e]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];i[e*c+0]=t;for(let t=1;t<c;++t)i[e*c+t]=0;d[e]=a}return[i,[e,c],d,u,h]}}const DS={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values[0],[c,d,p,f,m]=MS(o,s.shape,s.dtype,l,r.dtype,u,h);return[n.makeTensorInfo(d,s.dtype,c),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function _S(t,e,n,s,r){const i=g(s),a=e[0],o=r.length,l=[];let u=1,h=-1;for(let t=0;t<o;++t){const e=r[t];if(-1===e){if(-1!==h)throw new Error(uh(h,t));h=t,l.push(1)}else{if(e<0)throw new Error(hh(t,e));u*=e,l.push(e)}}if(-1!==h){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(i/u);if(u*t!==i)throw new Error(dh(s,l));l[h]=t}if(g(l)!==i)throw new Error(ph(s,l));const c=s.length,d=[];if(c>0){d[c-1]=1;for(let t=c-2;t>=0;--t)d[t]=d[t+1]*s[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=N(n,a*o);for(let e=0;e<a;++e){let n=0;for(let s=0;s<c;++s)n+=t[e*c+s]*d[s];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/p[t]),n%=p[t]}return[f,[a,o],l]}const OS={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:i}=e;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,h,c]=_S(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(h,s.dtype,u),n.makeTensorInfo([c.length],i.dtype,new Int32Array(c))]}};function LS(t,e,n,s,r,i=!1,a=0){const o=s.length,l=[e[0],t.length/e[0]],u=l[1],h=o>0?r[o-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const c=e.slice();c[0]=h;const d=N(n,c.reduce(((t,e)=>t*e),1));if(0===o)return h>0&&d.fill(a),[d,c];if(h<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let e=0;if(f<o){if(e=r[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=h)throw new Error(gh(g,h));g>m&&d.fill(a,m*u,g*u);for(let e=p;e<f;++e){const n=s[e];if(n<0||n>=l[0])throw new Error(bh(e,s[e],l[0]));for(let e=0;e<u;e++)d[g*u+e]+=t[n*u+e]}if(i)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<h&&d.fill(a,m*u,h*u),[d,c]}const zS={kernelName:Mn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,h]=LS(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(h,s.dtype,u)}},PS={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,h]=LS(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(h,s.dtype,u)}},BS={kernelName:_n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:c,outputSize:d}=_u(0,r,o),p=!1,f=n.bufferSync(r);let m;switch(i.dtype){case"bool":m=pS(f,n.bufferSync(i),o,d,h,u,l,c,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":m=pS(f,n.bufferSync(i),o,d,h,u,l,c,n.data.get(a.dataId).values[0],p);break;case"string":m=pS(f,n.bufferSync(i),o,d,h,u,l,c,Fs(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},WS={kernelName:En,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=I(a,r.shape)[0],l=ih(r,i,o),u=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const s=$w({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,s}))}},US=Sy((t=>Math.sqrt(t))),VS=ly(Nn,(t=>Math.sqrt(t))),GS={kernelName:Nn,backendName:"cpu",kernelFunc:VS},HS={kernelName:Ln,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;iy(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];i[t]=e*e}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},jS=gy(((t,e)=>{const n=t-e;return n*n})),qS=Ly(On,jS),KS={kernelName:On,backendName:"cpu",kernelFunc:qS},XS=ly(Qn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),YS={kernelName:Qn,backendName:"cpu",kernelFunc:XS};function ZS(t,e,n,s){const r=ni(t,e.dtype);for(let t=0;t<r.size;t++){const i=r.indexToLoc(t),a=new Array(i.length);for(let t=0;t<a.length;t++)a[t]=i[t]*n[t]+s[t];r.set(e.get(...a),...i)}return r}const JS={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:c,shrinkAxisMask:p}=s;iy(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ri(r.shape,i,a,o,l,u,h,c,p);let k;if(g)k=Vy({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||x){d(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const t=bi(y,w,v),e=$w({inputs:{x:r},backend:n,attrs:{begin:y,size:t}});k=Vy({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else{const t=ZS(f,n.bufferSync(r),v,y);k=n.makeTensorInfo(m,t.dtype,t.values)}return k}};class QS{constructor(t,e,n,s,r,i){this.separator=As(t),this.nGramWidths=e,this.leftPad=As(n),this.rightPad=As(s),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,s,r,i){for(let a=0;a<r;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(r-(a+1))),h=i-(l+u),c=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<h;++e)d+=t[c+e].length;d+=u*this.rightPad.length,d+=(l+u+h-1)*this.separator.length,n[s+a]=new Uint8Array(d);const p=n[s+a];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<h-1;++e)m(t[c+e]),m(this.separator);if(h>0){m(t[c+h-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,s=e.length;if(s>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let r=1;r<s;++r){let s=e[r]>=t;if(s=s&&e[r]<=n,!s)throw new Error(`Invalid split value ${e[r]}, must be in [${t}, ${n}]`);t=e[r]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const r=s-1,i=N("int32",s);if(0===n||0===s){const t=new Array(n);for(let t=0;t<=r;++t)i[t]=0;return[t,i]}i[0]=0;for(let t=1;t<=r;++t){const n=e[t]-e[t-1];let s=0;this.nGramWidths.forEach((t=>{s+=this.getNumNGrams(n,t)})),this.preserveShort&&n>0&&0===s&&(s=1),i[t]=i[t-1]+s}const a=new Array(i[r]);for(let n=0;n<r;++n){const s=e[n];let r=i[n];if(this.nGramWidths.forEach((i=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,i);this.createNGrams(t,s,a,r,l,i),r+=l})),this.preserveShort&&r===i[n]){const i=e[n+1]-e[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(t,s,a,r,l,o)}}return[a,i]}}function tC(t,e,n,s,r,i,a,o){return new QS(n,s,r,i,a,o).compute(t,e)}const eC={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:h,dataSplits:c}=e,d=n.data.get(h.dataId).values,p=n.data.get(c.dataId).values,[f,m]=tC(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}};function nC(t,e,n,s){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)s.push(t.subarray(e,e+1));return}if(1===e.length){const r=e[0];let i=t.indexOf(r);for(;-1!==i;){const e=t.subarray(0,i);n&&0===e.length||s.push(e),i=(t=t.subarray(i+1)).indexOf(r)}return void(n&&0===t.length||s.push(t))}let r=0;for(let i=0;i<t.length+1;i++)if(i===t.length||-1!==e.indexOf(t[i])){const e=t.subarray(r,i);n&&0===e.length||s.push(e),r=i+1}}function sC(t,e,n){const s=t.length,r=[];let i=0,a=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;nC(t[l],e,n,r);const u=r.length-s;o[l]=u,i+=u,a=Math.max(a,u)}const l=N("int32",2*i),u=new Array(i),h=[s,a];let c=0;for(let t=0;t<s;++t)for(let e=0;e<o[t];++e)l[2*c]=t,l[2*c+1]=e,u[c]=r[c],++c;return[l,u,h]}const rC={kernelName:Bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,h,c]=sC(o,l,r),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(c))]}};function iC(t,e){const n=N("int32",t.length);for(let s=0;s<t.length;++s)n[s]=Ts(t[s]).modulo(e).getLowBitsUnsigned();return n}const aC={kernelName:Wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=iC(n.data.get(i.dataId).values,r);return n.makeTensorInfo(i.shape,"int32",a)}},oC=ly(Vn,(t=>Math.tan(t))),lC={kernelName:Vn,backendName:"cpu",kernelFunc:oC},uC=ly(Gn,(t=>Math.tanh(t)));function hC(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=ni(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const i=t.locToIndex(r);s.values[e]=t.values[i]}return s}const cC=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function dC(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,i=e-n+1,a=Math.log(r),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(r-o)/r)*Math.sign(i-r/2);dC(t,e,Math.max(n,Math.floor(e-i*o/r+l)),Math.min(s,Math.floor(e+(r-i)*o/r+l)))}const r=t[e];let i=n,a=s;for(c(t,n,e),cC(t[s],r)>0&&c(t,n,s);i<a;){for(c(t,i,a),i++,a--;cC(t[i],r)<0;)i+=1;for(;cC(t[a],r)>0;)a-=1}0===cC(t[n],r)?c(t,n,a):(a+=1,c(t,a,s)),a<=e&&(n=a+1),e<=a&&(s=a-1)}}function pC(t,e,n,s,r){const i=e[e.length-1],[a,o]=[t.length/i,i],l=C(n,a*s),u=C("int32",a*s);for(let e=0;e<a;e++){const n=e*o,i=t.subarray(n,n+o);let a=new Array(i.length);i.forEach(((t,e)=>a[e]={value:t,index:e})),s<a.length&&(dC(a,s),a=a.slice(0,s)),r&&a.sort(cC);const h=e*s,c=l.subarray(h,h+s),d=u.subarray(h,h+s);for(let t=0;t<s;t++)c[t]=a[t].value,d[t]=a[t].index}const h=e.slice();return h[h.length-1]=s,[ni(h,n,l),ni(h,"int32",u)]}const fC={kernelName:qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[h,c,d,p]=r.shape,[f,m]=null!=u?u:[c,d],b=[h,f,m,p],x=_(r.shape),y=x[0],w=x[1],v=x[2],k=_(b),I=k[0],S=k[1],N=k[2],T=C(r.dtype,g(b));T.fill(l);const $=s.data.get(r.dataId).values,E=s.data.get(i.dataId).values;for(let t=0;t<h;++t){const e=1===i.shape[0]?E:E.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<p;++r){let i;const u=e[6]*s+e[7]*n+1;if(0===u)continue;const h=(e[0]*s+e[1]*n+e[2])/u,p=(e[3]*s+e[4]*n+e[5])/u,f=mC(h,d,o),m=mC(p,c,o);switch(a){case"nearest":i=bC($,c,d,y,w,v,t,m,f,r,l);break;case"bilinear":i=xC($,c,d,y,w,v,t,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}T[t*I+n*S+s*N+r]=i}return s.makeTensorInfo(b,r.dtype,T)}return{dataId:s.write(T,b,r.dtype),shape:r.shape,dtype:r.dtype}}};function mC(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return u(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return u(0,n,e-1)}(t,e);case"nearest":return function(t,e){return u(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function gC(t,e,n,s,r,i,a,o,l,u,h){return 0<=o&&o<e&&0<=l&&l<n?t[a*s+o*r+l*i+u]:h}function bC(t,e,n,s,r,i,a,o,l,u,h){return gC(t,e,n,s,r,i,a,Math.round(o),Math.round(l),u,h)}function xC(t,e,n,s,r,i,a,o,l,u,h){const c=Math.floor(o),d=Math.floor(l),p=c+1,f=d+1;return(p-o)*((f-l)*gC(t,e,n,s,r,i,a,c,d,u,h)+(l-d)*gC(t,e,n,s,r,i,a,c,f,u,h))+(o-c)*((f-l)*gC(t,e,n,s,r,i,a,p,d,u,h)+(l-d)*gC(t,e,n,s,r,i,a,p,f,u,h))}function yC(t,e,n,s){const r=I(e,n)[0],i=[1,n[0],1];for(let t=0;t<r;t++)i[0]*=n[t];i[1]=n[r];for(let t=r+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[r]),l=new Ws(i,s,t),u=[],h=1===i[0]&&1===i[2];for(let e=0;e<n[r];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)t.push(l.get(n,e,s));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const c=i.slice();c[1]=Object.keys(a).length;const d=new Ws(c,s);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,t,s),n,e,s)}));const p=n.slice();return p[r]=c[1],{outputValues:d.values,outputShape:p,indices:o}}const wC={kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s;iy(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-i.shape.length;let h=i;for(let t=0;t<u;++t){const e=zv({inputs:{input:h},backend:n,attrs:{dim:t+1}});h=e,l.push(e)}for(let t=0;t<a;++t){const e=$s(t,"int32"),s=n.makeTensorInfo([],"int32",e),i=Cv({inputs:{a:s,b:h},backend:n}),a=_y({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=xv({inputs:{a,b:r},backend:n}),c=wv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(c),l.push(s),l.push(i),l.push(a),l.push(u),l.push(c)}const c=_I({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},vC=[qy,Xy,Zy,Qy,Uy,tw,rw,iw,aw,ow,uw,cw,pw,gw,xw,kw,Iw,Sw,Cw,jy,Nw,Rw,Mw,Dw,Oy,Lw,Pw,Ry,Bw,Hw,qw,Kw,Xw,Yw,Zw,Jw,tv,nv,sv,rv,iv,av,ov,uv,hv,cv,dv,pv,fv,mv,kv,cy,Iv,Nv,Dv,Lv,Pv,Uv,Qv,ek,nk,ik,lk,uk,hk,dk,fk,bk,wk,py,vk,Vw,Ik,Ck,Tk,my,Rk,Mk,_k,zk,Bk,Vk,Hk,Kk,Xk,Yk,Qk,nI,sI,rI,iI,aI,oI,lI,uI,dI,pI,gI,yI,yv,vI,II,CI,TI,RI,AI,DI,OI,LI,BI,yy,UI,HI,ZI,QI,My,Hv,eS,vy,Iy,Gy,nS,sS,rS,iS,aS,oS,uS,dS,fS,bS,xS,kS,Ty,SS,NS,$S,Ew,xI,AS,FS,DS,OS,zS,PS,BS,WS,GS,HS,KS,YS,JS,eC,rC,aC,Xv,vv,lC,{kernelName:Gn,backendName:"cpu",kernelFunc:uC},{kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;iy(r,"tile");const a=hC(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s;iy(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=pC(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},fC,sw,{kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;iy(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=yC(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==i&&(l[u++]=r.shape[t]);const h=new Array(a).fill(0),c=r.shape.slice();c[i]=1;const d=new Array(o);for(let t=0;t<d.length;t++){h[i]=t;const e=$w({inputs:{x:r},backend:n,attrs:{begin:h,size:c}});d[t]=Vy({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},wC,MI];for(const t of vC)cs(t);const kC={},IC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function SC(t,e){if(!(t in kC)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete kC[t]}),!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(IC.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",IC)||n.getContext("experimental-webgl",IC):n.getContext("webgl2",IC)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;kC[t]=n}const n=kC[t];return null==n||n.isContextLost()?(delete kC[t],SC(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),kC[t])}var CC,NC,TC;function $C(t,e){return[e,t]}function EC(t){const e=g(t);return y(Math.ceil(e/4))}function RC(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function AC(t,e){const n=t;let s,r,i,a,o,l,u,h,c,d;return 2===q().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,h=1,c=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,r=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,h=4,c=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:c,textureTypeFloat:d}}function FC(t,e){const n=e();return q().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function MC(t){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function DC(t,e){return VC(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(CC||(CC={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(NC||(NC={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(TC||(TC={}));const _C=/ERROR: [0-9]+:([0-9]+):/g;function OC(t,e){const n=_C.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],r=t.split("\n"),i=r.length.toString().length+2,a=r.map(((t,e)=>w((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),h=a.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${w(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function LC(t,e){if(FC(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function zC(t,e,n,s,r,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(FC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),FC(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,i,a))),FC(t,(()=>t.enableVertexAttribArray(o))),!0)}function PC(t,e,n,s){FC(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),FC(t,(()=>t.activeTexture(t.TEXTURE0+n))),FC(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),FC(t,(()=>t.uniform1i(n,s)))}function BC(t,e,n){FC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),FC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function WC(t,e){FC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),FC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function UC(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function VC(t,e,n){const s=FC(t,(()=>e()));if(null==s)throw new Error(n);return s}function GC(t,e=2){return g(t.slice(0,t.length-e))}function HC(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function jC(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[GC(t),...HC(t)]),e}function qC(t){return t%2==0}function KC(t,e){if(b(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(qC(n)&&qC(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&qC(t[0])&&qC(e[0])}let XC,YC;function ZC(t,e){return null!=t.getExtension(e)}function JC(t){try{if(null!=SC(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function QC(t){const e=AC(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function tN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&d("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const eN=q();function nN(){let t,e,n,s,r,i,a,o,l,u;return 2===q().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function sN(t,e,n="index"){const s=_(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function rN(t,e,n="index"){const s=_(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * outShapeStrides[${r}]`:`index -= ${t[r]} * outShapeStrides[${r}]`};`)).join("")}function iN(t){const e=_(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}eN.registerFlag("HAS_WEBGL",(()=>eN.getNumber("WEBGL_VERSION")>0)),eN.registerFlag("WEBGL_VERSION",(()=>JC(2)?2:JC(1)?1:0)),eN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),eN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===eN.get("WEBGL_VERSION"))),eN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),eN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),eN.registerFlag("WEBGL_PACK",(()=>eN.getBool("HAS_WEBGL"))),eN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_CLIP",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_PACK_REDUCE",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_CONV_IM2COL",(()=>eN.getBool("WEBGL_PACK"))),eN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==XC){const e=SC(t);XC=e.getParameter(e.MAX_TEXTURE_SIZE)}return XC}(eN.getNumber("WEBGL_VERSION")))),eN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==YC){const e=SC(t);YC=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,YC)}(eN.getNumber("WEBGL_VERSION")))),eN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=eN.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=SC(t);return e=ZC(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:ZC(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),eN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>eN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!dr())),eN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=SC(t);if(1===t){if(!ZC(e,"OES_texture_float"))return!1}else if(!ZC(e,"EXT_color_buffer_float"))return!1;return QC(e)}(eN.getNumber("WEBGL_VERSION")))),eN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!eN.getBool("WEBGL_FORCE_F16_TEXTURES")&&eN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),eN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=SC(t);if(1!==t){if(ZC(e,"EXT_color_buffer_float"))return QC(e);const t="EXT_color_buffer_half_float";if(ZC(e,t)){const n=e.getExtension(t);return function(t,e){const n=AC(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),i}(e,n)}return!1}return!!ZC(e,"OES_texture_float")&&!!ZC(e,"WEBGL_color_buffer_float")&&QC(e)}(eN.getNumber("WEBGL_VERSION")))),eN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=eN.getNumber("WEBGL_VERSION"))&&null!=SC(t).fenceSync;var t})),eN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>eN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),eN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),eN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>dr()?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)})),eN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),eN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),eN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),eN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),eN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),eN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>eN.getBool("IS_TEST"))),eN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),eN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),eN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const aN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:oN}=s;function lN(t,e,n){const s=[];if(t.forEach((t=>{const e=g(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=xN(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:s.push(`uniform int ${t.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${t.name}Shape;`)}s.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{s.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const r=s.join("\n"),i=t.map((t=>function(t,e,n=!1,s){let r="";r+=n?hN(t,s):uN(t,s);const i=t.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(r+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=oN(t.shapeInfo.logicalShape,e.logicalShape),l=bN(a),u=a-i;let h;const c=["x","y","z","w","u","v"];h=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${c[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${c[e+u]}`)).join(", ");let p="return outputValue;";const f=1===g(t.shapeInfo.logicalShape),m=1===g(e.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&b(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=bN(l),h=oN(t.shapeInfo.logicalShape,e.logicalShape),c=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${p[t+c]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+c]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(t,e)),r}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=e.texShape,o=nN(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,h,c=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cN}\n    ${dN}\n    ${pN}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),i=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),i=r*Math.ceil(t[t.length-2]/2);let a=i,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return b(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${rN(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const s=sN(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${rN(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=sN(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=sN(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=sN(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(c+=fN),[c,l,h,r,u,i,n.userCode].join("\n")}function uN(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=t.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=mN(n);if(e)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${gN(t)}\n      }\n    `;const r=t.shapeInfo.texShape,i=r[0],a=r[1];if(1===a&&1===i)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=mN(n);return 1===a?e?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?e?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape;if(null!=i&&b(n,i)){if(e)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const t=i[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=S(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${uN(yN(t,l),e)}\n      float ${r}(int row, int col) {\n        return ${r}(${wN(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${gN(t)}\n      }\n    `;const u=i[0],h=i[1],c=mN(s);return 1===h?e?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?e?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:e?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${c};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=S(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${uN(yN(t,u),e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${wN(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${gN(t)}\n      }\n    `;const h=t.shapeInfo.texShape,c=h[0],d=h[1],p=t.shapeInfo.flatOffset;if(d===i&&null==p)return e?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${c}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${c}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=mN(s);return e?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${c}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=S(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${uN(yN(t,l),e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${wN(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${gN(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,d=c[0],p=c[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==h)return e?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===i&&null==h)return e?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=mN(s);return e?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=S(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${uN(yN(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${wN(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${gN(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,d=c[0],p=c[1];if(p===o&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${mN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=S(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${uN(yN(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${wN(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${gN(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===h&&null==c)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==c)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${mN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function hN(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${nN().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=nN();if(e)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=i[0],o=i[1],l=nN();if(null!=i&&b(n,i))return e?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(e)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const s=[1,2],i=["b","row","col"];return`\n        ${hN(yN(t,n.slice(1)),e)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${wN(i,s)});\n        }\n      `}const o=nN();if(e)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=a[0],u=a[1],h=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h*Math.ceil(n[1]/2)}, ${h}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=nN();if(e)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=t.shapeInfo.logicalShape,a=i.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],c=Math.ceil(i[a-1]/2);let d=c*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<a-1;t++)p=`int b${t}, `+p,d*=i[a-t-1],f=`b${t} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const cN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function mN(t){return`offset${t}`}function gN(t){const e=t.name,n=g(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function bN(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function xN(t,e,n){const{newShape:s,keptDims:r}=S(e),i=e.length,a=t&&3===i&&1===e[0],o=a?e.slice(1):s,l=!t&&i>1&&!b(e,n)&&s.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:r}}function yN(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function wN(t,e){return e.map((e=>t[e])).join(", ")}function vN(t,e,n){const s={},r={},i={},a=[];let o,l,u,h=null,c=null;c=t.getUniformLocation(n,"NAN",!1),1===q().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let a=0;a<e.variableNames.length;a++){const o=e.variableNames[a];s[o]=t.getUniformLocation(n,o,d),s[`offset${o}`]=t.getUniformLocation(n,`offset${o}`,d),e.enableShapeUniforms&&(r[`${o}Shape`]=t.getUniformLocation(n,`${o}Shape`,d),i[`${o}TexShape`]=t.getUniformLocation(n,`${o}TexShape`,d))}return e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",d),u=t.getUniformLocation(n,"outShapeStrides",d),l=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach(((e,s)=>{a[s]=t.getUniformLocation(n,e.name,d)})),{uniformLocations:s,customUniformLocations:a,infLoc:h,nanLoc:c,inShapesLocations:r,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function kN(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],i=r.shape;if(!b(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!b(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function IN(t){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class SN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=CC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=nN();this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rN(["r","c","d"],t):sN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class CN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=CC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=nN();this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rN(["r","c","d"],t):sN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class NN{constructor(t){this.variableNames=["A"],this.outTexUsage=NC.DOWNLOAD;const e=nN();this.outputShape=t,this.userCode=`\n      ${aN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class TN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=NC.DOWNLOAD;const e=nN();this.outputShape=t,this.userCode=`\n      ${aN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class $N{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nN();this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class EN{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nN();this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length);let s="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let r=0;r<=1;r++){const i=2*e+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iN(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function RN(t,e,n,s,r,i){!function(t,e){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return VC(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return FC(t,(()=>t.bindTexture(o,a))),FC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),FC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),FC(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),FC(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===q().getNumber("WEBGL_VERSION")?FC(t,(()=>t.texImage2D(o,0,s,e,n,0,r,i,null))):FC(t,(()=>t.texStorage2D(o,1,s,e,n))),FC(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:a,texShape:[n,e]}}function AN(t){return t.internalFormatFloat}function FN(t){return t.internalFormatHalfFloat}function MN(t){return t.downloadTextureFormat}function DN(t){return t.internalFormatPackedFloat}function _N(t){return t.internalFormatPackedHalfFloat}class ON{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=q().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){kC[t]=e}(e,t)):this.gl=SC(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===q().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=DC(this.gl,t),ZC(this.gl,e))this.textureHalfFloatExtension=DC(this.gl,e);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ZC(this.gl,s))this.colorBufferHalfFloatExtension=DC(this.gl,s);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ZC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ZC(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=VC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return FC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),FC(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=VC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return FC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),FC(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return VC(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=AC(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;FC(t,(()=>t.finish())),FC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),FC(t,(()=>t.deleteFramebuffer(this.framebuffer))),FC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),FC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),FC(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=$C(e,n);return RN(t,r,i,AN(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=$C(e,n);return RN(t,r,i,FN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=$C(e,n);return RN(t,r,i,MN(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){FC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===q().getNumber("WEBGL_VERSION")?FC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):FC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===q().getNumber("WEBGL_VERSION")?FC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):FC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),FC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,i){let a,o,l;FC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(r),2===q().getNumber("WEBGL_VERSION")?FC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,o,a))):FC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,a))),FC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=RC(e,n);return RN(t,r,i,_N(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=RC(e,n);return RN(t,r,i,DN(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(WC(this.gl,this.framebuffer),this.outputTexture=null),FC(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,i]=$C(e,n),a=new Uint8Array(e*n*4);return FC(t,(()=>t.readPixels(0,0,r,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,i){return function(t,e,n,s,r,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=RC(t,e);return n*s*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();FC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const i=16*e*n;return FC(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),FC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),FC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return FC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=nN();return function(t,e){const n=VC(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(FC(t,(()=>t.shaderSource(n,e))),FC(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return VC(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return FC(e,(()=>e.attachShader(n,this.vertexShader))),FC(e,(()=>e.attachShader(n,t))),function(t,e){if(FC(t,(()=>t.linkProgram(e))),!q().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&LC(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return FC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),zC(t,e,"clipSpacePos",n,3,20,0)&&zC(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&FC(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&LC(this.gl,this.program),FC(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return VC(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),FC(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),PC(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=RC(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&LC(this.gl,this.program),UC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),FC(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),FC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=DC(this.gl,2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await v((()=>this.disposed||this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in q().platform&&(n=q().platform.setTimeoutCustom.bind(q().platform)),v((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),BC(this.gl,t,this.framebuffer),this.debug&&UC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(BC(this.gl,this.outputTexture,this.framebuffer),this.debug&&UC(this.gl)):WC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;BC(s,t,this.framebuffer),this.debug&&UC(s),this.outputTexture=t,FC(s,(()=>s.viewport(0,0,e,n))),FC(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),FC(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:LN,bincountImpl:zN,bincountReduceImpl:PN,castImpl:BN,ceilImpl:WN,concatImpl:UN,equalImpl:VN,expImpl:GN,expm1Impl:HN,floorImpl:jN,gatherNdImpl:qN,gatherV2Impl:KN,greaterImpl:XN,greaterEqualImpl:YN,lessImpl:ZN,lessEqualImpl:JN,linSpaceImpl:QN,logImpl:tT,maxImpl:eT,maximumImpl:nT,minimumImpl:sT,multiplyImpl:rT,negImpl:iT,notEqualImpl:aT,prodImpl:oT,raggedGatherImpl:lT,raggedTensorToTensorImpl:uT,rangeImpl:hT,rsqrtImpl:cT,scatterImpl:dT,sigmoidImpl:pT,simpleAbsImpl:fT,sliceImpl:mT,sparseFillEmptyRowsImpl:gT,sparseReshapeImpl:bT,sparseSegmentReductionImpl:xT,sqrtImpl:yT,stridedSliceImpl:wT,stringNGramsImpl:vT,stringSplitImpl:kT,stringToHashBucketFastImpl:IT,subImpl:ST,tileImpl:CT,topKImpl:NT,transposeImpl:TT,uniqueImpl:$T}=r;function ET(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function RT(t,e){return 1===e?[t]:ET(t,e)}class AT{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=IN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=RT("rc",this.rank),e=bN(this.rank),n=this.getOutOfBoundsCondition(t),s=this.getSetup(t),r=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let e=2;e<this.rank;e++)r=`${t[t.length-1-e]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class FT{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=e,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(t,e,n="index"){const s=function(t,e){const n=t.length,s=t.map((t=>`${e}[${t}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let t=n-3;t>=0;--t)r[t]=`(${r[t+1]} * ${s[t+1]})`;return r}(t.map(((t,e)=>e)),e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${s[r]}`:`index -= ${t[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):sN(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iN(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class MT{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=_T(e,n),r=OT(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=DT(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let a;return s===TC.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===TC.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===TC.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===TC.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===TC.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=_T(n,s),i=OT(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=DT(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function DT(t,e,n,s,r){const i=function(t,e){switch(t){case TC.PACKED_2X2_FLOAT32:return DN(e);case TC.PACKED_2X2_FLOAT16:return _N(e);case TC.UNPACKED_FLOAT32:return AN(e);case TC.UNPACKED_FLOAT16:return FN(e);case TC.PACKED_4X1_UNSIGNED_BYTE:return MN(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let a;if(r){const[e,n]=RC(t[0],t[1]);a=e*n}else{const[e,n]=$C(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function _T(t,e){if(t===NC.UPLOAD)return TC.PACKED_2X2_FLOAT32;if(t===NC.RENDER||null==t)return function(t){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?TC.PACKED_2X2_FLOAT32:TC.UNPACKED_FLOAT32:t?TC.PACKED_2X2_FLOAT16:TC.UNPACKED_FLOAT16}(e);if(t===NC.DOWNLOAD||t===NC.PIXELS)return TC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function OT(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class LT{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const zT="return abs(x);",PT="return x;";class BT{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class WT{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length);const e=t.length,n=RT("rc",e),s=bN(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const UT=Ih,VT={},GT=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class HT extends a{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof ON)e=t;else{const n=SC(q().getNumber("WEBGL_VERSION"),t);e=new ON(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=SC(q().getNumber("WEBGL_VERSION"));e=new ON(t),this.binaryCache=((n=q().getNumber("WEBGL_VERSION"))in VT||(VT[n]={}),VT[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new MT(this.gpgpu),this.numMBBeforeWarning=null==q().global.screen?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,_i())}nextDataId(){return HT.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:NC.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s,r){if(q().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:NC.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:r,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new BT(a,PT):new LT(a,PT);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,h;return l&&(u=Rs()),h="complex64"===s?Gu(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Rs()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=r){let e;e=o?new BT(s,PT):new LT(s,PT);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==i&&q().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture.texture,...EC(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Gu(t[0],t[1])}else if(null==h)u=this.getValuesFromTexture(t);else{const t=g(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const t=this.gpgpu.gl;FC(t,(()=>t.deleteBuffer(h)))}const c=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(c))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&_i().removeDataId(t,this),this.pendingDeletes--),c}readToGPU(t,e={}){const n=this.texData.get(t),{values:s,shape:r,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new BT(r,PT):new LT(r,PT);const s=this.runWebGLProgram(n,[{dataId:t,shape:r,dtype:a}],a),i=this.readToGPU(s,e);return this.disposeIntermediateTensorInfo(s),i}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=_i().makeTensorFromTensorInfo(u),c=this.texData.get(u.dataId);return Object.assign({tensorRef:h},c.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Fs(t)));return ni(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ni(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!MC(n)){if(q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=g(e);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...EC(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=q().getBool("WEBGL_PACK")&&!0===s,a=i?jC(e):e,o=i?new TN(a):new NN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=m(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=m(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rs(),endMs:null}}endTimer(t){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Rs(),t)}async getQueryTime(t){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=GT){return q().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&g(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){rs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return UT(t.shape,e)}packedUnaryOp(t,e,n){const s=new BT(t.shape,e),r=this.compileAndRun(s,[t],n);return _i().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=fT(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,zT,t.dtype);const e=new LT(t.shape,zT),n=this.compileAndRun(e,[t]);return _i().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&R(n[0])){const r=n.map((t=>As(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){return _i().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new WT(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new AT(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[GC(t.shape),...HC(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[GC(e),...HC(e)],i=new FT(r,n),a=[n],o=this.runWebGLProgram(i,[s],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:s,shape:r,dtype:i}=n;null!=e&&d(g(r)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=jC(r);let o;o=s?new CN(a):new SN(a);const l=[null!=e?e:EC(a)];return{dtype:i,shape:r,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:t}],i,l,!0,e).dataId}}runWebGLProgram(t,e,n,s,r=!1,i){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===CC.DENSE){const e=null!=i?i:EC(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===g(a.shape))return o.values=C(a.dtype,0),a;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&g(e.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!KC(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),l.push(e),n=this.texData.get(e.dataId),t.shape=s}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:o,isUniform:!1},c=function(t,e,n){let s="";e.concat(n).forEach((e=>{const r=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const i=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=xN(t.packedInputs,e.shape,i);let u="",h="",c="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=_(o);c=`${t[0]===i[1]}_${t[t.length-1]===i[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&b(e.shape,i),f=1===g(e.shape),m=di(e.shape,n.shape),x=!t.packedInputs&&d===n.shape.length&&b(i,n.texData.texShape),y=t.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${d}_${x}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${h}_${c}_${y}_${r}`}else{const t=e.isUniform?"uniform":e.texData.texShape;s+=`${e.shape}_${t}_${r}`}}));const r=t.userCode;let i=t.constructor.name;return i+="_"+s+"_"+r+`${q().getNumber("WEBGL_VERSION")}`,i}(t,u,h),d=this.getAndSaveBinary(c,(()=>function(t,e,n,s){const r=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),i=r.map((t=>t.shapeInfo)),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=lN(r,a,e),l=function(t,e){const n=VC(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(FC(t,(()=>t.shaderSource(n,e))),FC(t,(()=>t.compileShader(n))),q().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw OC(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);return q().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},vN(t,e,u))}(this.gpgpu,t,u,h))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||function(t,e,n,s,r){e.program.enableShapeUniforms||(kN(e.inShapeInfos,n),kN([e.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):t.setOutputMatrixTexture(i.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===q().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],i=e.uniformLocations[r],a=e.uniformLocations[`offset${r}`],o=e.inShapesLocations[`${r}Shape`],l=e.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=xN(e.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:t.gl.uniform1iv(o,new Int32Array(s));break;case 2:t.gl.uniform2iv(o,new Int32Array(s));break;case 3:t.gl.uniform3iv(o,new Int32Array(s));break;case 4:t.gl.uniform4iv(o,new Int32Array(s))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(g(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,i,s)}));const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(s.shape))}if(e.outShapeStridesLocation){const n=_(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r&&e.program.customUniforms.forEach(((n,s)=>{const i=e.customUniformLocations[s],a=r[s];if("float"===n.type)t.gl.uniform1fv(i,a);else if("vec2"===n.type)t.gl.uniform2fv(i,a);else if("vec3"===n.type)t.gl.uniform3fv(i,a);else if("vec4"===n.type)t.gl.uniform4fv(i,a);else if("int"===n.type)t.gl.uniform1iv(i,a);else if("ivec2"===n.type)t.gl.uniform2iv(i,a);else if("ivec3"===n.type)t.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(i,a)}})),t.executeProgram()}(this.gpgpu,d,u,h,s),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=q().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Rs();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,s,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,s,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Li((()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=q().getBool("DEBUG");q().set("DEBUG",!1);const e=this.abs(Vi(1e-8)).dataSync()[0];if(q().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=Rs());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n*=2,s*=2,1===(t=t.map(((e,n)=>n>=t.length-2?h(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=S(t);t=e.newShape}let r=g(t),i=null;t.length<=1&&r<=n?i=[1,r]:2===t.length&&t[0]<=n&&t[1]<=n?i=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?i=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?i=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?i=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(i=[t[0],t[1]*t[2]*t[3]]);const a=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(null==i||a)if(e){const e=GC(t);let n=2,s=2;t.length&&([n,s]=HC(t)),r=e*(n/2)*(s/2),i=y(r).map((t=>2*t))}else i=y(r);return i}(n,o),e.texShape=c),null!=r){const t=jC(n);let i,a=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([a,h]=RC(c[0],c[1])),i=o?new EN(t,d):new $N(t,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,s),m=this.texData.get(f.dataId);m.usage=d?NC.PIXELS:NC.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,r);const g=[[h,a]],b=!0,x=this.runWebGLProgram(i,[f],s,g,b),y=this.texData.get(x.dataId);e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(e.texture=y.texture,e.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Rs()-u)}else{const t=this.acquireTexture(c,a,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*E(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(t){throw t}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await gu(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw OC(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=vN(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=s,t.nanLoc=r,t.inShapesLocations=i,t.inTexShapesLocations=a,t.outShapeLocation=o,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}}HT.nextDataId=0,pr()&&Bi("webgl",(()=>new HT),2);class jT{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=fi(e,n),this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class qT{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=fi(e,n);const r=this.outputShape.length;this.enableShapeUniforms=IN(r);let i="";if(s)if(0===r||1===g(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${bN(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=RT("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function KT(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const XT={kernelName:ce,backendName:"webgl",kernelFunc:KT};function YT(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=KT({inputs:{x:s},backend:n}),l=KT({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const ZT={kernelName:It,backendName:"webgl",kernelFunc:YT},JT="return (a < 0.) ? b * a : a;",QT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",t$={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s,a=n.makeTensorInfo([],"float32",$s(i,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qT(QT,r.shape,a.shape):new jT(JT,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},e$="return (a < 0.) ? b * a : a;",n$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",s$={kernelName:Je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qT(n$,s.shape,r.shape):new jT(e$,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}};function r$({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new BT(a.shape,e):new LT(a.shape,t),o.runWebGLProgram(u,[a],l)}}function i$({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,h=o;if(s&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[s,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:u.shape},a=new jT(t,l.shape,u.shape);return h.runWebGLProgram(a,[r,i],tr(n.dtype,s.dtype))})),i=YT({inputs:{real:s,imag:r},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(r),i}const c=i||tr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=r){const t=h.texData.get(l.dataId).values,e=h.texData.get(u.dataId).values,n="string"===l.dtype?vh(t):t,s="string"===l.dtype?vh(e):e,[i,a]=r(l.shape,u.shape,n,s,c),o=h.makeTensorInfo(a,c);return h.texData.get(o.dataId).values=i,o}let d;return d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new qT(e,l.shape,u.shape,n):new jT(t,l.shape,u.shape),h.runWebGLProgram(d,[l,u],c)}}function a$(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?n$:e$;if("leakyrelu"===t)return e?QT:JT;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class o${constructor(t,e,n,s=!1,r=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=IN(this.outputShape.length);const u=s?t[1]:t[2],h=Math.ceil(u/2),c=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class l${constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=fi(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const u$="return a * b;";function h$(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,i=tr(s.dtype,r.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),i=new l$("return areal * breal - aimag * bimag;",s.shape,r.shape),a=new l$("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),h=YT({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),h}if(n.shouldExecuteOnCPU([s,r])){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),[a,o]=rT(s.shape,r.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qT(u$,s.shape,r.shape):new jT(u$,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const c$={kernelName:We,backendName:"webgl",kernelFunc:h$};function d$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=n,o=g(r.shape),l=k(i,o),u=g(l);d(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const h=a.texData.get(r.dataId);return!h.isPacked||KC(r.shape,l)||null!==h.texture&&KC(h.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const s=[GC(t.shape),...HC(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[GC(e),...HC(e)],a=new FT(i,s),o=[s],l=n.runWebGLProgram(a,[r],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(r,l,a)}const p$={kernelName:on,backendName:"webgl",kernelFunc:d$};class f${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${x(t)?t.toPrecision(2):t}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class m${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),h=n%4;let c=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",c="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",c="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${c}\n        }\n        setOutput(${l});\n      }\n    `}}function g$(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=Cu(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let i=t;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let h,c;h="mean"===n?0===a?new f$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new f$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new m$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),c=i,i=s.runWebGLProgram(h,[i],e),c.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(c)}return i}class b${constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=bN(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class x${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=bN(this.rank),r=ET("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=r[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function y$(t,e,n){const s=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new x$(t.shape,e):new b$(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}function w$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return function(t,e,n,s){const r=e,i=t.shape.length,a=I(r,t.shape);let o=a;const l=co(o,i),u=null!=l;let h=t;u&&(h=y$(t,l,s),o=fo(o.length,i)),ho("sum",o,i);const[c,d]=lo(h.shape,o);let p=c;n&&(p=uo(c,a));const f=g(d),m=d$({inputs:{x:h},attrs:{shape:[g(t.shape)/f,f]},backend:s}),b=g$(m,er(t.dtype),"sum",s),x=d$({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(h),x}(r,i,a,n)}const v$={kernelName:Tn,backendName:"webgl",kernelFunc:w$};function k$(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=r.shape[i[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId).values,e=TT(t,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype),a.texData.get(u.dataId).values=e}else u=y$(r,i,a);return u}const I$={kernelName:Kn,backendName:"webgl",kernelFunc:k$};function S$({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,h=e.shape.length,c=n?t.shape[u-2]:t.shape[u-1],p=s?e.shape[h-1]:e.shape[h-2],f=n?t.shape[u-1]:t.shape[u-2],m=s?e.shape[h-2]:e.shape[h-1],b=t.shape.slice(0,-2),x=e.shape.slice(0,-2),y=g(b),w=g(x),v=fi(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);d(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[y,c,f]:[y,f,c],I=s?[w,m,p]:[w,p,m],S=d$({inputs:{x:t},backend:r,attrs:{shape:k}}),C=d$({inputs:{x:e},backend:r,attrs:{shape:I}}),N=[S,C],T=Math.max(y,w),$=n?S.shape[1]:S.shape[2],E=null!=i,R=null!=a,A="leakyrelu"===l,F=null!=l?a$(l,!0):null;let M;if((1===f||1===m)&&$>1e3&&!1===(E||R||A||null!=F)){let t=S,e=C;n&&(t=k$({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),N.push(t)),s&&(e=k$({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(e));const i=1===m;let a=t;1!==m&&(a=d$({inputs:{x:t},backend:r,attrs:{shape:[T,$,1]}}),N.push(a));const o=1===m?2:1;let l=e;i&&(l=d$({inputs:{x:e},backend:r,attrs:{shape:[T,1,$]}}),N.push(l));const u=h$({inputs:{a,b:l},backend:r});M=w$({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=tr(t.dtype,e.dtype),u=new o$(k,I,[T,f,m],n,s,E,F,R,A),h=[S,C];if(null!=i&&h.push(i),R&&h.push(a),A){const t=r.makeTensorInfo([],"float32",$s(o,"float32"));h.push(t),N.push(t)}M=r.runWebGLProgram(u,h,l)}const D=d$({inputs:{x:M},backend:r,attrs:{shape:v}});N.push(M);for(const t of N)r.disposeIntermediateTensorInfo(t);return D}const C$={kernelName:es,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:c}=s;return S$({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:c,activation:h})}},N$="return abs(x);",T$={kernelName:J,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const t=n.texData.get(s.dataId),e=fT(t.values);return n.makeTensorInfo(s.shape,s.dtype,e)}let r;return r=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new BT(s.shape,N$):new LT(s.shape,N$),n.runWebGLProgram(r,[s],s.dtype)}},$$=r$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),E$={kernelName:Q,backendName:"webgl",kernelFunc:$$},R$=r$({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),A$={kernelName:tt,backendName:"webgl",kernelFunc:R$},F$="return a + b;",M$=i$({opSnippet:F$,packedOpSnippet:F$,supportsComplex:!0,cpuKernelImpl:LN}),D$={kernelName:et,backendName:"webgl",kernelFunc:M$};class _${constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class O${constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const L$={kernelName:nt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,r=n;if(1===r.length)return KT({inputs:{x:r[0]},backend:s});if(r.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:s}),i=t({inputs:r.slice(e),backend:s});return t({inputs:[n,i],backend:s})}const i=r.map((t=>t.dtype)).reduce(((t,e)=>tr(t,e))),a=r.map((t=>t.shape)),o=q().getBool("WEBGL_PACK")?new O$(r[0].shape,a):new _$(r[0].shape,a);return s.runWebGLProgram(o,r,i)}},z$={kernelName:st,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=I(i,r.shape);let u=l;const h=co(u,o);let c=r;null!=h&&(c=k$({inputs:{x:r},backend:n,attrs:{perm:h}}),u=fo(u.length,o)),ho("all",u,o);const[d,p]=lo(c.shape,u),f=d$({inputs:{x:c},backend:n,attrs:{shape:[-1,g(p)]}}),m=g$(f,f.dtype,"all",n);let b;return b=d$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),b}},P$={kernelName:rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=I(i,r.shape);let u=l;const h=co(u,o);let c=r;null!=h&&(c=k$({inputs:{x:r},backend:n,attrs:{perm:h}}),u=fo(u.length,o)),ho("any",u,o);const[d,p]=lo(c.shape,u),f=d$({inputs:{x:c},backend:n,attrs:{shape:[-1,g(p)]}}),m=g$(f,f.dtype,"any",n);let b;return b=d$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),b}};class B${constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class W${constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=bN(o),u=RT("coords",o);let h,c;if(1===i){c=o+1;const t=bN(c);h=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else c=o,h=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,c),f="."+p[c-1],m=p.map((t=>"int "+t)),g=RT("sourceLocR",c-1).concat("inIdx.r"),b=RT("sourceLocG",c-1).concat("inIdx.g"),x=RT("sourceLocB",c-1).concat("inIdx.b"),y=RT("sourceLocA",c-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function U$(t,e,n,s=null){let r=e.shape[0],i=e.shape[1];null!=s&&(r=s.shape[0],i=s.shape[1]);const a=Cu(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new B$(o,n,null==s),u=[e];null!=s&&u.push(s);const h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;const c=U$(t,e,n,h);return t.disposeIntermediateTensorInfo(h),c}function V$(t,e,n,s=null){const r=null!=s?s.shape:e.shape,i=Cu(r[r.length-1]),a=new W$(r,i,n,null==s),o=null==s?[e]:[e,s],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const s=V$(t,e,n,l);return t.disposeIntermediateTensorInfo(l),s}return l}function G$(t,e,n,s){const r=[n];if(ho("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],i=t.texData.get(e.dataId);let a=e;null!==i&&i.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=lo(a.shape,r),u=g(l),h=d$({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(h);const c=U$(t,h,s);n.push(c);const d=d$({inputs:{x:c},backend:t,attrs:{shape:o}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return V$(t,e,s)}const H$={kernelName:it,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=I(i,r.shape);const o=co(a,r.shape.length);let l=r;const u=[];null!=o&&(l=k$({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),ho("argMax",[a[0]],l.shape.length);const h=G$(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},j$={kernelName:at,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=I(i,r.shape);const o=co(a,r.shape.length);let l=r;const u=[];null!=o&&(l=k$({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),ho("argMin",[a[0]],l.shape.length);const h=G$(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},q$=r$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),K$={kernelName:ot,backendName:"webgl",kernelFunc:q$},X$=r$({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Y$={kernelName:lt,backendName:"webgl",kernelFunc:X$},Z$=r$({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),J$={kernelName:ut,backendName:"webgl",kernelFunc:Z$},Q$=i$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),tE={kernelName:ct,backendName:"webgl",kernelFunc:Q$},eE=r$({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),nE={kernelName:ht,backendName:"webgl",kernelFunc:eE};class sE{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${c} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const y=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class rE{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${c}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${c};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${c}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const iE={kernelName:dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;tN(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;d(oa(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Zi(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return KT({inputs:{x:r},backend:n});const h=new sE(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}},aE={kernelName:ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,h=Ji(r.shape,i,a,[1,1,1],o,l,u),c=new rE(h,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};class oE{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,h=l-1-t.padInfo.left,c=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lE{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=h-1-t.padInfo.front,f=c-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uE={kernelName:mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=s,c=Ji(a.shape,o,l,[1,1,1],u,h),d=new lE(c);return n.runWebGLProgram(d,[r],a.dtype)}},hE={kernelName:pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;tN([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,h=Zi(a.shape,o,l,1,u),c=new oE(h);return n.runWebGLProgram(c,[r],a.dtype)}},cE={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return S$({a:r,b:i,transposeA:a,transposeB:o,backend:n})}};class dE{constructor(t,e,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],fi(t,e),fi(t,n);let a="0.0";null!=s&&(fi(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(fi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class pE{constructor(t,e,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],fi(t,e),fi(t,n);let a="vec4(0.0)";null!=s&&(fi(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(fi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const fE={kernelName:ae,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=t;d(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,i];let h=null;null!=a&&(h=a.shape,u.push(a));let c=null;null!=o&&(c=o.shape,u.push(o));const p=q().getBool("WEBGL_PACK_NORMALIZATION")?new pE(s.shape,r.shape,i.shape,h,c,l):new dE(s.shape,r.shape,i.shape,h,c,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class mE{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=bN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return gE.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${gE[e]} = start[${e}] + coords.${gE[e]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const gE=["x","y","z","w","u","v"];class bE{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=bN(this.rank),n=RT("coords",this.rank),s=RT("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function xE(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s,[o,l]=Ei(r,i,a);if(mi(r,o,l),0===g(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=mT(t.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),h=Ti(r.shape,o,l);if(u||!h){const t=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bE(l):new mE(l),e=[o];return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,s){const r=s.texData.get(t.dataId),i=s.makeTensorInfo(n,t.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=$i(e,_(t.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}(r,o,l,n)}const yE={kernelName:wn,backendName:"webgl",kernelFunc:xE},wE={kernelName:bt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;d(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=Tu(r.shape,i,o),u=$u(l.length,i.length),h=Eu(r.shape,i,o),c=Ru(a,i.length),p=Au(h,a,i.length),f=[],m=d$({inputs:{x:r},backend:n,attrs:{shape:l}}),g=k$({inputs:{x:m},backend:n,attrs:{perm:u}}),b=d$({inputs:{x:g},backend:n,attrs:{shape:h}}),x=xE({inputs:{x:b},backend:n,attrs:{begin:c,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},vE={kernelName:xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=zN(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},kE={kernelName:yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,i=n.readSync(s.dataId),a=n.readSync(r.dataId),o=fi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},IE=i$({opSnippet:"return float(a != b);",cpuKernelImpl:aT,dtype:"bool"}),SE={kernelName:Ve,backendName:"webgl",kernelFunc:IE};function CE(t){const{inputs:e,backend:n}=t,{input:s}=e;return KT({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const NE={kernelName:sn,backendName:"webgl",kernelFunc:CE},TE={kernelName:wt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:r}=e,{x:i}=n,{dtype:a}=r;if("complex64"===a){if("complex64"===i.dtype)return KT({inputs:{x:i},backend:s});const e=wo(i.shape),n=t({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=YT({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const e=CE({inputs:{input:i},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:a}});return s.disposeIntermediateTensorInfo(e),n}if(!T(i.dtype,a)){const t=KT({inputs:{x:i},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:a}}if(s.shouldExecuteOnCPU([i])){const t=s.texData.get(i.dataId).values,[e,n,r]=BN(t,i.shape,i.dtype,a);return s.makeTensorInfo(e,n,r)}if("int32"===a)return function(t,e){const n=new LT(t.shape,"return float(int(x));"),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===a){const t=s.makeTensorInfo([],"bool",C("bool",1)),e=IE({inputs:{a:i,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},$E="return ceil(x);",EE=r$({opSnippet:$E,packedOpSnippet:$E,cpuKernelImpl:WN}),RE={kernelName:vt,backendName:"webgl",kernelFunc:EE};class AE{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class FE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const ME={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;o=q().getBool("WEBGL_PACK_CLIP")?new FE(r.shape):new AE(r.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class DE{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function _E(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const OE={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),i=new DE(s.shape),a=[_E(s,r.complexTensorInfos.real),_E(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class LE{constructor(t){this.outputShape=[],this.outputShape=xu(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class zE{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=xu(t,e);const n=this.outputShape,s=n.length,r=bN(s),i=RT("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),h=a.join();let c=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];c+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${PE(a,l,e)}),\n            vec2(${PE(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];c+=`\n        return getChannel(\n          getT${d}(${PE(a,l,p)}),\n          vec2(${PE(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${c}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function PE(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}function BE(t){const{inputs:e,backend:n}=t,{input:s}=e;return KT({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const WE={kernelName:pe,backendName:"webgl",kernelFunc:BE};function UE(t,e,n){const s=t[0].dtype;if("complex64"===s){const s=t.map((t=>CE({inputs:{input:t},backend:n}))),r=t.map((t=>BE({inputs:{input:t},backend:n}))),i=UE(s,e,n),a=UE(r,e,n),o=YT({inputs:{real:i,imag:a},backend:n});return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let r=n.shouldExecuteOnCPU(t);if("string"===s&&(r=!0),r){const r=t.map((t=>{const s=g(t.shape.slice(e));return d$({inputs:{x:t},backend:n,attrs:{shape:[-1,s]}})})),i=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),a=xu(r.map((t=>t.shape)),1),o=1===r[0].shape[0],l=UN(i,a,s,o),u=xu(t.map((t=>t.shape)),e),h=n.makeTensorInfo(u,s,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const i=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>i){const s=[];for(let r=0;r<t.length;r+=i){const a=t.slice(r,r+i);s.push(UE(a,e,n))}const r=UE(s,e,n);for(const t of s)n.disposeIntermediateTensorInfo(t);return r}if(q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new zE(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const{tensors2D:a,outShape:o}=function(t,e,n){const s=xu(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>d$({inputs:{x:t},attrs:{shape:[-1,g(t.shape.slice(e))]},backend:n}))),outShape:s}}(t,e,n),l=new LE(a.map((t=>t.shape))),u=n.runWebGLProgram(l,a,s);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const h=d$({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),h}function VE(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=I(r,e[0].shape)[0];bu(e.map((t=>t.shape)),i);const a=xu(e.map((t=>t.shape)),i);if(0===g(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>g(t.shape)>0));return 1===o.length?KT({inputs:{x:o[0]},backend:n}):UE(o,i,n)}const GE={kernelName:Ct,backendName:"webgl",kernelFunc:VE};class HE{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",w="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class jE{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,c=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qE{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const i=t.padInfo.left,a=t.strideWidth,o=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,c=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<u;t++)d+=`\n           vec4 xTexelC${2*t};\n           int xTexelC${2*t}Ready;\n           vec4 xTexelC${2*t+1};\n           int xTexelC${2*t+1}Ready;\n           vec4 xC${t};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let t=0;t<u;t++)d+=`\n           xTexelC${2*t} = vec4(0.0);\n           xTexelC${2*t}Ready = 0;\n           xTexelC${2*t+1} = vec4(0.0);\n           xTexelC${2*t+1}Ready = 0;\n           xC${t} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let e=0;e<(c+1)/2;e++){const n=2*e;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<u&&(i%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const t=i%2==0?h(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===t?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(i%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class KE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=IN(this.outputShape.length);const{dataFormat:n}=e,s=nN(),r="channelsLast"===n,i=r?1:2,a=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${t};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*t+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function XE(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function YE({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),h=n.inChannels,c=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=i){const t=XE(i.shape,f);null!=t&&(i=d$({inputs:{x:i},backend:s,attrs:{shape:t}}),g.push(i))}if(null!=r){const t=XE(r.shape,f);null!=t&&(r=d$({inputs:{x:r},backend:s,attrs:{shape:t}}),g.push(r))}if((1!==c&&1!==p||!(h>1e3))&&u.isPacked&&f&&null!=u.texture&&l[2]%2!=0&&b(u.shape.slice(-3),l.slice(-3))){const h=l[0]*l[1]*(l[2]+1),c={dataId:t.dataId,shape:[1,h,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,d(KC(u.shape,c.shape),(()=>`packed reshape ${u.shape} to ${c.shape} isn't free`));const f=d$({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const b=S$({a:c,b:f,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),x=s.texData.get(b.dataId);d(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,x.shape=n.outShape,m=KT({inputs:{x:b},backend:s}),m.shape=n.outShape,g.push(b)}else{const l=n.outHeight*n.outWidth,u=d$({inputs:{x:t},backend:s,attrs:{shape:f?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),h=d$({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),c=S$({a:f?u:h,b:f?h:u,transposeA:!f,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=d$({inputs:{x:c},backend:s,attrs:{shape:n.outShape}}),g.push(u),g.push(h),g.push(c)}for(const t of g)s.disposeIntermediateTensorInfo(t);return m}function ZE({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:c,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*h,b=d*c,x=[n.batchSize,m,b],y=[];if(null!=i){const t=XE(i.shape,f);null!=t&&(i=d$({inputs:{x:i},backend:s,attrs:{shape:t}}),y.push(i))}if(null!=r){const t=XE(r.shape,f);null!=t&&(r=d$({inputs:{x:r},backend:s,attrs:{shape:t}}),y.push(r))}const w=d$({inputs:{x:e},backend:s,attrs:{shape:[1,m,g(e.shape)/m]}});y.push(w);const v=new KE(x,n),k=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(v,[t],"float32",k),S=d$({inputs:{x:I},backend:s,attrs:{shape:x}});y.push(I),y.push(S);const C=null!=r,N=null!=i,T="leakyrelu"===o,$=o?a$(o,!0):null,E=new o$(f?S.shape:w.shape,f?w.shape:S.shape,f?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,C,$,N,T),R=f?[S,w]:[w,S];if(r&&R.push(r),N&&R.push(i),T){const t=s.makeTensorInfo([],"float32",$s(a,"float32"));R.push(t),y.push(t)}const A=s.runWebGLProgram(E,R,"float32"),F=d$({inputs:{x:A},backend:s,attrs:{shape:n.outShape}});y.push(A);for(const t of y)s.disposeIntermediateTensorInfo(t);return F}const JE={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=s,c=la(l),d=Qi(r.shape,i.shape,a,u,o,h,!1,c);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===c&&q().getBool("WEBGL_EXP_CONV")){const t=new qE(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(t,[r,i],"float32",e)}else if(q().getBool("WEBGL_CONV_IM2COL"))p=ZE({x:r,filter:i,convInfo:d,backend:n});else{const t=new HE(d);p=n.runWebGLProgram(t,[r,i],"float32")}else p=YE({x:r,filter:i,convInfo:d,backend:n});const f=d$({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class QE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sR={kernelName:Tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=s,c=la(l),d=Qi(r.shape,h,a,1,o,u,!1,c),p=new QE(d);return n.runWebGLProgram(p,[r,i],"float32")}},rR={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=s,c=la(u),d=Qi(a,i.shape,o,1,l,h,!1,c),p=new tR(d);return n.runWebGLProgram(p,[r,i],"float32")}},iR={kernelName:Et,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=ta(r.shape,i.shape,a,l,o),h=new jE(u);return n.runWebGLProgram(h,[r,i],"float32")}},aR={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,u=ta(r.shape,l,a,1,o),h=new eR(u);return n.runWebGLProgram(h,[r,i],"float32")}},oR={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s,u=ta(l,i.shape,o,1,a),h=new nR(u);return n.runWebGLProgram(h,[r,i],"float32")}},lR=r$({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),uR={kernelName:Ft,backendName:"webgl",kernelFunc:lR},hR=r$({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),cR={kernelName:Mt,backendName:"webgl",kernelFunc:hR};class dR{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[h,c]=n;this.outputShape=[u,h,c,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,b]=h>1?[""+(a-1)/(h-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=c>1?[""+(o-1)/(c-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const pR={kernelName:Ot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,h=new dR(r.shape,i.shape,o,l,u);return n.runWebGLProgram(h,[r,i,a],"float32")}};var fR;!function(t){t.Prod="*",t.Sum="+"}(fR||(fR={}));class mR{constructor(t,e,n,s){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===fR.Prod?"1.0":"0.0",a=n?i:`getX(${gR(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${bN(r)} coords = getOutputCoords();\n        int end = ${bR(r,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${bR(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${gR(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function gR(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function bR(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function xR(t,e,n,s,r,i){const a=e.shape.length,o=co([s],a);let l=e;null!=o&&(l=k$({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=fo(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const h=l.shape[u];let c=KT({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const s=new mR(t,l.shape,!1,i),r=[[e]],a=c;c=n.runWebGLProgram(s,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(r){const e=new mR(t,l.shape,r,i),s=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const t=k$({inputs:{x:c},backend:n,attrs:{perm:po(o)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),t}return c}const yR={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return xR(fR.Prod,r,n,i,a,o)}},wR={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return xR(fR.Sum,r,n,i,a,o)}},vR={kernelName:Lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(i.dataId),s=zN(t,e,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(i),s=PN(t,e,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class kR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const IR={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=("NHWC"===a?r.shape[1]:r.shape[2])*i,u=("NHWC"===a?r.shape[2]:r.shape[3])*i,h=("NHWC"===a?r.shape[3]:r.shape[1])/(i*i),c=new kR("NHWC"===a?[o,l,u,h]:[o,h,l,u],i,a);return n.runWebGLProgram(c,[r],r.dtype)}};class SR{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const i=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}}class CR{constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const i=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<c;t++)p+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xTexelC${2*t+1};\n          int xTexelC${2*t+1}Ready;\n          vec4 xC${t};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let t=0;t<c;t++)p+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xTexelC${2*t+1} = vec4(0.0);\n          xTexelC${2*t+1}Ready = 0;\n          xC${t} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let t=0;t<(d+1)/2;t++){const e=2*t;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2==0?h(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const NR={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let h=l;null==h&&(h=[1,1]),d(oa(a,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`));const c=Qi(r.shape,i.shape,a,h,o,u,!0);let p;p=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?new CR(c):new SR(c);const f=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return n.runWebGLProgram(p,[r,i],"float32",f)}};class TR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $R{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ER={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=s,c=Qi(r.shape,h,a,o,l,u,!0),d=new TR(c);return n.runWebGLProgram(d,[r,i],"float32")}},RR={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=s,c=Qi(h,i.shape,a,o,l,u,!0),d=new $R(c);return n.runWebGLProgram(d,[r,i],"float32")}};class AR{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const FR={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],i=g(s.shape),a=d$({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new AR(i),l=n.runWebGLProgram(o,[a],a.dtype),u=d$({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class MR{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:s,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:h,left:c}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${h}, ${c});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const DR={kernelName:Vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=Yi(r.shape,i.shape,a,o,"NHWC",l);let h;const c=new MR(u);h=n.runWebGLProgram(c,[r,i],"float32");const d=d$({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),d}},_R={kernelName:qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Qu(r,i.length);eh(a.length,l,i);const{path:u,steps:h}=nh(o,l),c=h.length;let d=null,p=a.length;const f=[];for(let t=0;t<c;++t){for(const e of h[t]){const{permutationIndices:t,expandDims:s}=th(p,l[e]);let r;sh(t)?r=i[e]:(r=k$({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let t=0;t<s.length;++t)a.splice(s[t],0,1);b(r.shape,a)||(r=d$({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=h$({inputs:{a:r,b:d},backend:n}),f.push(d))}t<c-1&&(u[t]>=0&&(d=w$({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},OR=r$({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),LR={kernelName:Kt,backendName:"webgl",kernelFunc:OR},zR={kernelName:Xt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new jT("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)}},PR=i$({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:VN}),BR={kernelName:Zt,backendName:"webgl",kernelFunc:PR},WR=r$({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${zu};\n  float a1 = ${Pu};\n  float a2 = ${Bu};\n  float a3 = ${Wu};\n  float a4 = ${Uu};\n  float a5 = ${Vu};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),UR={kernelName:Yt,backendName:"webgl",kernelFunc:WR},VR=r$({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:GN,dtype:"float32"}),GR={kernelName:Jt,backendName:"webgl",kernelFunc:VR};function HR(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(d(-(a+1)<=r,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+r+1),o.splice(l,0,1),d$({inputs:{x:i},backend:s,attrs:{shape:o}})}const jR={kernelName:Qt,backendName:"webgl",kernelFunc:HR},qR="return exp(x) - 1.0;",KR=r$({opSnippet:qR,packedOpSnippet:qR,cpuKernelImpl:HN}),XR={kernelName:te,backendName:"webgl",kernelFunc:KR};class YR{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ZR(t,e,n){const s=n.texData.get(t.dataId),r=g(t.shape),i=t.shape[t.shape.length-1],a=d$({inputs:{x:t},backend:n,attrs:{shape:[r/i,i]}}),o=a.shape,l=new YR("real",o,e),u=new YR("imag",o,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],c=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),p=YT({inputs:{real:c,imag:d},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d);const f=d$({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const JR={kernelName:ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return ZR(s,!1,n)}};class QR{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function tA(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||F(r),"string"===i){const t=N(i,g(s));return t.fill(r),e.makeTensorInfo(s,i,t)}{const t=new QR(s,r),n=[[r]];return e.runWebGLProgram(t,[],i,n)}}const eA={kernelName:ne,backendName:"webgl",kernelFunc:tA};class nA{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const sA={kernelName:se,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new nA(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},rA="return floor(x);",iA=r$({opSnippet:rA,packedOpSnippet:rA,cpuKernelImpl:jN}),aA={kernelName:re,backendName:"webgl",kernelFunc:iA},oA=i$({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),lA={kernelName:ie,backendName:"webgl",kernelFunc:oA};class uA{constructor(t){this.variableNames=["A"];const e=nN(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class hA{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=nN(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const cA={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s,a="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[u,l],c=[u,l,i];if(o||a){const t=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=dA&&t===pA||(pA=t,dA=document.createElement("canvas").getContext("2d",{willReadFrequently:pA})),dA.canvas.width=l,dA.canvas.height=u,dA.drawImage(r,0,0,l,u),r=dA.canvas}const d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=NC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=q().getBool("WEBGL_PACK")?new hA(c):new uA(c),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let dA,pA=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const fA={kernelName:ns,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=la(h),g=Qi(r.shape,i.shape,l,c,u,d,!1,m);let b;const x=[],y=null!=a,w=null!=o,v="leakyrelu"===p,k=()=>{const t=[r,i],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=d$({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return x.push(e),e}return t};if(y&&t.push(e(a,h)),w&&t.push(e(o,h)),v){const e=n.makeTensorInfo([],"float32",$s(f,"float32"));t.push(e),x.push(e)}return t};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&q().getBool("WEBGL_EXP_CONV")){const t=p?a$(p,!0):null,e=new qE(g,y,t,w,v),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();b=n.runWebGLProgram(e,r,"float32",s)}else if(q().getBool("WEBGL_CONV_IM2COL"))b=ZE({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=p?a$(p,!1):null,e=new HE(g,y,t,w,v),s=k();b=n.runWebGLProgram(e,s,"float32")}else b=YE({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=d$({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}},mA={kernelName:ss,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:h,dimRoundingMode:c,activation:p,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),d(oa(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=Qi(r.shape,i.shape,l,g,u,c,!0),x=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=p?a$(p,x):null,w=[r,i],v=null!=a,k=null!=o,I="leakyrelu"===p;if(v&&w.push(a),k&&w.push(o),I){const t=n.makeTensorInfo([],"float32",$s(f,"float32"));w.push(t),m.push(t)}let S;S=x?new CR(b,v,y,k,I):new SR(b,v,y,k,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,w,"float32",C);return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class gA{constructor(t,e,n,s){this.sliceDim=t,this.strides=e,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=bN(n.length);let i="\n    int index;";for(let t=0;t<this.sliceDim;t++)i+=`\n          index = round(getIndices(coords[0], ${t}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[t]};\n          flattenIndex += index * ${this.strides[t]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const bA={kernelName:le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],o=g(s.shape),[l,u,h,c]=Fu(s,r),d=d$({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),p=d$({inputs:{x:s},backend:n,attrs:{shape:[g(s.shape)/h,h]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const t=n.readSync(r.dataId),e=n.bufferSync(s),i=qN(t,e,s.dtype,u,a,h,c,s.shape,o);return n.makeTensorInfo(l,s.dtype,i.values)}const f=new gA(a,c,[u,h],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),b=d$({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class xA{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=bN(this.rank),s=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let e=0;e<t.length;e++)2===e?s.push("index"):s.push(`${n[e]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function yA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=I(a,r.shape)[0];if(q().get("DEBUG")){const t=n.readSync(i.dataId),e=r.shape[l];for(let n=0;n<t.length;++n){const s=t[n];d(s<=e-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${e-1}]`))}}const u=wh(r,i,l,o),h=g(i.shape),c=[],p=d$({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=d$({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});c.push(p),c.push(f);const m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),s=KN(e,t,m);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const b=new xA(p.shape,m),x=n.runWebGLProgram(b,[p,f],p.dtype);c.push(x);const y=d$({inputs:{x},backend:n,attrs:{shape:u.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}const wA={kernelName:oe,backendName:"webgl",kernelFunc:yA},vA=i$({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:XN,dtype:"bool"}),kA={kernelName:ue,backendName:"webgl",kernelFunc:vA},IA=i$({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:YN}),SA={kernelName:he,backendName:"webgl",kernelFunc:IA},CA={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return ZR(s,!0,n)}},NA=r$({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),TA={kernelName:fe,backendName:"webgl",kernelFunc:NA},$A=r$({opSnippet:"return float(isinf(x));",dtype:"bool"}),EA={kernelName:me,backendName:"webgl",kernelFunc:$A},RA=r$({opSnippet:"return float(isnan(x));",dtype:"bool"}),AA={kernelName:ge,backendName:"webgl",kernelFunc:RA},FA=i$({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ZN,dtype:"bool"}),MA={kernelName:xe,backendName:"webgl",kernelFunc:FA},DA=i$({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:JN,dtype:"bool"}),_A={kernelName:ye,backendName:"webgl",kernelFunc:DA},OA={kernelName:we,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=QN(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}},LA=r$({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:tT}),zA={kernelName:ve,backendName:"webgl",kernelFunc:LA},PA=r$({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),BA={kernelName:ke,backendName:"webgl",kernelFunc:PA},WA=i$({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),UA={kernelName:Ie,backendName:"webgl",kernelFunc:WA},VA=r$({opSnippet:"return float(!(x >= 1.0));"}),GA={kernelName:Se,backendName:"webgl",kernelFunc:VA},HA=i$({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),jA={kernelName:Ce,backendName:"webgl",kernelFunc:HA};class qA{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class KA{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const XA={kernelName:Ne,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=q().getBool("WEBGL_PACK_NORMALIZATION")?new KA(r.shape,i,a,o,l):new qA(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class YA{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ZA={kernelName:Te,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:h}=s,c=new YA(r.shape,o,l,u,h);return n.runWebGLProgram(c,[r,i,a],r.dtype)}};function JA(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=I(i,r.shape);let u=l;const h=co(u,o),c=null!=h,d=n.shouldExecuteOnCPU([r]);let p=r;if(c){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[h[t]];const s=TT(t,r.shape,r.dtype,h,e);p=n.makeTensorInfo(e,r.dtype),n.texData.get(p.dataId).values=s}else p=y$(r,h,n);u=fo(u.length,o)}ho("max",u,o);const[f,m]=lo(p.shape,u);let b,x=f;if(a&&(x=uo(f,l)),d){const t=n.texData.get(p.dataId).values,e=eT(t,g(m),x,r.dtype);b=n.makeTensorInfo(x,r.dtype),n.texData.get(b.dataId).values=e}else b=function(t,e,n,s){const r=g(e),i=d$({inputs:{x:t},attrs:{shape:[g(t.shape)/r,r]},backend:s}),a=g$(i,t.dtype,"max",s),o=d$({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(p,m,x,n);return c&&n.disposeIntermediateTensorInfo(p),b}const QA={kernelName:$e,backendName:"webgl",kernelFunc:JA},tF=i$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:nT}),eF={kernelName:Ee,backendName:"webgl",kernelFunc:tF},nF={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;tN(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;d(oa(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Zi(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return KT({inputs:{x:r},backend:n});const h=new sE(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}},sF={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,h=Ji(r.shape,i,a,[1,1,1],o,u,l),c=new rE(h,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};class rF{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=r-1-t.padInfo.top,o=i-1-t.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iF{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=o-1-t.padInfo.front,c=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${c}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aF={kernelName:Me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=s,c=Ji(a.shape,o,l,[1,1,1],u,h),d=new rE(c,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new iF(c),m=n.runWebGLProgram(f,[r,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},oF={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;tN([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:c}=s,d=Zi(o.shape,l,u,1,h,c),p=new sE(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new rF(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},lF={kernelName:De,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;d(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];d(oa(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const h=Zi(s.shape,r,i,u,a),[c,p]=function(t,e,n,s){let r=new sE(n,"max",!1);const i=s.runWebGLProgram(r,[t],"float32");return r=new sE(n,"max",!0,!0,e),[i,s.runWebGLProgram(r,[t],"float32")]}(s,o,h,l);return[c,p]}},uF={kernelName:_e,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:i}=e,a=n,o=s.shape.length,l=I(i,s.shape);let u=l;const h=co(u,o),c=null!=h,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(c){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const n=TT(t,s.shape,s.dtype,h,e);f=a.makeTensorInfo(e,s.dtype),a.texData.get(f.dataId).values=n}else f=y$(s,h,a);p.push(f),u=fo(u.length,o)}ho("sum",u,o);const[m,b]=lo(f.shape,u);let x=m;r&&(x=uo(m,l));const y=function(t,e,n,s){const r=g(e),i=d$({inputs:{x:t},attrs:{shape:[g(t.shape)/r,r]},backend:s}),a=g$(i,"float32","mean",s),o=d$({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(f,b,x,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},hF={kernelName:Oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=I(i,r.shape);let u=l;const h=co(u,o);let c=r;null!=h&&(c=k$({inputs:{x:r},backend:n,attrs:{perm:h}}),u=fo(u.length,r.shape.length)),ho("min",u,o);const[d,p]=lo(c.shape,u),f=d$({inputs:{x:c},backend:n,attrs:{shape:[-1,g(p)]}}),m=g$(f,f.dtype,"min",n);let b;return b=d$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),b}},cF=i$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sT}),dF={kernelName:Le,backendName:"webgl",kernelFunc:cF};class pF{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=bN(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class fF{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=bN(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=RT("rc",s),l=RT("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,h=1===s?"source":`vec2(${l.slice(-2).join()})`,c="reflect"===n?0:1;let d="";if(1===s){const t=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${c};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${c};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{const t=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${c}) +\n                gte * ((end - 1) * 2 - source + ${c});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const mF={kernelName:ze,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:i}=n,a=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fF(s.shape,r,i):new pF(s.shape,r,i);return e.runWebGLProgram(a,[s],s.dtype)}},gF=i$({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),bF={kernelName:Pe,backendName:"webgl",kernelFunc:gF};class xF{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const yF=i$({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),wF={kernelName:jt,backendName:"webgl",kernelFunc:yF},vF="return a - b;",kF=i$({opSnippet:vF,packedOpSnippet:vF,supportsComplex:!0,cpuKernelImpl:ST}),IF={kernelName:Un,backendName:"webgl",kernelFunc:kF};function SF(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=I([i],r.shape),o=JA({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=uo(o.shape,a),u=d$({inputs:{x:o},backend:n,attrs:{shape:l}}),h=kF({inputs:{a:r,b:u},backend:n}),c=VR({inputs:{x:h},backend:n}),d=w$({inputs:{x:c},backend:n,attrs:{axis:a,keepDims:!1}}),p=d$({inputs:{x:d},backend:n,attrs:{shape:l}}),f=yF({inputs:{a:c,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const CF={kernelName:Rn,backendName:"webgl",kernelFunc:SF},NF={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:SF({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],h=l.shape[1],c=new xF(u,h,i),d=[[a]],p=n.runWebGLProgram(c,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},TF={kernelName:Ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const t=n.texData.get(s.dataId),[e,r]=iT(t.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,e)}let r;return r=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new BT(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new LT(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},$F=El,EF={kernelName:Ge,backendName:"webgl",kernelFunc:function(t){rs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:c}=$F(u,h,a,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},RF=Rl,AF={kernelName:He,backendName:"webgl",kernelFunc:function(t){rs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,h=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=RF(h,c,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},FF=Al,MF={kernelName:je,backendName:"webgl",kernelFunc:function(t){rs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,h=n.readSync(r.dataId),c=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=FF(h,c,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class DF{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const _F={kernelName:Ke,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=g(r.shape),h=new DF(u,a,o,l),c=d$({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(h,[c],i);n.disposeIntermediateTensorInfo(c);const p=d$({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function OF(t){const{inputs:e,backend:n}=t,{x:s}=e;if("complex64"===s.dtype){const t=CE({inputs:{input:s},backend:n}),e=OF({inputs:{x:t},backend:n}),r=BE({inputs:{input:s},backend:n}),i=OF({inputs:{x:r},backend:n}),a=YT({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return tA({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const LF={kernelName:Jn,backendName:"webgl",kernelFunc:OF},zF={kernelName:qe,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=CE({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),i=BE({inputs:{input:r},backend:s}),a=OF({inputs:{x:i},backend:s}),o=YT({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return tA({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},PF={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return HR({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{p(i,t.shape,"All tensors passed to stack must have matching shapes"),d(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=VE({inputs:e.map((t=>{const e=HR({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class BF{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=bN(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class WF{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=bN(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=RT("rc",s),l=RT("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,h=1===s?"source":`vec2(${l.slice(-2).join()})`,c=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===s?2:4;t<e;t++)p+=`\n        ${c[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const UF=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;if(0===g(r.shape)){const t=i.map(((t,e)=>t[0]+r.shape[e]+t[1]));return tA({backend:n,attrs:{shape:t,value:a,dtype:r.dtype}})}const o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WF(r.shape,i,a):new BF(r.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[r],r.dtype,l)},VF={kernelName:Ye,backendName:"webgl",kernelFunc:UF},GF=i$({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),HF={kernelName:Ze,backendName:"webgl",kernelFunc:GF},jF={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=I(i,r.shape);let h=u;const c=co(h,o);let d,p=r;if(null!=c&&(p=k$({inputs:{x:r},backend:n,attrs:{perm:c}}),h=fo(h.length,o),l.push(p)),ho("prod",h,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:s,outDtype:r}=oT(p.shape,p.dtype,t,h);d=n.makeTensorInfo(s,r,e)}else{const[t,e]=lo(p.shape,h),s=g(e),i=d$({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),a=g$(i,er(r.dtype),"prod",n);d=d$({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(i),l.push(a)}if(a){l.push(d);const t=uo(d.shape,u);d=d$({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},qF={kernelName:tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map((t=>n.readSync(t.dataId))),u=r.map((t=>t.shape)),h=n.readSync(i.dataId),c=n.readSync(a.dataId),[d,p,f]=lT(l,u,h,i.shape,i.dtype,c,a.shape,o),m=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}},KF={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),h=n.readSync(i.dataId),c=n.readSync(a.dataId),d=o.map((t=>n.readSync(t.dataId))),p=o.map((t=>t.shape)),[f,m]=uT(u,r.shape,h,i.shape,i.dtype,c,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,m)}},XF=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:i,dtype:a}=n,o=hT(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},YF={kernelName:nn,backendName:"webgl",kernelFunc:XF},ZF=r$({opSnippet:"return 1.0 / x;"}),JF={kernelName:rn,backendName:"webgl",kernelFunc:ZF},QF=r$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),tM={kernelName:an,backendName:"webgl",kernelFunc:QF},eM=r$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),nM={kernelName:dn,backendName:"webgl",kernelFunc:eM};class sM{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],h=[s&&e>1?e-1:e,s&&n>1?n-1:n];let c;c=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${c};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class rM{constructor(t,e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],h=[s&&e>1?e-1:e,s&&n>1?n-1:n];let c;c=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]},\n          ${u[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${c};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const iM={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rM(r.shape,l,u,i,a):new sM(r.shape,l,u,i,a);return n.runWebGLProgram(h,[r],"float32")}};class aM{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,i,a]=t,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const oM={kernelName:cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new aM(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class lM{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],h=[s&&e>1?e-1:e,s&&n>1?n-1:n],c=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class uM{constructor(t,e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[s&&e>1?a-1:a,s&&n>1?o-1:o],h=[s&&e>1?e-1:e,s&&n>1?n-1:n],c=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]},\n          ${u[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const hM={kernelName:ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uM(r.shape,l,u,i,a):new lM(r.shape,l,u,i,a);return n.runWebGLProgram(h,[r],r.dtype)}};class cM{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,i,a]=t,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const dM={kernelName:un,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new cM(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class pM{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=bN(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class fM{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=RT("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=bN(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const mM={kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s,a=r.shape.length,o=I(i,r.shape);if(0===a)return KT({inputs:{x:r},backend:n});const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fM(r.shape,o):new pM(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class gM{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],s=t[2];this.outputShape=t;let r="";r="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bM={kernelName:ts,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new gM(s.shape,i),[u,h]=Nu(a,s.shape[1],s.shape[2]),c=[[u,h,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,c)}},xM=r$({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),yM={kernelName:fn,backendName:"webgl",kernelFunc:xM},wM=r$({opSnippet:"return inversesqrt(x);",cpuKernelImpl:cT}),vM={kernelName:mn,backendName:"webgl",kernelFunc:wM};class kM{constructor(t,e,n,s,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=bN(r.length),l=bN(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const h=`getIndices(${u})`;let c="";1===s?c="i":2===s&&(c="i, coords[1]");const d=`getUpdates(${c})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const IM={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:c}=_u(0,r,a),d=[c/u,u];if(0===c)return n.makeTensorInfo(a,r.dtype);const p=d$({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=d$({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new kM(l,o,p.shape.length,f.shape.length,h,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=d$({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class SM{constructor(t,e,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===q().getNumber("WEBGL_VERSION")?"while (left < right) {":r,a="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const CM={kernelName:bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:i}=e,{side:a}=s,o=new SM(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}};class NM{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<e.length;s++)a.push(`${n[s]}`),s<t&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=bN(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const TM={kernelName:xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e,a=new NM(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],tr(r.dtype,i.dtype))}},$M=r$({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ou};\n  float scale = ${Lu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),EM={kernelName:yn,backendName:"webgl",kernelFunc:$M},RM=r$({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:pT}),AM={kernelName:Sn,backendName:"webgl",kernelFunc:RM},FM=r$({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),MM={kernelName:In,backendName:"webgl",kernelFunc:FM},DM=r$({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),_M={kernelName:vn,backendName:"webgl",kernelFunc:DM},OM=r$({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),LM={kernelName:kn,backendName:"webgl",kernelFunc:OM},zM=r$({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),PM={kernelName:Cn,backendName:"webgl",kernelFunc:zM},BM={kernelName:$n,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;d(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=[],h=UF({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Tu(h.shape,i,o,!1),p=$u(c.length,i.length,!1),f=Eu(h.shape,i,o,!1),m=d$({inputs:{x:h},backend:n,attrs:{shape:c}}),g=k$({inputs:{x:m},backend:n,attrs:{perm:p}}),b=d$({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(h),u.push(m),u.push(g),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},WM={kernelName:An,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),h=n.readSync(a.dataId)[0],[c,d,p,f,m]=gT(o,s.shape,s.dtype,l,r.dtype,u,h);return[n.makeTensorInfo(d,s.dtype,c),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},UM={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:i}=e;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(i.dataId)),[u,h,c]=bT(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(h,s.dtype,u),n.makeTensorInfo([c.length],i.dtype,new Int32Array(c))]}},VM={kernelName:Mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,h]=xT(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(h,s.dtype,u)}},GM={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,h]=xT(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(h,s.dtype,u)}},HM={kernelName:_n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:c,outputSize:d}=_u(0,r,o);if("string"===i.dtype){const t=n.bufferSync(r),e=n.bufferSync(i),s=Fs(n.readSync(a.dataId)[0]),p=dT(t,e,o,d,h,u,l,c,s,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new kM(u,l,r.shape.length,i.shape.length,c,[d,1],!1),f=n.runWebGLProgram(p,[i,r,a],i.dtype),m=d$({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},jM={kernelName:En,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=I(a,r.shape)[0],l=ih(r,i,o),u=r.shape.length,h=new Array(u).fill(0),c=r.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const s=xE({inputs:{x:r},backend:n,attrs:{begin:h,size:e}});return h[o]+=t,s}))}},qM="return sqrt(x);",KM=r$({opSnippet:qM,packedOpSnippet:qM,cpuKernelImpl:yT}),XM={kernelName:Nn,backendName:"webgl",kernelFunc:KM},YM={kernelName:Ln,backendName:"webgl",kernelFunc:r$({opSnippet:"return x * x;"})},ZM="return (a - b) * (a - b);",JM=i$({opSnippet:ZM,packedOpSnippet:ZM}),QM={kernelName:On,backendName:"webgl",kernelFunc:JM},tD={kernelName:Qn,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new LT(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}};class eD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=bN(n.length),i=bN(n.length);let a="";if(1===s)a="coords * strides + begin";else{let t=0;a=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const nD={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:c,shrinkAxisMask:p}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ri(r.shape,i,a,o,l,u,h,c,p);let k;if(g)k=d$({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||x){d(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const t=bi(y,w,v),e=xE({inputs:{x:r},backend:n,attrs:{begin:y,size:t}});k=d$({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([r])){const t=n.readSync(r.dataId),e=ni(r.shape,r.dtype,t),s=wT(f,e,v,y);k=n.makeTensorInfo(m,r.dtype,s.values)}else{const t=new eD(y,v,f);k=n.runWebGLProgram(t,[r],r.dtype)}const I=d$({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},sD={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:h,dataSplits:c}=e,d=n.readSync(h.dataId),p=n.readSync(c.dataId),[f,m]=vT(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},rD={kernelName:Bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,h,c]=kT(o,l,r),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(c))]}},iD={kernelName:Wn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=IT(a,r);return n.makeTensorInfo(i.shape,"int32",o)}},aD=r$({opSnippet:"return tan(x);"}),oD={kernelName:Vn,backendName:"webgl",kernelFunc:aD},lD=r$({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),uD={kernelName:Gn,backendName:"webgl",kernelFunc:lD};class hD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=bN(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function cD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;if("string"===r.dtype||r.shape.length>5){const t=n.readSync(r.dataId),e="string"===r.dtype?t.map((t=>Fs(t))):t,s=ni(r.shape,r.dtype,e),a=CT(s,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new hD(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const dD={kernelName:Hn,backendName:"webgl",kernelFunc:cD};class pD{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class fD{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function mD(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function gD(t){let e=1;for(;e<t;)e*=2;return e}const bD={kernelName:jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([r])||h<o||i>l){const t=n.readSync(r.dataId),[e,s]=NT(t,u,r.dtype,i,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[r,tA({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const c=n.texData.get(r.dataId),d=null!==c&&c.isPacked,p=d?n.unpackTensor(r):r,f=g(u)/h,m=d$({inputs:{x:p},attrs:{shape:[f,h]},backend:n});d&&mD(n,p);const b=gD(i),x=gD(h);let y=null;const w=()=>null===y?[m,m]:[m,y],v=(t,e,s)=>{const r=w(),i=new pD(s),a=[[h],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=y;y=n.runWebGLProgram(i,r,"int32",a),mD(n,o)};for(let t=1;t<b;t*=2){const e=2*t;for(let n=t;n>=1;n/=2)v(e,n,[f,x])}for(let t=x;t>b;t/=2){const e=w(),s=new fD([f,t/2]),r=[[h],[null===y?1:0],[b]],i=y;y=n.runWebGLProgram(s,e,"int32",r),mD(n,i);const a=b/2,o=2*a;for(let t=a;t>=1;t/=2)v(o,t,y.shape)}let k=y;y=xE({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),mD(n,k);let I=yA({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});mD(n,m);const S=u.slice(0,-1);S.push(i),k=y,y=d$({inputs:{x:y},attrs:{shape:S},backend:n}),mD(n,k);const C=I;return I=d$({inputs:{x:I},attrs:{shape:S},backend:n}),mD(n,C),[I,y]}};class xD{constructor(t,e,n,s,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const yD={kernelName:qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[h,c,d,p]=r.shape,[f,m]=null!=u?u:[c,d],g=new xD(c,d,a,o,l,[h,f,m,p]);return n.runWebGLProgram(g,[r,i],"float32")}},wD={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;tN(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=$T(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},vD={kernelName:Yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let h=0;for(let t=0;t<o;t++)t!==i&&(u[h++]=a.shape[t]);const c=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[i]=t;const e=xE({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),s=d$({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=s,c.push(e)}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class kD{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,i=t.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const ID=[C$,T$,E$,A$,D$,L$,z$,P$,H$,j$,K$,Y$,J$,tE,nE,iE,aE,uE,hE,cE,fE,wE,vE,kE,TE,RE,ME,ZT,OE,GE,JE,sR,rR,iR,aR,oR,uR,cR,pR,yR,wR,vR,IR,NR,ER,RR,FR,DR,_R,LR,zR,BR,UR,GR,jR,XR,JR,eA,sA,aA,lA,cA,fA,mA,bA,wA,kA,SA,XT,CA,WE,TA,EA,AA,t$,MA,_A,OA,zA,BA,UA,GA,jA,XA,ZA,QA,eF,nF,sF,aF,oF,lF,uF,hF,dF,mF,bF,NF,c$,TF,EF,AF,MF,SE,_F,zF,PF,VF,HF,s$,jF,qF,KF,YF,NE,wF,JF,tM,nM,p$,iM,oM,hM,dM,mM,bM,yM,vM,IM,CM,TM,EM,AM,MM,_M,LM,yE,CF,PM,BM,WM,UM,VM,GM,HM,jM,XM,YM,QM,tD,nD,sD,rD,iD,IF,v$,oD,uD,dD,bD,yD,I$,wD,vD,{kernelName:Zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const h=co([u],o);let c=r;null!=h&&(c=k$({inputs:{x:r},backend:n,attrs:{perm:h}}),l.push(c),u=fo(1,o)[0]);const d=yh(c.shape,u,a),p=g([c.shape[u]]),f=d$({inputs:{x:c},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=er(r.dtype),b=(t,e,s,r,i)=>{const a=t.shape[0],o=t.shape[1],u=xh(o,i),h=new kD({windowSize:u,inSize:o,batchSize:a,numSegments:i},e),c=n.compileAndRun(h,[t,s],r);if(l.push(c),c.shape[1]===i)return c;const d=XF({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=cD({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),b(c,e,p,r,i)},x=d$({inputs:{x:b(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let y=x;if(null!=h){l.push(x);const t=po(h);y=k$({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},LF];for(const t of ID)cs(t);const SD=(t,e,n,s=0)=>{const r=((t,e,n,s=0)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]}))(t,e,n,s),{x:i,y:a,z:o}=r;return{x:i/o,y:a/o}},CD=(t,e,n,s,r,i,a,o)=>({variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[o,r*r],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, ${r}) * ${s};\n\t    int searchOffsetY = searchOffsetIndex / ${r} * ${s};\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - ${n};\n\t    int sy = sCenterY + searchOffsetY - ${n};\n\n\t    if (sx < ${t} || sx >= (${a} - ${t}) || sy < ${t} || sy >= (${i} - ${t})) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < ${e}; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < ${e}; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - ${t};\n\t\t  int fy2 = sCenterY + templateOffsetY - ${t};\n\n\t\t  int sx2 = sx + templateOffsetX - ${t};\n\t\t  int sy2 = sy + templateOffsetY - ${t};\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(${e} * ${e});\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`}),ND=(t,e,n,s)=>({variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[s,2],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / ${n*n};\n\t    int searchOffsetIndex = imod(maxIndex, ${n*n});\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, ${n}) * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${t}) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / ${n} * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${t}) / markerScale);\n\t    }\n\t  }\n\t`}),TD=t=>({variableNames:["sims","maxIndex"],outputShape:[t],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"}),$D=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"}),ED=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"}),RD=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],AD=[];for(let t=0;t<RD.length;t++){const e=RD[t].sigma;for(let n=0;n<RD[t].points.length;n++){const s=RD[t].points[n];AD.push([e,s[0],s[1]])}}const FD=AD,MD=(FD.length-1)*FD.length/2,DD=1/(2*Math.PI),_D=t=>{const e=[];for(let n=1;n<t.length;n++)e.push("image"+n);return e},OD=t=>{let e="float getPixel(int octave, int y, int x) {";for(let n=1;n<t.length;n++)e+=`\n\t  if (octave == ${n}) {\n\t    return getImage${n}(y, x);\n\t  }\n\t`;return e+="}",e},LD=(t,e,n,s)=>{const r=_D(t),i=OD(t);return{variableNames:[...r,"extrema","radial"],outputShape:[e.shape[0],n.shape[0],2],userCode:`\n\t  ${i}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * ${s};\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`}},zD=(t,e)=>({variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${e.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`}),PD=t=>null==t,BD=t=>{if("object"!=typeof t||null===t)return t;const e=Array.isArray(t)?[]:{};for(const n in t){const s=t[n];e[n]=BD(s)}return e},WD=class{debugMode;width;height;numOctaves;tensorCaches;kernelCaches;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n;let s=0;for(;t>=8&&e>=8&&(t/=2,e/=2,s++,5!==s););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(const[n,s]of t.entries())e[4*n]=s,e[4*n+1]=s,e[4*n+2]=s,e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}_buildPyramidImage(t){const e=[];for(let n=0;n<this.numOctaves;n++){let s;s=0===n?this._applyFilter(t):this._downsampleBilinear(e[n-1][e[n-1].length-1]);const r=this._applyFilter(s);e.push([s,r])}return e}_buildDogPyramid(t){const e=[];for(let n=0;n<this.numOctaves;n++){const s=this._differenceImageBinomial(t[n][0],t[n][1]);e.push(s)}return e}_getExtremas(t){const e=[];for(let n=1;n<this.numOctaves-1;n++){const s=this._buildExtremas(t[n-1],t[n],t[n+1]);e.push(s)}return e}_getFeaturePoints(t,e,n){const s=[];for(const[r,i]of t.entries()){if(0==i[0])continue;const t=[];for(let n=0;n<e[r].length;n+=4){const s=e[r][n]*256**3+65536*e[r][n+1]+256*e[r][n+2]+e[r][n+3];t.push(s)}const a=i[1],o=i[2],l=i[3]*Math.pow(2,a)+Math.pow(2,a-1)-.5,u=o*Math.pow(2,a)+Math.pow(2,a-1)-.5,h=Math.pow(2,a);s.push({maxima:i[0]>0,x:l,y:u,scale:h,angle:n[r],descriptors:t})}return s}detect(t){let e={};const n=this._buildPyramidImage(t),s=this._buildDogPyramid(n),r=this._getExtremas(s),i=this._applyPrune(r),a=this._computeLocalization(i,s),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),h=this._computeExtremaFreak(n,a,u),c=this._computeFreakDescriptors(h),d=a.arraySync(),p=u.arraySync(),f=c.arraySync();return this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:s.map((t=>t?.arraySync()??null)),extremasResults:r.map((t=>t.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:i,localizedExtremas:a.arraySync()}),n.forEach((t=>t.forEach((t=>t?.dispose())))),s.forEach((t=>t?.dispose())),r.forEach((t=>t.dispose())),a.dispose(),o.dispose(),l.dispose(),u.dispose(),h.dispose(),c.dispose(),{featurePoints:this._getFeaturePoints(d,f,p),debugExtra:e}}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return _i().makeTensorFromTensorInfo(n)}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=t.map((t=>{return e=t.shape[0],n=t.shape[1],{variableNames:["extrema"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};var e,n}));this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let s=0;s<5;s++)n[t].push([0,0,0,0]),e[t].push(0)}Li((()=>{const{reductionKernels:s}=this.kernelCaches.applyPrune;for(let r=0;r<t.length;r++){const i=s[r],a=this._compileAndRun(i,[t[r]]),o=r+1,l=a.arraySync(),u=a.shape[0],h=a.shape[1],c=2*h/10,d=2*u/10;for(let t=0;t<u;t++)for(let s=0;s<h;s++){const r=l[t][s];if(0===r)continue;const i=r%1e3,a=Math.floor(Math.abs(r)/1e3),u=2*s+(2===a||3===a?1:0),h=2*t+(1===a||3===a?1:0),p=Math.floor(u/c),f=10*Math.floor(h/d)+p,m=Math.abs(i);let g=5;for(;g>=1&&m>=e[f][g-1];)g--;if(!(g>=5)){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t]=BD(n[f][t-1]);e[f][g]=m,n[f][g][0]=i,n[f][g][1]=o,n[f][g][2]=h,n[f][g][3]=u}}}}));const s=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)s.push(n[t][e]);return s}_applyFilter(t){const e=t.shape[0],n=t.shape[1],s="w"+n;return this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),this.kernelCaches.applyFilter[s]||(this.kernelCaches.applyFilter[s]=((t,e)=>[$D(t,e),ED(t,e)])(e,n)),Li((()=>{const[e,n]=this.kernelCaches.applyFilter[s],r=this._compileAndRun(e,[t]);return this._compileAndRun(n,[r])}))}_buildExtremas(t,e,n){const s=e.shape[0],r=e.shape[1],i="w"+r;return this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),this.kernelCaches.buildExtremas[i]||(this.kernelCaches.buildExtremas[i]=((t,e)=>({variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${t-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${e-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`}))(s,r)),Li((()=>{const s=this.kernelCaches.buildExtremas[i];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(s,[t,e,n])}))}_computeLocalization(t,e){return this.kernelCaches.computeLocalization||(this.kernelCaches.computeLocalization=((t,e)=>{const n=_D(t),s=OD(t);return[{variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${s}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`}]})(e,t)),Li((()=>{const n=this.kernelCaches.computeLocalization[0],s=Ir(t,[t.length,t[0].length],"int32"),r=this._compileAndRun(n,[...e.slice(1),s]).arraySync(),i=[];for(let t=0;t<r.length;t++){i.push([]);for(let e=0;e<r[t].length;e++)i[t].push([])}const a=[];for(const e of t)a.push([e[0],e[1],e[2],e[3]]);for(const[t,e]of a.entries()){if(0===e[0])continue;const n=r[t],s=.5*(n[1][2]-n[1][0]),i=.5*(n[2][1]-n[0][1]),a=n[1][2]+n[1][0]-2*n[1][1],o=n[2][1]+n[0][1]-2*n[1][1],l=.25*(n[0][0]+n[2][2]-n[0][2]-n[2][0]),u=a*o-l**2,h=(o*-s+-l*-i)/u,c=(-l*-s+a*-i)/u,d=e[2]+c,p=e[3]+h;Math.abs(u)<1e-4||(e[2]=d,e[3]=p)}return Ir(a,[a.length,a[0].length],"float32")}))}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||Li((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let s=-t;s<=t;s++){const t=Math.sqrt(s**2+n**2);if(t>4.5)continue;const r=Math.exp(-.05555555555555555*t**2);e.push([s,n,r])}this.tensorCaches.orientationHistograms={radialPropertiesT:Pi(Ir(e,[e.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;return this.kernelCaches.computeOrientationHistograms||(this.kernelCaches.computeOrientationHistograms=((t,e,n,s)=>[LD(t,e,n,s),zD(e,n)])(e,t,s,DD)),Li((()=>{const[e,r]=this.kernelCaches.computeOrientationHistograms,i=this._compileAndRun(e,[...n,t,s]);return this._compileAndRun(r,[i])}))}_computeExtremaAngles(t){return this.kernelCaches.computeExtremaAngles||(this.kernelCaches.computeExtremaAngles=(t=>({variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`}))(t)),Li((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||Li((()=>{const t=Ir(FD);this.tensorCaches._computeExtremaFreak={freakPointsT:Pi(t)}}));const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,r=[];for(let e=1;e<t.length;e++)r.push(t[e][1]);return this.kernelCaches._computeExtremaFreak||(this.kernelCaches._computeExtremaFreak=((t,e)=>{const n=_D(t),s=OD(t);return[{variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],FD.length],userCode:`\n\t  ${s}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`}]})(t,e)),Li((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...r,e,n,s])}))}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let s=0;s<t.shape[1];s++)for(let r=s+1;r<t.shape[1];r++)e.push(s),n.push(r);const s=Ir(e,[e.length]).cast("int32"),r=Ir(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Pi(Ho([s,r],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(MD/8);return this.kernelCaches.computeFreakDescriptors||(this.kernelCaches.computeFreakDescriptors=((t,e,n)=>[{variableNames:["freak","p"],outputShape:[t.shape[0],e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${n}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`}])(t,n,MD)),Li((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_differenceImageBinomial(t,e){return Li((()=>t.sub(e)))}_upsampleBilinear(t,e){const n="w"+t.shape[1];return this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),this.kernelCaches.upsampleBilinear[n]||(this.kernelCaches.upsampleBilinear[n]=(s=e.shape[0],r=e.shape[1],{variableNames:["p"],outputShape:[s,r],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"})),Li((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}));var s,r}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],s="w"+n;return this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),this.kernelCaches.downsampleBilinear[s]||(this.kernelCaches.downsampleBilinear[s]=((t,e)=>({variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"}))(e,n)),Li((()=>{const e=this.kernelCaches.downsampleBilinear[s];return this._compileAndRun(e,[t])}))}_smoothHistograms(t){return this.kernelCaches.smoothHistograms||(this.kernelCaches.smoothHistograms=(t=>({variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"}))(t)),Li((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_runWebGLProgram(t,e,n){const s=Wi().runWebGLProgram(t,e,n);return _i().makeTensorFromTensorInfo(s)}};var UD,VD,GD,HD=4294967295;function jD(t,e,n){var s=Math.floor(n/4294967296),r=n;t.setUint32(e,s),t.setUint32(e+4,r)}function qD(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var KD=("undefined"==typeof process||"never"!==(null===(UD=null===process||void 0===process?void 0:process.env)||void 0===UD?void 0:UD.TEXT_ENCODING))&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function XD(t){for(var e=t.length,n=0,s=0;s<e;){var r=t.charCodeAt(s++);if(0!=(4294967168&r))if(0==(4294965248&r))n+=2;else{if(r>=55296&&r<=56319&&s<e){var i=t.charCodeAt(s);56320==(64512&i)&&(++s,r=((1023&r)<<10)+(1023&i)+65536)}n+=0==(4294901760&r)?3:4}else n++}return n}var YD=KD?new TextEncoder:void 0,ZD=KD?"undefined"!=typeof process&&"force"!==(null===(VD=null===process||void 0===process?void 0:process.env)||void 0===VD?void 0:VD.TEXT_ENCODING)?200:0:HD,JD=(null==YD?void 0:YD.encodeInto)?function(t,e,n){YD.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(YD.encode(t),n)};function QD(t,e,n){for(var s=e,r=s+n,i=[],a="";s<r;){var o=t[s++];if(0==(128&o))i.push(o);else if(192==(224&o)){var l=63&t[s++];i.push((31&o)<<6|l)}else if(224==(240&o)){l=63&t[s++];var u=63&t[s++];i.push((31&o)<<12|l<<6|u)}else if(240==(248&o)){var h=(7&o)<<18|(l=63&t[s++])<<12|(u=63&t[s++])<<6|63&t[s++];h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h)}else i.push(o);i.length>=4096&&(a+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(a+=String.fromCharCode.apply(String,i)),a}var t_,e_=KD?new TextDecoder:null,n_=KD?"undefined"!=typeof process&&"force"!==(null===(GD=null===process||void 0===process?void 0:process.env)||void 0===GD?void 0:GD.TEXT_DECODER)?200:0:HD,s_=function(t,e){this.type=t,this.data=e},r_=(t_=function(t,e){return t_=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t_(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}t_(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i_=function(t){function e(n){var s=t.call(this,n)||this,r=Object.create(e.prototype);return Object.setPrototypeOf(s,r),Object.defineProperty(s,"name",{configurable:!0,enumerable:!1,value:e.name}),s}return r_(e,t),e}(Error),a_={type:-1,encode:function(t){var e,n,s,r;return t instanceof Date?function(t){var e,n=t.sec,s=t.nsec;if(n>=0&&s>=0&&n<=17179869183){if(0===s&&n<=4294967295){var r=new Uint8Array(4);return(e=new DataView(r.buffer)).setUint32(0,n),r}var i=n/4294967296,a=4294967295&n;return r=new Uint8Array(8),(e=new DataView(r.buffer)).setUint32(0,s<<2|3&i),e.setUint32(4,a),r}return r=new Uint8Array(12),(e=new DataView(r.buffer)).setUint32(0,s),jD(e,4,n),r}((s=1e6*((e=t.getTime())-1e3*(n=Math.floor(e/1e3))),{sec:n+(r=Math.floor(s/1e9)),nsec:s-1e9*r})):null},decode:function(t){var e=function(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:qD(e,4),nsec:e.getUint32(0)};default:throw new i_("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(t.length))}}(t);return new Date(1e3*e.sec+e.nsec/1e6)}},o_=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(a_)}return t.prototype.register=function(t){var e=t.type,n=t.encode,s=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=s;else{var r=1+e;this.builtInEncoders[r]=n,this.builtInDecoders[r]=s}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(s=this.builtInEncoders[n])&&null!=(r=s(t,e)))return new s_(-1-n,r);for(n=0;n<this.encoders.length;n++){var s,r;if(null!=(s=this.encoders[n])&&null!=(r=s(t,e)))return new s_(n,r)}return t instanceof s_?t:null},t.prototype.decode=function(t,e,n){var s=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return s?s(t,e,n):new s_(e,t)},t.defaultCodec=new t,t}();function l_(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var u_=function(){function t(t,e,n,s,r,i,a,o){void 0===t&&(t=o_.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=100),void 0===s&&(s=2048),void 0===r&&(r=!1),void 0===i&&(i=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=s,this.sortKeys=r,this.forceFloat32=i,this.ignoreUndefined=a,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.reinitializeState=function(){this.pos=0},t.prototype.encodeSharedRef=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.subarray(0,this.pos)},t.prototype.encode=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.slice(0,this.pos)},t.prototype.doEncode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth ".concat(e));null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),s=new DataView(e);n.set(this.bytes),this.view=s,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)&&!this.forceIntegerToFloat?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: ".concat(t," bytes in UTF-8"));this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){if(t.length>ZD){var e=XD(t);this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),JD(t,this.bytes,this.pos),this.pos+=e}else e=XD(t),this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),function(t,e,n){for(var s=t.length,r=n,i=0;i<s;){var a=t.charCodeAt(i++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[r++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<s){var o=t.charCodeAt(i);56320==(64512&o)&&(++i,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(e[r++]=a>>12&15|224,e[r++]=a>>6&63|128):(e[r++]=a>>18&7|240,e[r++]=a>>12&63|128,e[r++]=a>>6&63|128)}e[r++]=63&a|128}else e[r++]=a}}(t,this.bytes,this.pos),this.pos+=e},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(t)));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: ".concat(e));this.writeU8(198),this.writeU32(e)}var n=l_(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n=t.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: ".concat(n));this.writeU8(221),this.writeU32(n)}for(var s=0,r=t;s<r.length;s++){var i=r[s];this.doEncode(i,e+1)}},t.prototype.countWithoutUndefined=function(t,e){for(var n=0,s=0,r=e;s<r.length;s++)void 0!==t[r[s]]&&n++;return n},t.prototype.encodeMap=function(t,e){var n=Object.keys(t);this.sortKeys&&n.sort();var s=this.ignoreUndefined?this.countWithoutUndefined(t,n):n.length;if(s<16)this.writeU8(128+s);else if(s<65536)this.writeU8(222),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large map object: ".concat(s));this.writeU8(223),this.writeU32(s)}for(var r=0,i=n;r<i.length;r++){var a=i[r],o=t[a];this.ignoreUndefined&&void 0===o||(this.encodeString(a),this.doEncode(o,e+1))}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: ".concat(e));this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var s=n/4294967296,r=n;t.setUint32(e,s),t.setUint32(e+4,r)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),jD(this.view,this.pos,t),this.pos+=8},t}(),h_={};function c_(t){return"".concat(t<0?"-":"","0x").concat(Math.abs(t).toString(16).padStart(2,"0"))}var d_=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.find=function(t,e,n){t:for(var s=0,r=this.caches[n-1];s<r.length;s++){for(var i=r[s],a=i.bytes,o=0;o<n;o++)if(a[o]!==t[e+o])continue t;return i.str}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],s={bytes:t,str:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=s:n.push(s)},t.prototype.decode=function(t,e,n){var s=this.find(t,e,n);if(null!=s)return this.hit++,s;this.miss++;var r=QD(t,e,n),i=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(i,r),r},t}(),p_=function(t,e){var n,s,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,s&&(r=2&i[0]?s.return:i[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,i[1])).done)return r;switch(s=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,s=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],s=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},f_=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},s("next"),s("throw"),s("return"),e[Symbol.asyncIterator]=function(){return this},e);function s(n){e[n]=t[n]&&function(e){return new Promise((function(s,r){!function(t,e,n,s){Promise.resolve(s).then((function(e){t({value:e,done:n})}),e)}(s,r,(e=t[n](e)).done,e.value)}))}}},m_=function(t){return this instanceof m_?(this.v=t,this):new m_(t)},g_=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=n.apply(t,e||[]),i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(t){r[t]&&(s[t]=function(e){return new Promise((function(n,s){i.push([t,e,n,s])>1||o(t,e)}))})}function o(t,e){try{(n=r[t](e)).value instanceof m_?Promise.resolve(n.value.v).then(l,u):h(i[0][2],n)}catch(t){h(i[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function h(t,e){t(e),i.shift(),i.length&&o(i[0][0],i[0][1])}},b_=new DataView(new ArrayBuffer(0)),x_=new Uint8Array(b_.buffer),y_=function(){try{b_.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),w_=new y_("Insufficient data"),v_=new d_,k_=function(){function t(t,e,n,s,r,i,a,o){void 0===t&&(t=o_.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=HD),void 0===s&&(s=HD),void 0===r&&(r=HD),void 0===i&&(i=HD),void 0===a&&(a=HD),void 0===o&&(o=v_),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=s,this.maxArrayLength=r,this.maxMapLength=i,this.maxExtLength=a,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=b_,this.bytes=x_,this.headByte=-1,this.stack=[]}return t.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},t.prototype.setBuffer=function(t){this.bytes=l_(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=l_(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining(1)){var e=this.bytes.subarray(this.pos),n=l_(t),s=new Uint8Array(e.length+n.length);s.set(e),s.set(n,e.length),this.setBuffer(s)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return this.view.byteLength-this.pos>=t},t.prototype.createExtraByteError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra ".concat(e.byteLength-n," of ").concat(e.byteLength," byte(s) found at buffer[").concat(t,"]"))},t.prototype.decode=function(t){this.reinitializeState(),this.setBuffer(t);var e=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return e},t.prototype.decodeMulti=function(t){return p_(this,(function(e){switch(e.label){case 0:this.reinitializeState(),this.setBuffer(t),e.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return e.sent(),[3,1];case 3:return[2]}}))},t.prototype.decodeAsync=function(t){var e,n,s,r,i,a,o,l;return i=this,a=void 0,l=function(){var i,a,o,l,u,h,c,d;return p_(this,(function(p){switch(p.label){case 0:i=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),e=f_(t),p.label=2;case 2:return[4,e.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,i)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{a=this.doDecodeSync(),i=!0}catch(t){if(!(t instanceof y_))throw t}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),s={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(r=e.return)?[4,r.call(e)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,a]}throw h=(u=this).headByte,c=u.pos,d=u.totalPos,new RangeError("Insufficient data in parsing ".concat(c_(h)," at ").concat(d," (").concat(c," in the current buffer)"))}}))},new((o=void 0)||(o=Promise))((function(t,e){function n(t){try{r(l.next(t))}catch(t){e(t)}}function s(t){try{r(l.throw(t))}catch(t){e(t)}}function r(e){var r;e.done?t(e.value):(r=e.value,r instanceof o?r:new o((function(t){t(r)}))).then(n,s)}r((l=l.apply(i,a||[])).next())}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return g_(this,arguments,(function(){var n,s,r,i,a,o,l,u,h;return p_(this,(function(c){switch(c.label){case 0:n=e,s=-1,c.label=1;case 1:c.trys.push([1,13,14,19]),r=f_(t),c.label=2;case 2:return[4,m_(r.next())];case 3:if((i=c.sent()).done)return[3,12];if(a=i.value,e&&0===s)throw this.createExtraByteError(this.totalPos);this.appendBuffer(a),n&&(s=this.readArraySize(),n=!1,this.complete()),c.label=4;case 4:c.trys.push([4,9,,10]),c.label=5;case 5:return[4,m_(this.doDecodeSync())];case 6:return[4,c.sent()];case 7:return c.sent(),0==--s?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=c.sent())instanceof y_))throw o;return[3,10];case 10:this.totalPos+=this.pos,c.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=c.sent(),u={error:l},[3,19];case 14:return c.trys.push([14,,17,18]),i&&!i.done&&(h=r.return)?[4,m_(h.call(r))]:[3,16];case 15:c.sent(),c.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.doDecodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(s=t-128)){this.pushMapState(s),this.complete();continue t}e={}}else if(t<160){if(0!=(s=t-144)){this.pushArrayState(s),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(s=this.readU16())){this.pushArrayState(s),this.complete();continue t}e=[]}else if(221===t){if(0!==(s=this.readU32())){this.pushArrayState(s),this.complete();continue t}e=[]}else if(222===t){if(0!==(s=this.readU16())){this.pushMapState(s),this.complete();continue t}e={}}else if(223===t){if(0!==(s=this.readU32())){this.pushMapState(s),this.complete();continue t}e={}}else if(196===t){var s=this.lookU8();e=this.decodeBinary(s,1)}else if(197===t)s=this.lookU16(),e=this.decodeBinary(s,2);else if(198===t)s=this.lookU32(),e=this.decodeBinary(s,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)s=this.lookU8(),e=this.decodeExtension(s,1);else if(200===t)s=this.lookU16(),e=this.decodeExtension(s,2);else{if(201!==t)throw new i_("Unrecognized type byte: ".concat(c_(t)));s=this.lookU32(),e=this.decodeExtension(s,4)}this.complete();for(var r=this.stack;r.length>0;){var i=r[r.length-1];if(0===i.type){if(i.array[i.position]=e,i.position++,i.position!==i.size)continue t;r.pop(),e=i.array}else{if(1===i.type){if(void 0,"string"!=(a=typeof e)&&"number"!==a)throw new i_("The type of key must be string or number but "+typeof e);if("__proto__"===e)throw new i_("The key __proto__ is not allowed");i.key=e,i.type=2;continue t}if(i.map[i.key]=e,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue t}r.pop(),e=i.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new i_("Unrecognized array type byte: ".concat(c_(t)))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new i_("Max length exceeded: map length (".concat(t,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new i_("Max length exceeded: array length (".concat(t,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new i_("Max length exceeded: UTF-8 byte length (".concat(t,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+e+t)throw w_;var s,r=this.pos+e;return s=this.stateIsMapKey()&&(null===(n=this.keyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.keyDecoder.decode(this.bytes,r,t):t>n_?function(t,e,n){var s=t.subarray(e,e+n);return e_.decode(s)}(this.bytes,r,t):QD(this.bytes,r,t),this.pos+=e+t,s},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new i_("Max length exceeded: bin length (".concat(t,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(t+e))throw w_;var n=this.pos+e,s=this.bytes.subarray(n,n+t);return this.pos+=e+t,s},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new i_("Max length exceeded: ext length (".concat(t,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+e),s=this.decodeBinary(t,e+1);return this.extensionCodec.decode(s,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=qD(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),I_={},S_=n(477),C_=n.n(S_);function N_(){return C_()('(()=>{"use strict";const t=class{cumsum;constructor(t,e,s){this.cumsum=[];for(let t=0;t<s;t++){this.cumsum.push([]);for(let s=0;s<e;s++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let s=1;s<e;s++)this.cumsum[0][s]=this.cumsum[0][s-1]+t[s];for(let r=1;r<s;r++)this.cumsum[r][0]=this.cumsum[r-1][0]+t[r*e];for(let r=1;r<s;r++)for(let s=1;s<e;s++)this.cumsum[r][s]=t[r*e+s]+this.cumsum[r-1][s]+this.cumsum[r][s-1]-this.cumsum[r-1][s-1]}query(t,e,s,r){let a=this.cumsum[r][s];return e>0&&(a-=this.cumsum[e-1][s]),t>0&&(a-=this.cumsum[r][t-1]),t>0&&e>0&&(a+=this.cumsum[e-1][t-1]),a}},e=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,sdThresh:o}=t;if(e-6<0||e+6>=r.width)return null;if(s-6<0||s+6>=r.height)return null;const u=a.query(e-6,s-6,e+6,s+6)/169;let n=i.query(e-6,s-6,e+6,s+6);return n-=2*u*a.query(e-6,s-6,e+6,s+6),n+=169*u**2,n/169<o*o?null:(n=Math.sqrt(n),n)},s=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,tx:o,ty:u,vlen:n}=t,{data:m,width:h,height:l}=r;if(e-6<0||e+6>=h)return null;if(s-6<0||s+6>=l)return null;const c=a.query(e-6,s-6,e+6,s+6),f=i.query(e-6,s-6,e+6,s+6);let g=0,d=(s-6)*h+(e-6),y=(u-6)*h+(o-6);const M=h-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=m[d]*m[y],d+=1,y+=1;d+=M,y+=M}g-=a.query(o-6,u-6,o+6,u+6)/169*c;let p=f-c*c/169;return 0==p?null:(p=Math.sqrt(p),1*g/(n*p))},r=r=>{const{data:a,height:i,width:o}=r,u=[o*i];for(let t=0;t<u.length;t++)u[t]=!1;const n=new Float32Array(a.length);for(let t=0;t<o;t++)n[t]=-1,n[o*(i-1)+t]=-1;for(let t=0;t<i;t++)n[t*o]=-1,n[t*o+o-1]=-1;for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=0,i=0;for(let t=-1;t<=1;t++)r+=a[s+o*t+1]-a[s+o*t-1],i+=a[s+o+t]-a[s-o+t];r/=768,i/=768,n[s]=Math.sqrt((r*r+i*i)/2)}const m=new Uint32Array(1e3).fill(0),h=[-1,1,-o,o];for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=!0;for(let t=0;t<h.length;t++)if(n[s]<=n[s+h[t]]){r=!1;break}if(r){let t=Math.floor(1e3*n[s]);t>999&&(t=999),t<0&&(t=0),m[t]+=1,u[s]=!0}}const l=.02*o*i;let c=999,f=0;for(;c>=0&&(f+=m[c],!(f>l));)c--;for(let t=0;t<u.length;t++)u[t]&&1e3*n[t]<c&&(u[t]=!1);const g=[];for(const[t,e]of a.entries())g[t]=e**2;const d=new t(a,o,i),y=new t(g,o,i),M=new Float32Array(a.length);for(let t=0;t<o;t++)for(let a=0;a<i;a++){const i=a*o+t;if(!u[i]){M[i]=1;continue}const n=e({image:r,cx:t,cy:a,sdThresh:5,imageDataCumsum:d,imageDataSqrCumsum:y});if(null===n){M[i]=1;continue}let m=-1;for(let e=-10;e<=10;e++){for(let i=-10;i<=10;i++){if(i*i+e*e<=4)continue;const o=s({image:r,cx:t+i,cy:a+e,vlen:n,tx:t,ty:a,imageDataCumsum:d,imageDataSqrCumsum:y});if(null!==o&&o>m&&(m=o,m>.95))break}if(m>.95)break}M[i]=m}const p=(t=>{const{image:r,featureMap:a,templateSize:i,searchSize:o,maxSimThresh:u,minSimThresh:n,sdThresh:m,imageDataCumsum:h,imageDataSqrCumsum:l}=t;let{occSize:c}=t;const{data:f,width:g,height:d}=r;c=Math.floor(Math.min(r.width,r.height)/10);const y=3*(2*i+1),M=Math.floor(g/y),p=Math.floor(d/y),w=Math.floor(g/c)*Math.floor(d/c)+M*p,q=[],S=new Float32Array(f.length);for(const[t,e]of a.entries())S[t]=e;let D=0;for(;D<w;){let t=u,a=-1,f=-1;for(let e=0;e<d;e++)for(let s=0;s<g;s++)S[e*g+s]<t&&(t=S[e*g+s],a=s,f=e);if(-1===a)break;const y=e({image:r,cx:a,cy:f,sdThresh:0,imageDataCumsum:h,imageDataSqrCumsum:l});if(null===y){S[f*g+a]=1;continue}if(y/(2*i+1)<m){S[f*g+a]=1;continue}let M=1,p=-1;for(let e=-o;e<=o;e++){for(let i=-o;i<=o;i++){if(i*i+e*e>o*o)continue;if(0===i&&0===e)continue;const u=s({image:r,vlen:y,cx:a+i,cy:f+e,tx:a,ty:f,imageDataCumsum:h,imageDataSqrCumsum:l});if(null!==u){if(u<M&&(M=u,M<n&&M<t))break;if(u>p&&(p=u,p>.99))break}}if(M<n&&M<t||p>.99)break}if(M<n&&M<t||p>.99)S[f*g+a]=1;else{q.push({x:a,y:f}),D+=1;for(let t=-c;t<=c;t++)for(let e=-c;e<=c;e++)f+t<0||f+t>=d||a+e<0||a+e>=g||(S[(f+t)*g+(a+e)]=1)}}return q})({image:r,featureMap:M,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:d,imageDataSqrCumsum:y});return p},a=t=>{const e=Math.min(t.width,t.height);return[256/e,128/e].map((e=>Object.assign((({image:t,ratio:e})=>{const s=Math.round(t.width*e),r=Math.round(t.height*e),a=new Uint8Array(s*r);for(let i=0;i<s;i++){const o=Math.round(1*i/e);let u=Math.round(1*(i+1)/e)-1;u>=t.width&&(u=t.width-1);for(let n=0;n<r;n++){const r=Math.round(1*n/e);let m=Math.round(1*(n+1)/e)-1;m>=t.height&&(m=t.height-1);let h=0,l=0;for(let e=o;e<=u;e++)for(let s=r;s<=m;s++)h+=1*t.data[s*t.width+e],l+=1;a[n*s+i]=Math.floor(h/l)}}return{data:a,width:s,height:r}})({image:t,ratio:e}),{scale:e})))},i=(t,e)=>{const s=[];for(const[a,i]of t.entries()){const t=r(i),o={data:i.data,scale:i.scale,width:i.width,height:i.height,points:t};s.push(o),e(a)}return s};onmessage=t=>{const{data:e}=t;if("compile"===e.type){const{targetImages:t}=e,s=50/t.length;let r=0;const o=[];for(const e of t){const t=a(e),u=s/t.length,n=i(t,(()=>{r+=u,postMessage({type:"progress",percent:r})}));o.push(n)}postMessage({type:"compileDone",list:o})}}})();',"Worker",void 0,void 0)}const T_=({image:t,ratio:e})=>{const n=Math.round(t.width*e),s=Math.round(t.height*e),r=new Uint8Array(n*s);for(let i=0;i<n;i++){const a=Math.round(1*i/e);let o=Math.round(1*(i+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<s;l++){const s=Math.round(1*l/e);let u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let h=0,c=0;for(let e=a;e<=o;e++)for(let n=s;n<=u;n++)h+=1*t.data[n*t.width+e],c+=1;r[l*n+i]=Math.floor(h/c)}}return{data:r,width:n,height:s}},$_=t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const s=e.map((e=>Object.assign(T_({image:t,ratio:e}),{scale:e})));return s},E_=t=>{const e=Math.min(t.width,t.height),n=[256/e,128/e].map((e=>Object.assign(T_({image:t,ratio:e}),{scale:e})));return n},R_=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},A_=t=>{const{v1:e,v2:n}=t;let s=0;for(let t=0;t<e.length;t++){const r=(e[t]^n[t])>>>0;s+=R_(r)}return s},F_=()=>{const t={seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;const s=e[t];e[t]=e[n],e[n]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}};return t},M_=t=>{const{points:e,pointIndexes:n,centerPointIndex:s,randomizer:r}=t;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const a={};if(!i){const t=(t=>{const{points:e,pointIndexes:n,randomizer:s}=t,r=[];for(let t=0;t<n.length;t++)r.push(t);let i=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let t=0;t<128;t++){s.arrayShuffle({arr:r,sampleSize:8});let l=0;const u=[];for(let t=0;t<n.length;t++){let s=Number.MAX_SAFE_INTEGER;for(let i=0;i<8;i++){const a=n[r[i]],o=A_({v1:e[n[t]].descriptors,v2:e[a].descriptors});o<s&&(u[t]=r[i],s=o)}l+=s}o.push(u),l<i&&(i=l,a=t)}return o[a]})({points:e,pointIndexes:n,randomizer:r});for(let e=0;e<t.length;e++)void 0===a[n[t[e]]]&&(a[n[t[e]]]=[]),a[n[t[e]]].push(n[e])}1===Object.keys(a).length&&(i=!0);const o={centerPointIndex:s};if(i){o.leaf=!0,o.pointIndexes=[];for(let t=0;t<n.length;t++)o.pointIndexes.push(n[t]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach((t=>{o.children.push(M_({points:e,pointIndexes:a[t],centerPointIndex:+t,randomizer:r}))})),o},D_=({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=F_();return{rootNode:M_({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}},__=class{data;constructor(){this.data=[]}compileImageTargets(t,e){return new Promise((async n=>{const s=[];for(const e of t){const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),i=new Uint8Array(e.width*e.height);for(let t=0;t<i.length;t++){const e=4*t;i[t]=Math.floor((r.data[e]+r.data[e+1]+r.data[e+2])/3)}s.push({data:i,width:e.width,height:e.height})}const r=50/s.length;let i=0;this.data=[];for(let t=0;t<s.length;t++){const n=s[t],a=$_(n),o=r/a.length,l={targetImage:n,imageList:a,matchingData:await this._extractMatchingFeatures(a,(()=>{i+=o,e(i)}))};this.data.push(l)}for(const[t,e]of s.entries()){const n=E_(e);this.data[t].trackingImageList=n}const a=await new Promise((t=>{const n=new N_;n.onmessage=n=>{switch(n.data.type){case"progress":e(50+n.data.percent);break;case"compileDone":t(n.data.list)}},n.postMessage({type:"compile",targetImages:s})}));for(const[t,e]of a.entries())this.data[t].trackingData=e;n(this.data)}))}exportData(){const t=[];for(const e of this.data)t.push({targetImage:{width:e.targetImage.width,height:e.targetImage.height},trackingData:e.trackingData,matchingData:e.matchingData});const e=function(t,e){return void 0===e&&(e=h_),new u_(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat).encodeSharedRef(t)}({v:2,dataList:t});return e}importData(t){const e=function(t,e){return void 0===e&&(e=I_),new k_(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decode(t)}(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(const t of n)this.data.push({targetImage:t.targetImage,trackingData:t.trackingData,matchingData:t.matchingData});return this.data}async _extractMatchingFeatures(t,e){const n=[];for(const[s,r]of t.entries()){const t=new WD(r.width,r.height);await gu(),Li((()=>{const i=Ir(r.data,[r.data.length],"float32").reshape([r.height,r.width]),{featurePoints:a}=t.detect(i),o=a.filter((t=>t.maxima)),l=a.filter((t=>!t.maxima)),u=D_({points:o}),h=D_({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:h,width:r.width,height:r.height,scale:r.scale}),e(s)}))}return n}},O_=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},L_=(t,e,n)=>t*e+(1-t)*n,z_=class{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!(this.initialized&&this.tPrev&&this.dxPrev&&this.xPrev))return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map((()=>0)),this.tPrev=t,e;const{xPrev:n,tPrev:s,dxPrev:r}=this,i=t-s,a=O_(i,this.dCutOff),o=[],l=[],u=[];for(let t=0;t<e.length;t++){o[t]=(e[t]-n[t])/i,l[t]=L_(a,o[t],r[t]);const s=this.minCutOff+this.beta*Math.abs(l[t]),h=O_(i,s);u[t]=L_(h,e[t],n[t])}return this.xPrev=u,this.dxPrev=l,this.tPrev=t,u}};function P_(){return C_()('(()=>{"use strict";class t{constructor(t=[],r=e){if(this.data=t,this.length=this.data.length,this.compare=r,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,o=e[t];for(;t>0;){const s=t-1>>1,n=e[s];if(r(o,n)>=0)break;e[t]=n,t=s}e[t]=o}_down(t){const{data:e,compare:r}=this,o=this.length>>1,s=e[t];for(;t<o;){let o=1+(t<<1),n=e[o];const i=o+1;if(i<this.length&&r(e[i],n)<0&&(o=i,n=e[i]),r(n,s)>=0)break;e[t]=n,t=o}e[t]=s}}function e(t,e){return t<e?-1:t>e?1:0}const r=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},o=t=>{const{v1:e,v2:o}=t;let s=0;for(let t=0;t<e.length;t++){const n=(e[t]^o[t])>>>0;s+=r(n)}return s},s=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:o,scaleOneOverLogK:s})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*o+c,y:u[2]*r+u[3]*o+f,angle:n,scale:Math.log(i)*s}},n=t=>{const{keywidth:e,keyheight:r,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(e,r),g=Math.floor(e/2),w=Math.floor(r/2),p=[];for(const t of i){const e=t.querypoint.scale,r=t.keypoint.scale;if(0==r){console.error("ERROR divide zero");continue}const o=e/r;p.push(o*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],S=[],v={};for(const[t,e]of i.entries()){const{keypoint:r,querypoint:o}=e,{x:n,y:i,scale:m,angle:p}=s({querypoint:o,keypoint:r,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(n<l||n>=h||i<a||i>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}const d=y*(n-l)/(h-l),k=M*(i-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),T=10*(m- -1)/2;S[t]={binX:d,binY:k,binAngle:R,binScale:T};const I=Math.floor(d-.5),q=Math.floor(k-.5),N=Math.floor(T-.5),C=(Math.floor(R-.5)+c)%c;if(I<0||I+1>=y||q<0||q+1>=M||N<0||N+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){const e=I+t;for(let t=0;t<2;t++){const r=q+t;for(let t=0;t<2;t++){const o=(C+t)%c;for(let t=0;t<2;t++){const s=e+r*y+o*b+(N+t)*x;void 0===v[s]&&(v[s]=0),v[s]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(v).forEach((t=>{const e=+t;v[e]>k&&(k=v[e],R=e)})),k<3)return[];const T=Math.floor(R%x%b%y),I=Math.floor((R-T)%x%b/y),q=Math.floor((R-T-I*y)%x/b),N=Math.floor((R-T-I*y-q*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=S[t];if(Math.abs(e.binX-(T+.5))>=1)continue;if(Math.abs(e.binY-(I+.5))>=1)continue;if(Math.abs(e.binScale-(N+.5))>=1)continue;const r=Math.abs(e.binAngle-(q+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C},i=()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;const o=e[t];e[t]=e[r],e[r]=o}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}}),h=(t,e)=>[t[0]-e[0],t[1]-e[1]],l=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)},u=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),a=(t,e)=>{const r=(t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],o=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*o})(t);if(Math.abs(r)<=e)return null;const o=1/r;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},c=(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8];return[(e[0]*t[0]+e[1]*t[1]+e[2])/r,(e[3]*t[0]+e[4]*t[1]+e[5])/r]},f=Object.prototype.toString;function m(t){return f.call(t).endsWith("Array]")}function g(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]>i&&(i=t[h]);return i}function w(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]<i&&(i=t[h]);return i}function p(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!m(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=w(t),s=g(t);if(o===s)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var n=r.min,i=void 0===n?r.autoMinMax?o:0:n,h=r.max,l=void 0===h?r.autoMinMax?s:1:h;if(i>=l)throw new RangeError("min option must be smaller than max option");for(var u=(l-i)/(s-o),a=0;a<t.length;a++)e[a]=(t[a]-o)*u+i;return e}const d=" ".repeat(2),y=" ".repeat(4);function M(t,e={}){const{maxRows:r=15,maxColumns:o=10,maxNumSize:s=8,padMinus:n="auto"}=e;return`${t.constructor.name} {\\n${d}[\\n${y}${function(t,e,r,o,s){const{rows:n,columns:i}=t,h=Math.min(n,e),l=Math.min(i,r),u=[];if("auto"===s){s=!1;t:for(let e=0;e<h;e++)for(let r=0;r<l;r++)if(t.get(e,r)<0){s=!0;break t}}for(let e=0;e<h;e++){let r=[];for(let n=0;n<l;n++)r.push(b(t.get(e,n),o,s));u.push(`${r.join(" ")}`)}return l!==i&&(u[u.length-1]+=` ... ${i-r} more columns`),h!==n&&u.push(`... ${n-e} more rows`),u.join(`\\n${y}`)}(t,r,o,s,n)}\\n${d}]\\n${d}rows: ${t.rows}\\n${d}columns: ${t.columns}\\n}`}function b(t,e,r){return(t>=0&&r?` ${x(t,e-1)}`:x(t,e)).padEnd(e)}function x(t,e){let r=t.toString();if(r.length<=e)return r;let o=t.toFixed(e);if(o.length>e&&(o=t.toFixed(Math.max(0,e-(o.length-e)))),o.length<=e&&!o.startsWith("0.000")&&!o.startsWith("-0.000"))return o;let s=t.toExponential(e);return s.length>e&&(s=t.toExponential(Math.max(0,e-(s.length-e)))),s.slice(0)}function E(t,e,r){let o=r?t.rows:t.rows-1;if(e<0||e>o)throw new RangeError("Row index out of range")}function S(t,e,r){let o=r?t.columns:t.columns-1;if(e<0||e>o)throw new RangeError("Column index out of range")}function v(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function k(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function R(t,e,r,o,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(I("startRow",e),I("endRow",r),I("startColumn",o),I("endColumn",s),e>r||o>s||e<0||e>=t.rows||r<0||r>=t.rows||o<0||o>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function T(t,e=0){let r=[];for(let o=0;o<t;o++)r.push(e);return r}function I(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function q(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class N{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let o=new A(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)o.set(s,t,r[s*e+t]);return o}static rowVector(t){let e=new A(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new A(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new A(t,e)}static ones(t,e){return new A(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:o=Math.random}=r;let s=new A(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)s.set(r,t,o());return s}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:o=0,max:s=1e3,random:n=Math.random}=r;if(!Number.isInteger(o))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(o>=s)throw new RangeError("min must be smaller than max");let i=s-o,h=new A(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=o+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let o=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<o;t++)s.set(t,t,r);return s}static diag(t,e,r){let o=t.length;void 0===e&&(e=o),void 0===r&&(r=e);let s=Math.min(o,e,r),n=this.zeros(e,r);for(let e=0;e<s;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new A(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new this(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return s}static checkMatrix(t){return N.isMatrix(t)?t:new A(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);t++}return o}isReducedEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(o=!1);t++}return o}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let o=e;for(let s=e;s<t.rows;s++)t.get(s,r)>t.get(o,r)&&(o=s);if(0===t.get(o,r))r++;else{t.swapRows(e,o);let s=t.get(e,r);for(let o=r;o<t.columns;o++)t.set(e,o,t.get(e,o)/s);for(let o=e+1;o<t.rows;o++){let s=t.get(o,r)/t.get(e,r);t.set(o,r,0);for(let n=r+1;n<t.columns;n++)t.set(o,n,t.get(o,n)-t.get(e,n)*s)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,o=r-1;for(;o>=0;)if(0===t.maxRow(o))o--;else{let s=0,n=!1;for(;s<r&&!1===n;)1===t.get(o,s)?n=!0:s++;for(let r=0;r<o;r++){let n=t.get(r,s);for(let i=s;i<e;i++){let e=t.get(r,i)-n*t.get(o,i);t.set(r,i,e)}}o--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let o=new A(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)o.setSubMatrix(this,this.rows*t,this.columns*e);return o}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){E(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return A.rowVector(this.getRow(t))}setRow(t,e){E(this,t),e=v(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){E(this,t),E(this,e);for(let r=0;r<this.columns;r++){let o=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,o)}return this}getColumn(t){S(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return A.columnVector(this.getColumn(t))}setColumn(t,e){S(this,t),e=k(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){S(this,t),S(this,e);for(let r=0;r<this.rows;r++){let o=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,o)}return this}addRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=k(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){E(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){S(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){q(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)>t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){q(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)<t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}maxRow(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){E(this,t),q(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)>e&&(e=this.get(t,o),r[1]=o);return r}minRow(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){E(this,t),q(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)<e&&(e=this.get(t,o),r[1]=o);return r}maxColumn(t){if(S(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){S(this,t),q(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)>e&&(e=this.get(o,t),r[0]=o);return r}minColumn(t){if(S(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){S(this,t),q(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)<e&&(e=this.get(o,t),r[0]=o);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){N.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let o=0;o<e.length;o++)r+=e[o]*t[o];return r}mmul(t){t=A.checkMatrix(t);let e=this.rows,r=this.columns,o=t.columns,s=new A(e,o),n=new Float64Array(r);for(let i=0;i<o;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let o=0;o<r;o++)e+=this.get(t,o)*n[o];s.set(t,i,e)}}return s}strassen2x2(t){t=A.checkMatrix(t);let e=new A(2,2);const r=this.get(0,0),o=t.get(0,0),s=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(o+u),c=(i+l)*o,f=r*(n-u),m=l*(h-o),g=(r+s)*u,w=a+m-g+(s-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(o+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=A.checkMatrix(t);let e=new A(3,3);const r=this.get(0,0),o=this.get(0,1),s=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),S=r*c,v=(-r+l+u)*(c-m+p),k=(-r+l)*(m-p),R=(l+u)*(-c+m),T=(-s+u+a)*(w+d-y),I=(s-a)*(w-y),q=s*d,N=(u+a)*(-d+y),C=(-s+i+h)*(p+d-M),P=(s-h)*(p-M),V=(i+h)*(-d+M),F=S+q+o*g,z=(r+o+s-n-i-u-a)*w+x+E+S+T+q+N,j=S+v+R+(r+o+s-i-h-l-u)*p+q+C+V,$=b+i*(-c+f+g-w-p-d+M)+x+S+q+C+P,_=b+x+E+S+h*y,D=q+C+P+V+n*m,H=S+v+k+u*(-c+m+g-w-p-d+y)+T+I+q,U=T+I+q+N+l*f,L=S+v+k+R+a*M;return e.set(0,0,F),e.set(0,1,z),e.set(0,2,j),e.set(1,0,$),e.set(1,1,_),e.set(1,2,D),e.set(2,0,H),e.set(2,1,U),e.set(2,2,L),e}mmulStrassen(t){t=A.checkMatrix(t);let e=this.clone(),r=e.rows,o=e.columns,s=t.rows,n=t.columns;function i(t,e,r){let o=t.rows,s=t.columns;if(o===e&&s===r)return t;{let o=N.zeros(e,r);return o=o.setSubMatrix(t,0,0),o}}o!==s&&console.warn(`Multiplying ${r} x ${o} and ${s} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,s),l=Math.max(o,n);return e=i(e,h,l),function t(e,r,o,s){if(o<=512||s<=512)return e.mmul(r);o%2==1&&s%2==1?(e=i(e,o+1,s+1),r=i(r,o+1,s+1)):o%2==1?(e=i(e,o+1,s),r=i(r,o+1,s)):s%2==1&&(e=i(e,o,s+1),r=i(r,o,s+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(N.add(l,g),N.add(u,w),n,h),d=t(N.add(f,g),u,n,h),y=t(l,N.sub(c,w),n,h),M=t(g,N.sub(m,u),n,h),b=t(N.add(l,a),w,n,h),x=t(N.sub(f,l),N.add(u,c),n,h),E=t(N.sub(a,g),N.add(m,w),n,h),S=N.add(p,M);S.sub(b),S.add(E);let v=N.add(y,b),k=N.add(d,M),R=N.sub(p,d);R.add(y),R.add(x);let T=N.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(v,S.rows,0),T=T.setSubMatrix(k,0,S.columns),T=T.setSubMatrix(R,S.rows,S.columns),T.subMatrix(0,o-1,0,s-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new A(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&p(s,{min:e,max:r,output:s}),o.setRow(t,s)}return o}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new A(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&p(s,{min:e,max:r,output:s}),o.setColumn(t,s)}return o}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),o=this.get(e,this.columns-1-r);this.set(e,r,o),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),o=this.get(this.rows-1-r,e);this.set(r,e,o),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=A.checkMatrix(t);let e=this.rows,r=this.columns,o=t.rows,s=t.columns,n=new A(e*o,r*s);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<o;r++)for(let h=0;h<s;h++)n.set(o*i+r,s*e+h,this.get(i,e)*t.get(r,h));return n}kroneckerSum(t){if(t=A.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,o=this.kroneckerProduct(A.eye(r,r)),s=A.eye(e,e).kroneckerProduct(t);return o.add(s)}transpose(){let t=new A(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=C){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=C){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,o){R(this,t,e,r,o);let s=new A(e-t+1,o-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=o;e++)s.set(n-t,e-r,this.get(n,e));return s}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let o=new A(t.length,r-e+1);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);o.set(s,n-e,this.get(t[s],n))}return o}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let o=new A(r-e+1,t.length);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);o.set(n-e,s,this.get(n,t[s]))}return o}setSubMatrix(t,e,r){if((t=A.checkMatrix(t)).isEmpty())return this;R(this,e,e+t.rows-1,r,r+t.columns-1);for(let o=0;o<t.rows;o++)for(let s=0;s<t.columns;s++)this.set(e+o,r+s,t.get(o,s));return this}selection(t,e){!function(t,e){if(!m(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}(this,t),function(t,e){if(!m(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}(this,e);let r=new A(t.length,e.length);for(let o=0;o<t.length;o++){let s=t[o];for(let t=0;t<e.length;t++){let n=e[t];r.set(o,t,this.get(s,n))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new A(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=T(t.rows);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]+=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]+=t.get(r,o);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e+=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=T(t.rows,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]*=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]*=t.get(r,o);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e*=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(i,e)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case"column":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(e,i)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const o=t.rows,s=t.columns,n=o*s;let i=0,h=0,l=0;for(let e=0;e<o;e++)for(let o=0;o<s;o++)l=t.get(e,o)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[r])}(this,r),this;case"column":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[o])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let o=0;for(let e=0;e<t.columns;e++)o+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let o=0;for(let e=0;e<t.rows;e++)o+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[o])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let o=0;o<t.columns;o++)for(let s=0;s<t.rows;s++)r+=Math.pow(t.get(s,o),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return M(this,t)}}function C(t,e){return t-e}N.prototype.klass="Matrix","undefined"!=typeof Symbol&&(N.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return M(this)}),N.random=N.rand,N.randomInt=N.randInt,N.diagonal=N.diag,N.prototype.diagonal=N.prototype.diag,N.identity=N.eye,N.prototype.negate=N.prototype.neg,N.prototype.tensorProduct=N.prototype.kroneckerProduct;class A extends N{constructor(t,e){if(super(),A.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!m(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let o=0;o<t;o++){if(r[o].length!==e)throw new RangeError("Inconsistent array dimensions");if(!r[o].every((t=>"number"==typeof t)))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(r[o]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return E(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),E(this,t,!0),e=Float64Array.from(v(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){S(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let o=0;o<t;o++)r[o]=this.data[e][o];for(let o=t+1;o<this.columns;o++)r[o-1]=this.data[e][o];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),S(this,t,!0),e=k(this,e);for(let r=0;r<this.rows;r++){const o=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)o[s]=this.data[r][s];for(o[s++]=e[r];s<this.columns+1;s++)o[s]=this.data[r][s-1];this.data[r]=o}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(N,A);class P extends N{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}class V{constructor(t){let e,r,o,s,n,i,h,l,u,a=(t=P.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,o=0;o<u;o++)n+=a.get(e,o)*l[o];l[e]-=n,a.set(e,r,l[e])}for(s=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[s])&&(s=e);if(s!==r){for(o=0;o<f;o++)i=a.get(s,o),a.set(s,o,a.get(r,o)),a.set(r,o,i);h=m[s],m[s]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=A.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,o,s,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(s=0;s<h;s++)for(r=s+1;r<h;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s));for(s=h-1;s>=0;s--){for(o=0;o<n;o++)i.set(s,o,i.get(s,o)/e.get(s,s));for(r=0;r<s;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let o=0;o<r;o++)e*=t.get(o,o);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new A(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s>e?o.set(s,e,t.get(s,e)):s===e?o.set(s,e,1):o.set(s,e,0);return o}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new A(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s<=e?o.set(s,e,t.get(s,e)):o.set(s,e,0);return o}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function F(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class z{constructor(t){let e,r,o,s,n=(t=P.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(o=0;o<h;o++){let t=0;for(e=o;e<i;e++)t=F(t,n.get(e,o));if(0!==t){for(n.get(o,o)<0&&(t=-t),e=o;e<i;e++)n.set(e,o,n.get(e,o)/t);for(n.set(o,o,n.get(o,o)+1),r=o+1;r<h;r++){for(s=0,e=o;e<i;e++)s+=n.get(e,o)*n.get(e,r);for(s=-s/n.get(o,o),e=o;e<i;e++)n.set(e,r,n.get(e,r)+s*n.get(e,o))}}l[o]=-t}this.QR=n,this.Rdiag=l}solve(t){t=A.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let o,s,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(s=0;s<h;s++){for(i=0,o=n;o<r;o++)i+=e.get(o,n)*l.get(o,s);for(i=-i/e.get(n,n),o=n;o<r;o++)l.set(o,s,l.get(o,s)+i*e.get(o,n))}for(n=u-1;n>=0;n--){for(s=0;s<h;s++)l.set(n,s,l.get(n,s)/this.Rdiag[n]);for(o=0;o<n;o++)for(s=0;s<h;s++)l.set(o,s,l.get(o,s)-l.get(n,s)*e.get(o,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,o=r.columns,s=new A(o,o);for(t=0;t<o;t++)for(e=0;e<o;e++)t<e?s.set(t,e,r.get(t,e)):t===e?s.set(t,e,this.Rdiag[t]):s.set(t,e,0);return s}get orthogonalMatrix(){let t,e,r,o,s=this.QR,n=s.rows,i=s.columns,h=new A(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==s.get(r,r)){for(o=0,t=r;t<n;t++)o+=s.get(t,r)*h.get(t,e);for(o=-o/s.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+o*s.get(t,r))}}return h}}class j{constructor(t,e={}){if((t=P.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,o=t.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(s),u=Boolean(n),a=!1;if(r<o)if(i){h=t.transpose(),r=h.rows,o=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,o),f=Math.min(r+1,o),m=new Float64Array(f),g=new A(r,c),w=new A(o,o),p=new Float64Array(o),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,o),b=Math.max(0,Math.min(o-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=F(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<o;e++){if(t<M&&0!==m[t]){let o=0;for(let s=t;s<r;s++)o+=h.get(s,t)*h.get(s,e);o=-o/h.get(t,t);for(let s=t;s<r;s++)h.set(s,e,h.get(s,e)+o*h.get(s,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<o;e++)p[t]=F(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<o;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<o;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<o;e++){let o=-p[e]/p[t+1];for(let s=t+1;s<r;s++)h.set(s,e,h.get(s,e)+o*d[s])}}if(u)for(let e=t+1;e<o;e++)w.set(e,t,p[e])}}let E=Math.min(o,r+1);if(M<o&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let o=0;for(let s=t;s<r;s++)o+=g.get(s,t)*g.get(s,e);o=-o/g.get(t,t);for(let s=t;s<r;s++)g.set(s,e,g.get(s,e)+o*g.get(s,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=o-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<o;e++){let r=0;for(let s=t+1;s<o;s++)r+=w.get(s,t)*w.get(s,e);r=-r/w.get(t+1,t);for(let s=t+1;s<o;s++)w.set(s,e,w.get(s,e)+r*w.get(s,t))}for(let e=0;e<o;e++)w.set(e,t,0);w.set(t,t,1)}let S=E-1,v=0,k=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+k*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=k*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let s=F(m[r],e),n=m[r]/s,i=e/s;if(m[r]=s,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<o;t++)s=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,s)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let o=t;o<E;o++){let s=F(m[o],e),n=m[o]/s,i=e/s;if(m[o]=s,e=-i*p[o],p[o]=n*p[o],l)for(let e=0;e<r;e++)s=n*g.get(e,o)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,o)+n*g.get(e,t-1)),g.set(e,o,s)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),s=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+s)*(n-s)+i*i)/2,f=s*i*(s*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+s)*(h-s)+d,M=h*a;for(let e=t;e<E-1;e++){let s=F(y,M);0===s&&(s=Number.MIN_VALUE);let n=y/s,i=M/s;if(e!==t&&(p[e-1]=s),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<o;t++)s=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,s);if(s=F(y,M),0===s&&(s=Number.MIN_VALUE),n=y/s,i=M/s,m[e]=s,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)s=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,s)}p[E-2]=y,v+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=S;e++)w.set(e,t,-w.get(e,t));for(;t<S&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<o-1)for(let r=0;r<o;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let o=0;o<r;o++)e=g.get(o,t+1),g.set(o,t+1,g.get(o,t)),g.set(o,t,e);t++}v=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=o,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,o=this.s.length,s=A.zeros(o,o);for(let t=0;t<o;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(s),l=i.rows,u=n.rows,a=A.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let s=0;s<o;s++)r+=h.get(t,s)*n.get(e,s);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(A.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,o=t.columns,s=new A(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<o;r++)Math.abs(this.s[r])>e&&s.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new A(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let o=0;o<h;o++)r+=s.get(t,o)*n.get(e,o);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let o=0,s=r.length;o<s;o++)r[o]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return A.diag(this.s)}}function $(t,e=!1){return t=P.checkMatrix(t),e?new j(t).inverse():function(t,e,r=!1){return t=P.checkMatrix(t),e=P.checkMatrix(e),r?new j(t).solve(e):t.isSquare()?new V(t).solve(e):new z(t).solve(e)}(t,A.eye(t.rows))}const _=t=>{let e=0,r=0;for(const o of t)e+=o[0],r+=o[1];const o=e/t.length,s=r/t.length;let n=0;for(const e of t){const t=e[0]-o,r=e[1]-s;n+=Math.sqrt(t*t+r*r)}const i=Math.sqrt(2)*t.length/n,h=[];for(const e of t)h.push([(e[0]-o)*i,(e[1]-s)*i]);return{normPoints:h,param:{meanX:o,meanY:s,s:i}}},D=(t,e)=>{const{normPoints:r,param:o}=_(t),{normPoints:s,param:n}=_(e),i=s.length,h=[],l=[];for(let t=0;t<i;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*s[t][0],-r[t][1]*s[t][0]],o=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*s[t][1],-r[t][1]*s[t][1]];h.push(e),h.push(o),l.push([s[t][0]]),l.push([s[t][1]])}try{const t=new A(h),e=new A(l),r=t.transpose(),s=r.mmul(t),i=r.mmul(e),u=((t,e,r)=>{const o=r.s*r.meanX,s=r.s*r.meanY,n=[t[0]+o*t[6],t[1]+o*t[7],(t[0]+o*t[6])*-e.meanX+(t[1]+o*t[7])*-e.meanY+(t[2]+o)/e.s,t[3]+s*t[6],t[4]+s*t[7],(t[3]+s*t[6])*-e.meanX+(t[4]+s*t[7])*-e.meanY+(t[5]+s)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})($(s).mmul(i).to1DArray(),o,n);return u}catch(t){return null}},H=({H:t,testPoints:e,keyframe:r})=>{const o=a(t,1e-5);if(null===o)return!1;const s=[];for(const t of e)s.push(c(t,o));return!(((t,e,r,o)=>{const s=h(e,t),n=h(r,t),i=h(o,t),u=h(e,r),a=h(o,r),c=l(s,n),f=l(n,i),m=l(s,i),g=l(u,a);return Math.min(c,f,m,g)})(s[0],s[1],s[2],s[3])<r.width*r.height*1e-4||!((t,e,r,o)=>{const s=u(t,e,r)<=0;return u(e,r,o)<=0===s&&u(r,o,t)<=0===s&&u(o,t,e)<=0===s})(s[0],s[1],s[2],s[3]))},U=({inH:t})=>{const e=1/t[8],r=[];for(let o=0;o<8;o++)r[o]=t[o]*e;return r[8]=1,r},L=({H:t,srcPoint:e,dstPoint:r,oneOverScaleSqr:o})=>{const s=c(e,t),n=[s[0]-r[0],s[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*o)},X=({H:t,testPoints:e})=>{const r=[];for(const[o,s]of e.entries())r[o]=c(s,t);for(let t=0;t<e.length;t++){const a=t,c=(t+1)%e.length,f=(t+2)%e.length;if(o=e[a],s=e[c],n=e[f],i=r[a],h=r[c],l=r[f],u(o,s,n)>0!=u(i,h,l)>0)return!1}var o,s,n,i,h,l;return!0},O=t=>{const{dstPoints:e,keyframe:r,srcPoints:o,quickMode:s}=t,n=[[0,0],[r.width,0],[r.width,r.height],[0,r.height]];if(o.length<4)return null;const h=Math.min(10,o.length),l=i(),a=o.map(((t,e)=>e));l.arrayShuffle({arr:a,sampleSize:a.length});const c=s?10:20,f=2*c;let m=0;const g=[];for(;m<f&&g.length<c;){if(m+=1,l.arrayShuffle({arr:a,sampleSize:4}),w=o[a[0]],p=o[a[1]],d=o[a[2]],y=o[a[3]],M=e[a[0]],b=e[a[1]],x=e[a[2]],E=e[a[3]],u(w,p,d)>0!=u(M,b,x)>0||u(p,d,y)>0!=u(b,x,E)>0||u(d,y,w)>0!=u(x,E,M)>0||u(y,w,p)>0!=u(E,M,b)>0)continue;const t=D([o[a[0]],o[a[1]],o[a[2]],o[a[3]]],[e[a[0]],e[a[1]],e[a[2]],e[a[3]]]);null!==t&&X({H:t,testPoints:n})&&g.push(t)}var w,p,d,y,M,b,x,E;if(0===g.length)return null;const S=[];for(const t of g)S.push({H:t,cost:0});let v=h;for(let t=0;t<o.length&&S.length>2;t+=v){v=Math.min(h,o.length-t);const r=t+v;for(let s=0;s<S.length;s++)for(let n=t;n<r;n++){const t=L({H:S[s].H,srcPoint:o[n],dstPoint:e[n],oneOverScaleSqr:1e4});S[s].cost+=t}S.sort(((t,e)=>t.cost-e.cost)),S.splice(-Math.floor((S.length+1)/2))}let k=null;for(let t=0;t<S.length;t++){const e=U({inH:S[t].H});if(H({H:e,testPoints:n,keyframe:r})){k=e;break}}return k},Y=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(const e of t.pointIndexes)n.push(e);return}const h=[];for(const s of t.children){const t=s.centerPointIndex;if(null==t)continue;const n=o({v1:e[t].descriptors,v2:r.descriptors});h.push(n)}const l=Math.min(Number.MAX_SAFE_INTEGER,...h);for(const[e,r]of t.children.entries())h[e]!==l&&s.push({node:r,d:h[e]});for(const[o,u]of t.children.entries())h[o]===l&&Y({node:u,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const t=s.pop();if(t){const{node:o}=t;Y({node:o,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}}},G=t=>{const{H:e,matches:r,threshold:o}=t,s=o**2,n=[];for(const t of r){const{querypoint:r,keypoint:o}=t,i=c([o.x,o.y],e);(i[0]-r.x)*(i[0]-r.x)+(i[1]-r.y)*(i[1]-r.y)<=s&&n.push(t)}return n},W=e=>{const{keyframe:r,querypoints:s,querywidth:i,queryheight:h,debugMode:l}=e,u={},f=(e=>{const{keyframe:r,querypoints:s}=e,n=[];for(const e of s){const s=e.maxima?r.maximaPoints:r.minimaPoints;if(0===s.length)continue;const i=e.maxima?r.maximaPointsCluster.rootNode:r.minimaPointsCluster.rootNode,h=[],l=new t([],((t,e)=>t.d-e.d));Y({node:i,keypoints:s,querypoint:e,queue:l,keypointIndexes:h,numPop:0});let u=-1,a=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let t=0;t<h.length;t++){const r=s[h[t]],n=o({v1:r.descriptors,v2:e.descriptors});n<a?(c=a,a=n,u=h[t]):n<c&&(c=n)}-1!==u&&(c===Number.MAX_SAFE_INTEGER||1*a/c<.7)&&n.push({querypoint:e,keypoint:s[u]})}return n})({keyframe:r,querypoints:s});if(l&&(u.matches=f),f.length<6)return{debugExtra:u};const m=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:f});l&&(u.houghMatches=m);const g=O({srcPoints:m.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:m.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===g)return{debugExtra:u};const w=G({H:g,matches:m,threshold:3});if(l&&(u.inlierMatches=w),w.length<6)return{debugExtra:u};const p=a(g,1e-5);if(!p)return{debugExtra:u};const d=(t=>{const{keyframe:e,querypoints:r,HInv:s}=t,n=[];for(const t of r){const r=c([t.x,t.y],s);let i=-1,h=Number.MAX_SAFE_INTEGER,l=Number.MAX_SAFE_INTEGER;const u=t.maxima?e.maximaPoints:e.minimaPoints;for(const[e,s]of u.entries()){if((s.x-r[0])**2+(s.y-r[1])**2>100)continue;const n=o({v1:s.descriptors,v2:t.descriptors});n<h?(l=h,h=n,i=e):n<l&&(l=n)}-1!==i&&(l===Number.MAX_SAFE_INTEGER||1*h/l<.7)&&n.push({querypoint:t,keypoint:u[i]})}return n})({keyframe:r,querypoints:s,HInv:p});l&&(u.matches2=d);const y=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:d});l&&(u.houghMatches2=y);const M=O({srcPoints:y.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:y.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===M)return{debugExtra:u};const b=G({H:M,matches:y,threshold:3});return l&&(u.inlierMatches2=b),{H:M,matches:b,debugExtra:u}},Q=(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],J=(t,e,r,o=0)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]}),K=(t,e,r,o=0)=>{const s=J(t,e,r,o),{x:n,y:i,z:h}=s;return{x:n/h,y:i/h}},B=[[],[],[]],Z=[[],[]],tt=[[],[],[]],et=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o,inlierProb:s})=>{const n=s<1;let i=t,h=0,l=0;const u=new Array(r.length),a=new Array(r.length),c=new Array(r.length),f=new Array(r.length);for(let t=0;t<=10;t++){const m=Q(e,i);for(let t=0;t<r.length;t++){const e=K(m,r[t].x,r[t].y,r[t].z),s=o[t].x-e.x,n=o[t].y-e.y;c[t]=s,f[t]=n,u[t]=s**2+n**2}let g=0;if(l=0,n){const t=Math.max(3,Math.floor(r.length*s)-1);for(let t=0;t<r.length;t++)a[t]=u[t];a.sort(((t,e)=>t-e)),g=Math.max(4*a[t],16);for(let t=0;t<r.length;t++)a[t]>g?l+=g/6:l+=g/6*(1-(1-a[t]/g)*(1-a[t]/g)*(1-a[t]/g))}else l=u.reduce(((t,e)=>t+e),0);if(l/=r.length,l<.1)break;if(t>0&&l/h>.99)break;if(10===t)break;h=l;const w=[],p=[];for(let t=0;t<r.length;t++){if(n&&u[t]>g)continue;const o=st({modelViewProjectionTransform:m,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-u[t]/g)*(1-u[t]/g);for(let t=0;t<2;t++)for(let r=0;r<6;r++)o[t][r]*=e;w.push([c[t]*e]),w.push([f[t]*e])}else w.push([c[t]]),w.push([f[t]]);for(let t=0;t<o.length;t++)p.push(o[t])}const d=ot({dU:w,J_U_S:p});if(null===d)break;i=rt({modelViewTransform:i,dS:d})}return{modelViewTransform:i,err:l}},rt=({modelViewTransform:t,dS:e})=>{let r,o,s,n=e[0]**2+e[1]**2+e[2]**2;n<1e-6?(r=1,o=0,s=0,n=0):(n=Math.sqrt(n),r=e[0]/n,o=e[1]/n,s=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;B[0][0]=r*r*l+i,B[0][1]=r*o*l-s*h,B[0][2]=r*s*l+o*h,B[0][3]=e[3],B[1][0]=o*r*l+s*h,B[1][1]=o*o*l+i,B[1][2]=o*s*l-r*h,B[1][3]=e[4],B[2][0]=s*r*l-o*h,B[2][1]=s*o*l+r*h,B[2][2]=s*s*l+i,B[2][3]=e[5];const u=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)u[e][r]=t[e][0]*B[0][r]+t[e][1]*B[1][r]+t[e][2]*B[2][r];u[e][3]+=t[e][3]}return u},ot=({dU:t,J_U_S:e})=>{const r=new A(e),o=new A(t),s=r.transpose(),n=s.mmul(r),i=s.mmul(o);let h;try{h=$(n)}catch(t){return null}return h.mmul(i).to1DArray()},st=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:o})=>{const s=e,{x:n,y:i,z:h}=o,l=J(t,n,i,h),u=l.z*l.z;Z[0][0]=r[0][0]*l.z/u,Z[0][1]=r[0][1]*l.z/u,Z[0][2]=(r[0][2]*l.z-r[2][2]*l.x)/u,Z[1][0]=r[1][0]*l.z/u,Z[1][1]=r[1][1]*l.z/u,Z[1][2]=(r[1][2]*l.z-r[2][2]*l.y)/u,tt[0][0]=s[0][2]*i,tt[0][1]=-s[0][2]*n,tt[0][2]=s[0][1]*n-s[0][0]*i,tt[0][3]=s[0][0],tt[0][4]=s[0][1],tt[0][5]=s[0][2],tt[1][0]=s[1][2]*i,tt[1][1]=-s[1][2]*n,tt[1][2]=s[1][1]*n-s[1][0]*i,tt[1][3]=s[1][0],tt[1][4]=s[1][1],tt[1][5]=s[1][2],tt[2][0]=s[2][2]*i,tt[2][1]=-s[2][2]*n,tt[2][2]=s[2][1]*n-s[2][0]*i,tt[2][3]=s[2][0],tt[2][4]=s[2][1],tt[2][5]=s[2][2];const a=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){a[t][e]=0;for(let r=0;r<3;r++)a[t][e]+=Z[t][r]*tt[r][e]}return a};let nt,it,ht=[],lt=!1;onmessage=t=>{const{data:e}=t;switch(e.type){case"setup":(t=>{ht=t.matchingDataList,lt=t.debugMode,nt=new class{queryWidth;queryHeight;debugMode;constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){const r={frames:[]};let o=null;for(const[s,n]of t.entries()){const t=W({keyframe:n,querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});if(!t)continue;const{H:i,matches:h,debugExtra:l}=t;r.frames.push(l),i&&(null===o||(o?.matches?.length??0<h.length))&&(o={keyframeIndex:s,matches:h,H:i})}if(null===o||!o.matches)return{keyframeIndex:-1,debugExtra:r};const s=[],n=[],i=t[o.keyframeIndex];for(const t of o.matches){const e=t.querypoint,r=t.keypoint;s.push({x:e.x,y:e.y}),n.push({x:(r.x+.5)/i.scale,y:(r.y+.5)/i.scale,z:0})}return{keyframeIndex:o.keyframeIndex,screenCoords:s,worldCoords:n,debugExtra:r}}}(t.inputWidth,t.inputHeight,lt),it=new class{projectionTransform;constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return(t=>{const{projectionTransform:e,screenCoords:r,worldCoords:o}=t,s=D(o.map((t=>[t.x,t.y])),r.map((t=>[t.x,t.y])));if(!s)return null;const n=new A([[s[0],s[1],s[2]],[s[3],s[4],s[5]],[s[6],s[7],s[8]]]),i=$(new A(e)).mmul(n).to1DArray(),h=Math.sqrt(i[0]*i[0]+i[3]*i[3]+i[6]*i[6]),l=Math.sqrt(i[1]*i[1]+i[4]*i[4]+i[7]*i[7]),u=(h+l)/2,a=[];a[0]=i[0]/h,a[3]=i[3]/h,a[6]=i[6]/h,a[1]=i[1]/l,a[4]=i[4]/l,a[7]=i[7]/l,a[2]=a[3]*a[7]-a[6]*a[4],a[5]=a[6]*a[1]-a[0]*a[7],a[8]=a[0]*a[4]-a[1]*a[3];const c=Math.sqrt(a[2]*a[2]+a[5]*a[5]+a[8]*a[8]);a[2]/=c,a[5]/=c,a[8]/=c;const f=[];return f[0]=i[2]/u,f[1]=i[5]/u,f[2]=i[8]/u,[[a[0],a[1],a[2],f[0]],[a[3],a[4],a[5],f[1]],[a[6],a[7],a[8],f[2]]]})({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return(({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o})=>{const s=r.reduce(((t,e)=>t+e.x),0)/r.length,n=r.reduce(((t,e)=>t+e.y),0)/r.length,i=[];for(const t of r)i.push({x:t.x-s,y:t.y-n,z:t.z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*s+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*s+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*s+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(const t of l){const r=et({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:o,inlierProb:t});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*s-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*s-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*s-a[2][1]*n,a)})({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}(t.projectionTransform)})(e);break;case"match":(t=>{const e=t.targetIndexes;let r=-1,o=null,s=null;for(const n of e){const{keyframeIndex:e,screenCoords:i,worldCoords:h,debugExtra:l}=nt.matchDetection(ht[n],t.featurePoints);if(s=l,-1!==e){const t=it.estimate({screenCoords:i,worldCoords:h});t&&(r=n,o=t);break}}postMessage({type:"matchDone",targetIndex:r,modelViewTransform:o,debugExtra:s})})(e);break;case"trackUpdate":(t=>{const{modelViewTransform:e,worldCoords:r,screenCoords:o}=t,s=it.refineEstimate({initialModelViewTransform:e,screenCoords:o,worldCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})})(e)}}})();',"Worker",void 0,void 0)}const B_="updateMatrix",W_=class{inputWidth;inputHeight;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;cropDetector;inputLoader;markerDimensions;onUpdate;debugMode;processingVideo;interestedTargetIndex;projectionTransform;projectionMatrix;worker;workerMatchDone;workerTrackDone;trackingStates;tracker;constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:s=!1,maxTrack:r=1,warmupTolerance:i=null,missTolerance:a=null,filterMinCF:o=null,filterBeta:l=null}){this.inputHeight=e,this.inputWidth=t,this.maxTrack=r,this.filterMinCF=PD(o)?.001:o,this.filterBeta=PD(l)?1e3:l,this.warmupTolerance=PD(i)?5:i,this.missTolerance=PD(a)?5:a,this.cropDetector=new class{width;height;debugMode;cropSize;lastRandomIndex;detector;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n,this.cropSize=this._getCropSize(t,e),this.detector=new WD(t,e,n),this.lastRandomIndex=4}_getCropSize(t,e){const n=Math.min(t,e)/2;return Math.pow(2,Math.round(Math.log(n)/Math.log(2)))}async detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),s=await this._detect(t,n,e);return this.debugMode&&(s.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),s}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),r=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return r<0&&(r=0),s<0&&(s=0),r>=this.width-this.cropSize&&(r=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,r,s)}_detect(t,e,n){const s=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:r,debugExtra:i}=this.detector.detect(s);return r.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(i.projectedImage=s.arraySync()),s.dispose(),{featurePoints:r,debugExtra:i}}}(this.inputWidth,this.inputHeight,s),this.inputLoader=new class{width;height;texShape;context;program;tempPixelHandle;constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const s=Wi();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=NC.PIXELS}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=Wi();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===q().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return _i().makeTensorFromTensorInfo(n)}}(this.inputWidth,this.inputHeight),this.markerDimensions=[],this.onUpdate=n,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,h=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[h,0,this.inputWidth/2],[0,h,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new P_,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{switch(t.data.type){case"matchDone":this.workerMatchDone?.(t.data);break;case"trackUpdateDone":this.workerTrackDone?.(t.data)}}}showTFStats(){console.log(Oi().numTensors),console.table(Oi())}addImageTargets(t){return new Promise((async e=>{const n=await fetch(t),s=await n.arrayBuffer();e(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(t){const e=(new __).importData(t),n=[],s=[],r=[];for(const t of e)s.push(t.matchingData),n.push(t.trackingData),r.push([t.targetImage.width,t.targetImage.height]);return this.tracker=new class{projectionTransform;trackingKeyframeList;debugMode;kernelCaches;featurePointsListT;imagePixelsListT;imagePropertiesListT;constructor(t,e,n,s,r,i=!1){this.projectionTransform=n,this.debugMode=i,this.trackingKeyframeList=e.map((t=>t[0]));const a=Math.max(...this.trackingKeyframeList.map((({points:t})=>t.length)));this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(const[t,e]of this.trackingKeyframeList.entries()){const{featurePoints:n,imagePixels:s,imageProperties:r}=this._prebuild(e,a);this.featurePointsListT[t]=n,this.imagePixelsListT[t]=s,this.imagePropertiesListT[t]=r}this.kernelCaches={}}dummyRun(t){const e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let s={};const r=(a=e,[[(i=this.projectionTransform)[0][0]*a[0][0]+i[0][2]*a[2][0],i[0][0]*a[0][1]+i[0][2]*a[2][1],i[0][0]*a[0][2]+i[0][2]*a[2][2],i[0][0]*a[0][3]+i[0][2]*a[2][3]],[i[1][1]*a[1][0]+i[1][2]*a[2][0],i[1][1]*a[1][1]+i[1][2]*a[2][1],i[1][1]*a[1][2]+i[1][2]*a[2][2],i[1][1]*a[1][3]+i[1][2]*a[2][3]],[a[2][0],a[2][1],a[2][2],a[2][3]]]);var i,a;const o=this._buildAdjustedModelViewTransform(r),l=this.featurePointsListT[n],u=this.imagePixelsListT[n],h=this.imagePropertiesListT[n],c=this._computeProjection(o,t,n),{matchingPointsT:d,simT:p}=this._computeMatching(l,u,h,c),f=d.arraySync(),m=p.arraySync(),g=this.trackingKeyframeList[n],b=[],x=[],y=[];for(const[t,e]of f.entries())if(m[t]>.8&&t<g.points.length){y.push(t);const n=SD(r,e[0],e[1]);x.push(n),b.push({x:g.points[t].x/g.scale,y:g.points[t].y/g.scale,z:0})}return this.debugMode&&(s={projectedImage:c.arraySync(),matchingPoints:f,trackedPoints:x,goodTrack:y}),o.dispose(),c.dispose(),d.dispose(),p.dispose(),{worldCoords:b,screenCoords:x,debugExtra:s}}_prebuild(t,e){return Li((()=>{const n=t.scale,s=[];for(let r=0;r<e;r++)r<t.points.length?s.push([t.points[r].x/n,t.points[r].y/n]):s.push([-1,-1]);const r=Ir(t.data,[t.width*t.height]),i=Ir([t.width,t.height,t.scale],[3]);return{featurePoints:Ir(s,[s.length,2],"float32"),imagePixels:r,imageProperties:i}}))}_computeMatching(t,e,n,s){const r=s.shape[0],i=s.shape[1],a=t.shape[0];return this.kernelCaches.computeMatching||(this.kernelCaches.computeMatching=((t,e,n,s,r,i,a,o)=>[CD(6,13,n,s,r,i,a,o),ND(n,s,r,o),TD(o)])(0,0,10,1,21,r,i,a)),Li((()=>{const r=this.kernelCaches.computeMatching,i=this._compileAndRun(r[0],[t,e,n,s]),a=i.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[t,n,a]),simT:this._compileAndRun(r[2],[i,a])}}))}_computeProjection(t,e,n){const s=this.trackingKeyframeList[n].width,r=this.trackingKeyframeList[n].height,i=this.trackingKeyframeList[n].scale,a=s+"-"+r+"-"+i;return this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),this.kernelCaches.computeProjection[a]||(this.kernelCaches.computeProjection[a]=((t,e,n)=>({variableNames:["M","pixel"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${n});\n\t      float x = float(coords[1]) / float(${n});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`}))(r,s,i)),Li((()=>{const n=this.kernelCaches.computeProjection[a];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return Li((()=>Ir(t.map((t=>t.map((t=>t/1e3)))),[3,4])))}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return _i().makeTensorFromTensorInfo(n)}}(r,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=r,{dimensions:r,matchingDataList:s,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:s,modelViewTransform:r}=await this._workerMatch(n,e);return{targetIndex:s,modelViewTransform:r}}async _trackAndUpdate(t,e,n){const{worldCoords:s,screenCoords:r}=await this.tracker.track(t,e,n);return s.length<4?null:await this._workerTrackUpdate(e,{worldCoords:s,screenCoords:r})}_glProjectionMatrix(t){const{projectionTransform:e,width:n,height:s,near:r,far:i}=t,a=[[2*e[0][0]/n,0,-(2*e[0][2]/n-1),0],[0,2*e[1][1]/s,-(2*e[1][2]/s-1),0],[0,0,-(i+r)/(i-r),-2*i*r/(i-r)],[0,0,-1,0]],o=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)o.push(a[e][t]);return o}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}async _matchImageTarget(t,e){if(t>=this.maxTrack)return;const n=[];for(const[t,e]of this.trackingStates.entries())e.isTracking||-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||n.push(t);const{targetIndex:s,modelViewTransform:r}=await this._detectAndMatch(e,n);-1!==s&&(this.trackingStates[s].isTracking=!0,this.trackingStates[s].currentModelViewTransform=r)}async _updateTrackingState(t,e){const n=this.trackingStates[e];if(!n.isTracking||!n.currentModelViewTransform)return;const s=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null!==s?n.currentModelViewTransform=s:n.isTracking=!1}_showAfterWarmup(t){const e=this.trackingStates[t];!e.showing&&e.isTracking&&(e.trackMiss=0,e.trackCount++,e.trackCount<=this.warmupTolerance||(e.showing=!0,e.trackingMatrix=null,e.filter.reset()))}_hideAfterMiss(t){const e=this.trackingStates[t];e.showing&&(e.isTracking?e.trackMiss=0:(e.trackCount=0,e.trackMiss++,e.trackMiss<this.missTolerance||(e.showing=!1,e.trackingMatrix=null,this.onUpdate?.({type:B_,targetIndex:t,worldMatrix:null}))))}_onTrackShow(t){const e=this.trackingStates[t];if(!e.showing||!e.currentModelViewTransform)return;const n=this._glModelViewMatrix(e.currentModelViewTransform,t);e.trackingMatrix=e.filter.filter(Date.now(),n),this.onUpdate?.({type:B_,worldMatrix:BD(e.trackingMatrix),targetIndex:t})}async _doVideoProcessing(t){for(;this.processingVideo;){const e=this.inputLoader.loadInput(t),n=this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0);await this._matchImageTarget(n,e);for(const[t]of this.trackingStates.entries())await this._updateTrackingState(e,t),this._showAfterWarmup(t),this._hideAfterMiss(t),this._onTrackShow(t);e.dispose(),this.onUpdate?.({type:"processDone"}),await gu()}}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.maxTrack;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new z_({minCutOff:this.filterMinCF,beta:this.filterBeta})});this._doVideoProcessing(t)}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:s}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:s}}async match(t,e){const{modelViewTransform:n,debugExtra:s}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:s}}async _workerMatch(t,e){return new Promise((async n=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}async track(t,e,n){const s=this.inputLoader.loadInput(t),r=this.tracker.track(s,e,n);return s.dispose(),r}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}async _workerTrackUpdate(t,e){return new Promise((async n=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:s,screenCoords:r}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,screenCoords:r,worldCoords:s})}))}};var U_=n(379),V_=n.n(U_),G_=n(795),H_=n.n(G_),j_=n(569),q_=n.n(j_),K_=n(565),X_=n.n(K_),Y_=n(216),Z_=n.n(Y_),J_=n(589),Q_=n.n(J_),tO=n(485),eO={};eO.styleTagTransform=Q_(),eO.setAttributes=X_(),eO.insert=q_().bind(null,"head"),eO.domAPI=H_(),eO.insertStyleElement=Z_(),V_()(tO.Z,eO),tO.Z&&tO.Z.locals&&tO.Z.locals;const nO="yes",sO="hidden",rO=class{loadingModal;compatibilityModal;scanningMask;constructor({uiLoading:t,uiScanning:e,uiError:n}){this.loadingModal=t===nO?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '):document.querySelector(t),this.compatibilityModal=n===nO?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '):document.querySelector(n),this.scanningMask=e===nO?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '):document.querySelector(e),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove(sO)}hideLoading(){this.loadingModal&&this.loadingModal.classList.add(sO)}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove(sO)}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add(sO)}showScanning(){this.scanningMask&&this.scanningMask.classList.remove(sO)}hideScanning(){this.scanningMask&&this.scanningMask.classList.add(sO)}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.querySelector("a-scene").appendChild(n),n}},iO={Controller:W_,Compiler:__,UI:rO};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE=iO),window.MINDAR.IMAGE.Controller||(window.MINDAR.IMAGE.Controller=W_),window.MINDAR.IMAGE.Compiler||(window.MINDAR.IMAGE.Compiler=__),window.MINDAR.IMAGE.UI||(window.MINDAR.IMAGE.UI=rO)})()})();